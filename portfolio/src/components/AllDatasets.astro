---
import DatasetIcon from '@icons/DatasetIcon.astro';
import DatasetCard from '@components/DatasetCard.astro';

interface Props {
    languaje: string,
}

const {
    languaje,
} = Astro.props;

const { last_datasets } = await import('@portfolio/last_datasets.json');
const { colors } = await import('@portfolio/consts.json');

// Get list of all datasets
const datasets_list = [];
for (const dataset in last_datasets) {
    if (dataset.includes('dataset') && dataset != 'view_more_datasets' && dataset != 'datasets_page_link') {
        datasets_list.push(dataset);
    }
}

if ( languaje === 'es' ) {
    var datasets_title = last_datasets.title.es;
} else if ( languaje === 'en' ) {
    var datasets_title = last_datasets.title.en;
} else if ( languaje === 'pt' ) {
    var datasets_title = last_datasets.title.pt;
}
---

<section class="datasets">
    <h1>{datasets_title} <DatasetIcon /></h1>
    <div class="datasets-iframes">
        {languaje === 'es' && (
            <>
                {datasets_list.reverse().map((datasetKey) => (
                    <DatasetCard 
                        src={last_datasets[datasetKey].src}
                        title={last_datasets[datasetKey].title}
                        description={last_datasets[datasetKey].description.es}
                    />
                ))}
            </>
        )}
		{languaje === 'en' && (
            <>
                {datasets_list.reverse().map((datasetKey) => (
                    <DatasetCard 
                        src={last_datasets[datasetKey].src}
                        title={last_datasets[datasetKey].title}
                        description={last_datasets[datasetKey].description.en}
                    />
                ))}
            </>
        )}
        {languaje === 'pt' && (
            <>
                {datasets_list.reverse().map((datasetKey) => (
                    <DatasetCard 
                        src={last_datasets[datasetKey].src}
                        title={last_datasets[datasetKey].title}
                        description={last_datasets[datasetKey].description.pt}
                    />
                ))}
            </>
        )}
	</div>
</section>

<style define:vars={{}}>
    .datasets {
		display: flex;
		flex-direction: column;
		justify-content: space-between;
		gap: 10px;
		width: 100%;
	}

	.datasets-iframes {
		display: flex;
		flex-direction: column;
		flex-wrap: wrap;
		gap: 40px;
		justify-content: space-between;
	}

    h1 {
        position: sticky;
        top: var(--sticky_top_default);
        z-index: 1;
        margin-bottom: 0px;
        padding-bottom: 0px;
    }

    @media (max-width: 649px) {
        h1 {
            top: var(--sticky_top_649px);
        }
    }

    @media (max-width: 418px) {
        h1 {
            top: var(--sticky_top_418px);
        }
    }

    @media (max-width: 334px) {
        h1 {
            top: var(--sticky_top_334px);
        }
    }

    @media (max-width: 315px) {
        h1 {
            top: var(--sticky_top_315px);
        }
    }

    @media (max-width: 229px) {
        h1 {
            top: var(--sticky_top_229px);
        }
    }
</style>