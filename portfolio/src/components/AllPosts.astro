---
import PostCard from '@components/PostCard.astro';

const { posts } = await import('@portfolio/posts.json');
const { sticky_top_positions } = await import('@portfolio/consts.json');
const { colors } = await import('@portfolio/consts.json');

interface Props {
    languaje: string,
}

const {
    languaje,
} = Astro.props;

const all_pages_list = await Astro.glob('../pages/*.astro');
const currentPath = Astro.url.pathname;

// Get list of all posts
const posts_list = [];
for (const post in posts) {
    if (post.includes('post') && post != 'view_last_posts' && post != 'posts_page_link') {
        posts_list.push(post);
    }
}

const sticky_top_default=sticky_top_positions.sticky_top_default;
const sticky_top_649px=sticky_top_positions.sticky_top_649px;
const sticky_top_418px=sticky_top_positions.sticky_top_418px;
const sticky_top_334px=sticky_top_positions.sticky_top_334px;
const sticky_top_315px=sticky_top_positions.sticky_top_315px;
const sticky_top_229px=sticky_top_positions.sticky_top_229px;

const color_white = colors.white;
---

<section class="posts">
    <h1>Posts <img src="/icons/align-left-2.svg" width="30px" height="30px" alt="align-left-2" loading="lazy" /></h1>
    <div>
        {languaje === 'es' && (
            <>
                {posts_list.reverse().map((postKey) => (
                    <PostCard 
                        title={posts[postKey].title.es} 
                        description={posts[postKey].description.es} 
                        image_path={posts[postKey].image_path.es} 
                        post_link={posts[postKey].post_link.es} 
                    />
                ))}
            </>
        )}
        {languaje === 'en' && (
            <>
                {posts_list.reverse().map((postKey) => (
                    <PostCard 
                        title={posts[postKey].title.en} 
                        description={posts[postKey].description.en} 
                        image_path={posts[postKey].image_path.en} 
                        post_link={posts[postKey].post_link.en} 
                    />
                ))}
            </>
        )}
        {languaje === 'pt' && (
            <>
                {posts_list.reverse().map((postKey) => (
                    <PostCard 
                        title={posts[postKey].title.es} 
                        description={posts[postKey].description.es} 
                        image_path={posts[postKey].image_path.es} 
                        post_link={posts[postKey].post_link.es} 
                    />
                ))}
            </>
        )}
    </div>
</section>

<style define:vars={{
	sticky_top_default,
	sticky_top_649px,
	sticky_top_418px,
	sticky_top_334px,
	sticky_top_315px,
	sticky_top_229px,
    color_white,
}}>
	.posts {
		display: flex;
		flex-direction: column;
		justify-content: space-between;
		gap: 50px;
		width: 100%;
	}

	.posts > div {
		display: flex;
		flex-direction: column;
		justify-content: flex-start;
		align-items: flex-start;
		gap: 50px;
	}

    h1 {
		position: sticky;
		top: var(--sticky_top_default);
        z-index: 1;
	}

	@media (max-width: 649px) {
	h1 {
			top: var(--sticky_top_649px);
		}
	}

	@media (max-width: 418px) {
	h1 {
			top: var(--sticky_top_418px);
		}
	}

	@media (max-width: 334px) {
	h1 {
			top: var(--sticky_top_334px);
		}
	}

	@media (max-width: 315px) {
	h1 {
			top: var(--sticky_top_315px);
		}
	}

	@media (max-width: 229px) {
	h1 {
			top: var(--sticky_top_229px);
		}
	}

    a {
        color: var(--color_white);
    }
</style>
