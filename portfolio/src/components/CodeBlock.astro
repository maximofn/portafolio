---
const { color_palette } = await import('../../consts.json');
const { colors } = await import('../../consts.json');
const { max_width } = await import('../../consts.json');
const { svg_paths } = await import('../../consts.json');

interface Props {
    text: string[];
}

const { 
    text,
} = Astro.props;

const code_block_bakcground_color = color_palette.color_950;
const code_block_font_color = colors.color_white;
const code_block_border_color = color_palette.color_700;
const button_hover_background_color = color_palette.color_900;
---

<pre class="code-block" tabindex="0" data-languaje="bash">
    <img class="copy-button" src={svg_paths.copy_svg_path} alt="Copy" width="20" height="20">
    {text.map((line, index) => (
        <code>{line}</code> // Add a span to each line
    ))}
</pre>

<style define:vars={{code_block_bakcground_color, code_block_font_color, code_block_border_color, button_hover_background_color, max_width}}>

	pre {
		background-color: var(--code_block_bakcground_color);
		color: var(--code_block_font_color);
		display: flex;
		flex-direction: column;
		justify-content: flex-start;
        align-items: flex-start;
		gap: 10px;
		font: 1rem 'Fira Code', monospace;
		padding: 10px 2px 20px 20px;
		border: 1px solid var(--code_block_border_color);
		border-radius: 6px;
		max-width: var(--max_width);
	}

    pre img {
        align-self: flex-end;
    }

	.copy-button {
        margin: 0px;
        padding: 10px;
        /* margin-right: 10px; */
        max-width: fit-content;
        max-height: fit-content;
		border: none;
        background-color: transparent;
        cursor: pointer;
	}

	img:hover {
		background-color: var(--button_hover_background_color);
	}

    code {
        margin-right: 30px;
    }
	
</style>

<script>
	const codeBlock = document.querySelectorAll('.code-block'); 
  
	codeBlock.forEach(block => {
		const buttonCopy = block.querySelector('.copy-button');
		const codeLines = block.querySelectorAll('code'); 
  
		buttonCopy.addEventListener('click', () => {
			let textForCopy = '';
	
			codeLines.forEach(line => {
				textForCopy += line.textContent + '\n';
			});
			// Remove last '\n'
			textForCopy = textForCopy.slice(0, -1);
	
			navigator.clipboard.writeText(textForCopy)
			.then(() => {
				// Change the text of the button
				buttonCopy.textContent = 'Copied!'; 
				setTimeout(() => {
					buttonCopy.textContent = 'Copy';
				}, 1500); 
			})
			.catch(err => {
				console.error('Error copying text: ', err);
			});
		});
	});
</script>

