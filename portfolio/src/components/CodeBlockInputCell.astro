---
const { color_palette } = await import('@portfolio/consts.json');
const { colors } = await import('@portfolio/consts.json');
const { max_width } = await import('@portfolio/consts.json');
const { svg_paths } = await import('@portfolio/consts.json');

interface Props {
    text: string[];
    languaje: string;
}

const { 
    text,
    languaje,
} = Astro.props;

const code_block_bakcground_color = color_palette.color_950;
const code_block_font_color = colors.color_white;
const code_block_border_color = color_palette.color_700;
const button_hover_background_color = color_palette.color_900;

// remplace </span> <span by </span><span> </span><span
text.forEach((line, index) => {
	text[index] = line.replace(/<\/span>\s+<span/g, '</span><span> </span><span');
});

// Generate html for each line
const codeLinesHTML = text.map((line) => `<div class="input-cell-code">${line}</div>`);
---

<pre class="code-block-input-cell" tabindex="0" data-languaje={languaje}>
	<div class="code-container-image-input-cell">
		{codeLinesHTML.map((line) => (<div set:html={line}/>))}
	</div>
	<div class="copy-button-container">
		<img decoding="async" class="copy-button-image-input-cell" src={svg_paths.copy_svg_path} alt="Copy" width="20" height="20" loading="lazy">
	</div>
</pre>

<style define:vars={{
	code_block_bakcground_color,
	code_block_font_color,
	code_block_border_color,
	button_hover_background_color,
	max_width,
}}>

	pre {
		background-color: var(--code_block_bakcground_color);
		color: var(--code_block_font_color);
		display: flex;
		flex-direction: row;
		justify-content: flex-start;
        align-items: center;
		border: 1px solid var(--code_block_border_color);
		border-radius: 7px;
		max-width: var(--max_width);
		width: 100%;
		margin: 0px;
		padding: 0px;
	}

	.code-container-image-input-cell {
		display: flex;
		flex-direction: column;
		justify-content: flex-start;
		align-items: flex-start;
		align-content: flex-start;
		gap: 0px;
		width: 100%;
		margin: 20px 0px;
		padding-left: 20px;
	}

	.code-container-image-input-cell div{
		text-wrap: pretty;
		display: flex;
		flex-direction: row;
		flex-wrap: wrap;
		font: 1rem 'Fira Code', monospace;
	}
	@media (max-width: 768px) {
		.code-container-image-input-cell div {
			font-size: 0.9rem;
		}
	}
	@media (max-width: 590px) {
		.code-container-image-input-cell div {
			font-size: 0.8rem;
		}
	}
	@media (max-width: 530px) {
		.code-container-image-input-cell div {
			font-size: 0.7rem;
		}
	}
	@media (max-width: 480px) {
		.code-container-image-input-cell div {
			font-size: 0.6rem;
		}
	}
	@media (max-width: 370px) {
		.code-container-image-input-cell div {
			font-size: 0.4rem;
		}
	}

	pre .copy-button-container {
		align-self: flex-start;
	}
	.copy-button-container {
		display: flex;
		flex-direction: row;
		justify-content: flex-end;
		align-items: center;
		align-content: flex-end;
		gap: 10px;
		margin-top: 5px;
		margin-right: 20px;
	}
	.copy-button-image-input-cell {
        margin: 0px;
        padding: 10px;
        max-width: fit-content;
        max-height: fit-content;
		border: none;
		border-radius: 7px;
        background-color: transparent;
        cursor: pointer;
	}
	img:hover {
		background-color: var(--button_hover_background_color);
	}
	
</style>

<script>
	const codeBlockInputCell = document.querySelectorAll('.code-block-input-cell');
	
	codeBlockInputCell.forEach((codeBlock) => {
		const copyButton = codeBlock.querySelector('.copy-button-image-input-cell');
		const codeLinesInputCell = codeBlock.querySelectorAll('.input-cell-code');

		copyButton.addEventListener('click', () => {
			console.log('Copy button clicked');
			let textForCopy = '';

			console.log('textForCopy:');
			codeLinesInputCell.forEach((line) => {
				console.log("\t" + line.innerText);
				textForCopy += line.innerText + '\n';
			});
			// Remove the last '\n'
			textForCopy = textForCopy.slice(0, -1);
			console.log('textForCopy: \n' + textForCopy);

			navigator.clipboard.writeText(textForCopy);
		});
	});
</script>