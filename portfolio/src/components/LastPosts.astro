---
import PostCard from '@components/PostCard.astro';
import AlingLeft2 from '@icons/AlingLeft2.astro';
import GlassesIcon from '@icons/GlassesIcon.astro';

const { last_posts } = await import('@portfolio/last_posts.json');
const { sticky_top_positions } = await import('@portfolio/consts.json');
const { colors } = await import('@portfolio/consts.json');

interface Props {
    languaje: string,
    continue_reading: boolean,
}

const {
    languaje = 'es',
    continue_reading = false,
} = Astro.props;

const all_pages_list = Object.values(import.meta.glob('../pages/*.astro', { eager: true }));
const currentPath = Astro.url.pathname;

// Get list of all posts
const posts_list = [];
for (const post in last_posts) {
    if (post.includes('post') && post != 'view_last_posts' && post != 'posts_page_link') {
        posts_list.push(post);
    }
}

// Get the last 3 posts in reverse order, except the current post
let counter = 0;
let post1 = {};
let post2 = {};
let post3 = {};
for (let i = posts_list.length - 1; i >= 0; i--) {
	if (currentPath.includes(last_posts[posts_list[i]].post_link.es)) {
		continue;
	}
    const post_item = last_posts[posts_list[i]].post_link.es
    if (counter === 0) {
        post1 = last_posts[posts_list[i]];
    } else if (counter === 1) {
        post2 = last_posts[posts_list[i]];
    } else if (counter === 2) {
        post3 = last_posts[posts_list[i]];
    }
    else {
        break;
    }
    counter++;
}

if ( languaje.toLowerCase() === 'es' ) {
    if ( continue_reading === false ) { var section_title = last_posts.title.es; }
    else { var section_title = "Seguir leyendo"; }
    var posts_href = last_posts.posts_page_link.es;
    var view_last_posts = last_posts.view_last_posts.es;

    var post1_title = post1.title.es;
    var post1_description = post1.description.es;
    var post1_image_path = post1.image_path.es;
    var post1_link = post1.post_link.es;

    var post2_title = post2.title.es;
    var post2_description = post2.description.es;
    var post2_image_path = post2.image_path.es;
    var post2_link = post2.post_link.es;

    var post3_title = post3.title.es;
    var post3_description = post3.description.es;
    var post3_image_path = post3.image_path.es;
    var post3_link = post3.post_link.es;
} else if ( languaje.toLowerCase() === 'en' ) {
    if ( continue_reading === false ) { var section_title = last_posts.title.en; }
    else { var section_title = "Continue reading"; }
    var posts_href = last_posts.posts_page_link.en;
    var view_last_posts = last_posts.view_last_posts.en;

    var post1_title = post1.title.en;
    var post1_description = post1.description.en;
    var post1_image_path = post1.image_path.en;
    var post1_link = post1.post_link.en;

    var post2_title = post2.title.en;
    var post2_description = post2.description.en;
    var post2_image_path = post2.image_path.en;
    var post2_link = post2.post_link.en;

    var post3_title = post3.title.en;
    var post3_description = post3.description.en;
    var post3_image_path = post3.image_path.en;
    var post3_link = post3.post_link.en;
} else if ( languaje.toLowerCase() === 'pt' ) {
    if ( continue_reading === false ) { var section_title = last_posts.title.pt; }
    else { var section_title = "Continuar lendo"; }
    var posts_href = last_posts.posts_page_link.pt;
    var view_last_posts = last_posts.view_last_posts.pt;

    var post1_title = post1.title.pt;
    var post1_description = post1.description.pt;
    var post1_image_path = post1.image_path.pt;
    var post1_link = post1.post_link.pt;

    var post2_title = post2.title.pt;
    var post2_description = post2.description.pt;
    var post2_image_path = post2.image_path.pt;
    var post2_link = post2.post_link.pt;

    var post3_title = post3.title.pt;
    var post3_description = post3.description.pt;
    var post3_image_path = post3.image_path.pt;
    var post3_link = post3.post_link.pt;
}

const sticky_top_default=sticky_top_positions.sticky_top_default;
const sticky_top_649px=sticky_top_positions.sticky_top_649px;
const sticky_top_418px=sticky_top_positions.sticky_top_418px;
const sticky_top_334px=sticky_top_positions.sticky_top_334px;
const sticky_top_315px=sticky_top_positions.sticky_top_315px;
const sticky_top_229px=sticky_top_positions.sticky_top_229px;

const color_white = colors.white;
---

<section class="posts">
    { continue_reading === false ? (
        <h2>{section_title} <AlingLeft2 /></h2>
    ) : (
        <h2>{section_title} <GlassesIcon /></h2>
    )}
    <div>
        <PostCard
            title={post1_title}
            description={post1_description}
            image_path={post1_image_path}
            post_link={post1_link}
        />
        <PostCard
            title={post2_title}
            description={post2_description}
            image_path={post2_image_path}
            post_link={post2_link}
        />
        <PostCard
            title={post3_title}
            description={post3_description}
            image_path={post3_image_path}
            post_link={post3_link}
        />
    </div>
    <a href={posts_href}>{view_last_posts}</a>
</section>

<style define:vars={{
	sticky_top_default,
	sticky_top_649px,
	sticky_top_418px,
	sticky_top_334px,
	sticky_top_315px,
	sticky_top_229px,
    color_white,
}}>
	.posts {
		display: flex;
		flex-direction: column;
		justify-content: space-between;
		gap: 50px;
		width: 100%;
	}

	.posts > div {
		display: flex;
		flex-direction: column;
		justify-content: flex-start;
		align-items: flex-start;
		gap: 50px;
	}

	.posts-title {
		position: sticky;
		top: var(--sticky_top_default);
	}

    a {
        color: var(--color_white);
    }
</style>
