---
import GoToSite from './GoToSite.astro';

interface Props {
	title: string;
	description: string;
	image_path: string;
	project_link: string;
	code_link: string;
	background_color: string;
	border_color: string;
}

const { title, description, image_path, project_link,
code_link, background_color, border_color } = Astro.props;
---

<article class="project-card">
	<h3>{title}</h3>
	<img src={image_path} alt={title} loading="lazy" />
	<p>{description}</p>
	<div class="project-links">
		<GoToSite 
			text="Ver proyecto"
			svg="/icons/arrow-sm-right.svg"
			url={project_link}
			border_color={border_color}
			background_color={background_color}
		/>
		<GoToSite 
			text="Ver cÃ³digo"
			svg="/icons/arrow-up-right-from-square.svg"
			url={code_link}
			border_color={border_color}
			background_color="transparent"
		/>
	</div>
</article>

<style define:vars={{background_color}}>
	.project-card {
		display: flex;
		flex-direction: column;
		justify-content: flex-start;
		align-items: center;

		padding: 1px;
		/* TODO pasar el background color por variable */
		/* background-color: var(--background-color); */
		/* background-color: rebeccapurple; */
		border: #23262d 1px solid;
		border-radius: 10px;
	}
	.project-card p {
		align-self: flex-start;
	}
	/* .project-card > a {
		width: 100%;
		text-decoration: none;
		line-height: 1.4;
		padding: calc(1.5rem - 1px);
		border-radius: 8px;
		color: white;
		background-color: #23262d;
		opacity: 0.8;
	} */
	.project-card > img {
		max-width: 400px;
		width: 100%;
		height: auto;
	}
	.project-links {
		display: flex;
		flex-direction: row;
		justify-content: space-around;
		align-items: center;
		width: 100%;
	}
	/* .project-card:is(:hover, :focus-within) {
		background-position: 0;
		background-image: var(--accent-gradient);
	}
	.project-card:is(:hover, :focus-within) h2 {
		color: rgb(var(--accent-light));
	} */
</style>
