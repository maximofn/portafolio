---
import GoToSiteNoTransparent from '@components/GoToSiteNoTransparent.astro';
import GoToSiteTransparent from '@components/GoToSiteTransparent.astro';

const { color_palette } = await import('@portfolio/consts.json');
const { colors } = await import('@portfolio/consts.json');
const { svg_paths } = await import('@portfolio/consts.json');

// Map of technology logos
const technologyLogos = {
    "Python": "/icons/python-logo-only.svg",
    "Pytorch": "/icons/pytorch-logo.svg",
    "TensorRT": "/icons/tensorrt-logo.webp",
    "HuggingFace": "/icons/hf-logo-official.svg",
    "Nvidia Jetson": "/icons/nvidia-jetson-logo.webp",
    "YOLO": "/icons/yolo-logo.webp",
    "Altium": "/icons/Altium_Designer_Logo.webp",
    "STM32": "/icons/stm-32-logo.webp",
    "C": "/icons/c.webp",
    "Eclipse": "/icons/eclipse-logo.webp",
    "LangChain": "/icons/langchain_icon.webp",
    "PostgreSQL": "/icons/Postgresql.webp",
    "PGVector": "/icons/pgvector.webp",
    "MPLAB": "/icons/mplab-ide-8-5.webp",
    "Ollama": "/icons/ollama-dark.svg",
    "Astro": "/icons/astro-icon-light-gradient.svg",
    "Docker": "/icons/docker.svg",
    "Terminal": "/icons/terminal.svg",
    "Git": "/icons/Git.svg",
    "Conda": "/icons/Conda.svg",
    "JavaScript": "/icons/javascript.svg",
    "TypeScript": "/icons/typescript.svg",
    "React": "/icons/React.svg",
    "Node.js": "/icons/nodejs.svg",
    "HTML5": "/icons/HTML5.svg",
    "CSS3": "/icons/CSS3.svg",
    "SQL": "/icons/sql.svg",
    "MongoDB": "/icons/mongodb.svg",
    "AWS": "/icons/aws.svg",
    "GCP": "/icons/gcp.svg",
    "Azure": "/icons/Azure.svg",
    "Azure Machine Learning": "/icons/azure-machine-learning-logo.webp",
    "Linux": "/icons/linux.svg",
    "Kubernetes": "/icons/kubernetes.webp",
    "Jenkins": "/icons/jenkins.svg",
    "Terraform": "/icons/terraform.svg",
    "Ansible": "/icons/ansible.svg",
    "GraphQL": "/icons/graphql.svg",
    "REST": "/icons/rest-api.svg",
    "Django": "/icons/django.svg",
    "Flask": "/icons/flask.svg",
    "FastAPI": "/icons/fastapi.svg",
    "Express": "/icons/express.svg",
    "Next.js": "/icons/nextjs.svg",
    "Vue.js": "/icons/vuejs.svg",
    "Angular": "/icons/angular.svg",
    "Redux": "/icons/redux.svg",
    "Webpack": "/icons/webpack.svg",
    "Babel": "/icons/babel.svg",
    "Jest": "/icons/jest.svg",
    "Cypress": "/icons/cypress.svg",
    "Selenium": "/icons/selenium.svg",
    "MySQL": "/icons/mysql.svg",
    "Redis": "/icons/redis.svg",
    "ElasticSearch": "/icons/elasticsearch.svg",
    "RabbitMQ": "/icons/rabbitmq.svg",
    "Kafka": "/icons/kafka.svg",
    "Nginx": "/icons/nginx.svg",
    "Apache": "/icons/apache.svg",
    "Sass": "/icons/sass.svg",
    "Less": "/icons/less.svg",
    "Tailwind": "/icons/tailwindcss.svg",
    "Bootstrap": "/icons/bootstrap.svg",
    "Material-UI": "/icons/material-ui.svg",
    "Figma": "/icons/figma.svg",
    "Sketch": "/icons/sketch.svg",
    "Adobe XD": "/icons/adobe-xd.svg",
    "Photoshop": "/icons/photoshop.svg",
    "Illustrator": "/icons/illustrator.svg",
    "Jira": "/icons/jira.svg",
    "Confluence": "/icons/confluence.svg",
    "Trello": "/icons/trello.svg",
    "Slack": "/icons/slack.svg",
    "GitHub": "/icons/github.svg",
    "GitHub Actions": "/icons/GitHub_actions.webp",
    "GitLab": "/icons/gitlab.svg",
    "Bitbucket": "/icons/bitbucket.svg",
    "Whisper": "/icons/OpenAIwhisper.webp",
	"OpenAI": "/icons/OpenAI.webp",
    "Spaces": "/icons/spaces.webp"
};

interface Props {
	title: string;
	description: string;
	image_path: string;
	image_hover_path: string;
	project_link: string;
	code_link: string;
	languaje: string;
	technologies: string[];
	go_to_site_no_transparent_target: string;
}

const {
	title,
	description,
	image_path,
	image_hover_path,
	project_link,
	code_link,
	languaje,
	technologies,
	go_to_site_no_transparent_target = '',
} = Astro.props;

const project_card_border_color = color_palette.color_300_transparent;
const project_card_background_color = color_palette.color_1500_transparent;
const first_image_box_shadow_color = color_palette.color_500;

if ( languaje.toLowerCase() === 'es' ) {
	var view_project_text = 'Ver proyecto';
	var view_code_text = 'Ver código';
}
else if ( languaje.toLowerCase() === 'en' ) {
	var view_project_text = 'View project';
	var view_code_text = 'View code';
}
else if ( languaje.toLowerCase() === 'pt' ) {
	var view_project_text = 'Ver projeto';
	var view_code_text = 'Ver código';
}
---

<article class="project-card">
	<header><h3>{title}</h3></header>

	<article class="project-card-image-group">
		<img onerror="this.parentNode.removeChild(this)" onerror="this.parentNode.removeChild(this)" decoding="async" class="principal-image" src={image_path} alt={title} loading="lazy" />
		<img onerror="this.parentNode.removeChild(this)" onerror="this.parentNode.removeChild(this)" decoding="async" class="hover-image" src={image_hover_path}  alt={title} loading="lazy" />
	</article>

	<footer>
		<div class="technologies">
			{Array.isArray(technologies) && technologies.map((technology) => (
				<div class="technology">
					{technologyLogos[technology] ? (
						<img 
							onerror="this.style.display='none'" 
							decoding="async" 
							src={technologyLogos[technology]} 
							alt={technology} 
							width="30" 
							height="30" 
							loading="lazy"
						/>
					) : null}
					{/* <span>{technology}</span> */}
				</div>
			))}
		</div>
		<p>{description}</p>
		<div class="project-links">
			{project_link && (
				<GoToSiteNoTransparent
					text={view_project_text}
					svg={svg_paths.arrow_sm_right_svg_path}
					url={project_link}
					target={go_to_site_no_transparent_target}
				></GoToSiteNoTransparent>
			)}
			{code_link && (
				<GoToSiteTransparent
					text={view_code_text}
					svg={svg_paths.arrow_up_right_from_square_svg_path}
					url={code_link}
					target='_blank'
				></GoToSiteTransparent>
			)}
		</div>
	</footer>
</article>

<style define:vars={{project_card_border_color, project_card_background_color, first_image_box_shadow_color}}>
	.project-card {
		display: flex;
		flex-direction: column;
		justify-content: space-between;
		align-items: center;
		max-width: 350px;

		padding: 30px 30px 30px 30px;
		margin-bottom: 30px;
		border: var(--project_card_border_color) 1px solid;
		border-radius: 7px;
		background-color: var(--project_card_background_color);
		box-shadow: 3px 3px 6px 0 hsla(0, 0%, 100%, 0.3);
	}
	@media (max-width: 375px) {
		.project-card {
			padding: 0px 0px 20px 0px;
		}
	}
	footer {
		width: 100%;
	}
	header {
		padding-bottom: 20px;
	}
	p {
		align-self: flex-start;
		overflow: auto;
	}
	.project-card-image-group {
		position: relative;
		transition: all 0.3s ease;
	}
	.project-card-image-group img:first-child {
		box-shadow: 0 60px 60px -60px var(--first_image_box_shadow_color);
		border-radius: 7px;
		max-width: 350px;
		object-fit: cover;
		width: 100%;
		height: auto;
	}
	.project-card-image-group img:last-child {
		position: absolute;
		max-width: 350px;
		width: 100%;
		bottom: 0;
		left: 0;
		right: 0;
		margin: auto;
		transform: translateY(25%);
		transition: 0.3s ease;
		opacity: 0;
	}
	.project-card-image-group:hover {
		transform: 
			perspective(250px)
			rotateX(10deg)
			translateY(-5%)
			translateZ(0);
	}
	.project-card-image-group::before {
		content: '';
		position: absolute;
		bottom: 0;
		height: 100%;
		width: 100%;
		background-image: linear-gradient(to bottom, transparent 5%, rgba(0, 0, 0, 0.5) 50%, rgba(0, 0, 0) 95%);
		opacity: 0;
		transition: all 0.3s ease;
	}
	.project-card-image-group:hover::before {
		opacity: 1;
	}
	.project-card-image-group:hover img:last-child {
		opacity: 1;
		transform: translateY(10%);
	}
	.project-links {
		display: flex;
		flex-direction: row;
		justify-content: space-around;
		align-items: center;
		width: 100%;
	}
	.technologies {
		display: flex;
		flex-wrap: wrap;
		gap: 10px;
		margin-bottom: 20px;
		justify-content: flex-start;
	}
	.technology {
		display: flex;
		flex-direction: column;
		align-items: center;
		gap: 5px;
	}
	.technology img {
		width: 30px;
		height: 30px;
		object-fit: contain;
	}
	.technology span {
		font-size: 0.8rem;
	}
	@media (max-width: 550px) {
		.technology span {
			font-size: 0.7rem;
		}
	}
</style>
