---
import SocialLinks from '@components/SocialLinks.astro';

const { color_palette } = await import('@portfolio/consts.json');
const { colors } = await import('@portfolio/consts.json');

interface Props {
    languaje: string,
}

const {
    languaje,
} = Astro.props;

const torch_color = color_palette.color_900;
const torch_shader_color = color_palette.color_500;
const torch_button_color = color_palette.color_700;
const torch_slip_color = color_palette.color_800;
const torch_slip_border_color = color_palette.color_100;
const light_color = colors.color_white;
const light_off_color = colors.color_black;

let ligth_on_me = '';
if ( languaje.toLowerCase() == 'en' ) {
    ligth_on_me = 'Turn me on';
} else if ( languaje.toLowerCase() == 'es' ) {
    ligth_on_me = 'Enci√©ndeme';
} else if ( languaje.toLowerCase() == 'pt' ) {
    ligth_on_me = 'Acenda-me';
} else {
    ligth_on_me = 'Turn me on';
}
---

<div class="mytorch">
    <div class="mytorchBody"></div>
    <div class="mytorchConeUp"></div>
</div>
<section class="torchSection">
	<div class="wrapper">
        <div class="torchblock">
            <input type="radio" name="switch" value="on" id="switch-on" />
            <label for="switch-on" class="switch-label"></label>
            <input type="radio" name="switch" value="off" id="switch-off" checked="checked" />
            <label for="switch-off" class="switch-label"></label>
            <div class="torchBody"></div>
            <div class="torchConeUp"></div>
            <div class="btnouter"></div>
            <div class="torchhead"></div>
            <div class="lightblock"></div>
            <div class="backbg"></div>
            <div class="circle"></div>
            <div class="social-links"><SocialLinks /></div>
        </div>
        <p>{ligth_on_me}</p>
    </div>
</section>

<style define:vars={{
	torch_color,
    torch_shader_color,
    torch_button_color,
    torch_slip_color,
    torch_slip_border_color,
    light_color,
    light_off_color,
}}>
    .mytorch {
        display: flex;
        flex-direction: row;
        justify-content: flex-start;
        align-items: center;
        width: 100%;
    }
    .mytorchBody {
        width:150px;
        height:50px;
        background-color:var(--torch_color);
        border-top-left-radius:25px;
        border-bottom-left-radius:25px;
        box-shadow: 0px 0px 2px 0px rgba(255,255,255,0.7);
        outline: 3px solid yellow;
    }
    .mytorchConeUp 
    {
        width:40px;
        height:10px;
        background:var(--torch_color);
        transform: rotate(-30deg);
        top: 20px;
    }

    .torchSection 
    {
        width:100%;
        margin:0 auto;
        /*position:relative;*/
    }
    .wrapper 
    {
        width:100%;
        /* height: 100vh; */
        overflow: hidden;
        padding:35px 10% 35px 10%;
        box-sizing:border-box;
        outline: 1px solid red;
    }
    .torchblock 
    {
        /* width:150px;
        height:50px; */
        position:relative;
        z-index:0;
        /*background-color:var(--torch_color);
        border-top-left-radius:25px;
        border-bottom-left-radius:25px;
        box-shadow: 0px 0px 2px 0px rgba(255,255,255,0.7);*/
        outline: 3px solid blue;
        z-index: 10;
    } 
    .torchConeUp 
    {
        /* position:absolute;
        right:-30px;
        top:-5px; */
        width:40px;
        height:10px;
        background:var(--torch_color);
        transform:rotate(-30deg);
        z-index: 0; 
        outline: 3px solid green;
    }
    .torchblock:before 
    {
        content:'';
        position:absolute;
        right:-30px;
        top:-5px;
        width:40px;
        height:10px;
        background:var(--torch_color);
        transform:rotate(-30deg);
        z-index:0 
    }
    .torchblock:after 
    {
        content:'';
        position:absolute;
        right:-30px;
        bottom:-5px;
        width:40px;
        height:10px;
        background:var(--torch_color);
        transform:rotate(30deg);
        -moz-transform:rotate(30deg);
        -webkit-transform:rotate(30deg);
        -ms-transform:rotate(30deg);
        -o-transform:rotate(30deg);
        z-index:0 
    }
    .torch{
        display: flex;
        flex-direction: row;
    }
    .torchBody {
        width:150px;
        height:50px;
        position:relative;
        z-index:0;
        background-color:var(--torch_color);
        border-top-left-radius:25px;
        border-bottom-left-radius:25px;
        box-shadow: 0px 0px 2px 0px rgba(255,255,255,0.7);
        outline: 3px solid yellow;
    }
    .torchBody {
        width:150px;
        height:50px;
        /*position:relative;*/
        z-index:0;
        background-color:var(--torch_color);
        border-top-left-radius:25px;
        border-bottom-left-radius:25px;
        box-shadow: 0px 0px 2px 0px rgba(255,255,255,0.7);
        outline: 3px solid yellow;
    }
    .backbg 
    {
        position:absolute;
        left:145px;
        top:5px;
        width:25px;
        height:40px;
        background-color:var(--torch_shader_color);
        z-index:-1;
    }
    .torchhead
    { 
        position:absolute;
        right:-42px;
        top:-15px;
        z-index:2;
        height:60px;
        width:10px;
        border:10px solid var(--torch_color);
        border-radius:100%;
        background:var(--light_off_color);
    }
    .torchbtn 
    {
        background-color:var(--light_color);
        border:0;
        height:12px;
        width:25px;
        position:absolute;
        top:50%;
        right:20px;
        margin:-6px 0 0;
        border-radius:5px;
        outline:0;
    }
    .torchbtn:focus, .torchbtn:hover 
    {
        outline:none;
    }
    .lightblock 
    {
        position:absolute;
        top:-25px;
        left:18px;
        height:100px;
        width:555px;
        z-index:3;
    }
    input[name="switch"], input[name="switch"] + label 
    {
        position: absolute;
        top:18px;
        width:30px;
        height:15px;
        margin:0;
        padding:0;
    }
    input[name="switch"] + label 
    {
        left:100px;
        color:var(--light_color);
        background-color:var(--torch_button_color);
        border-radius:20px;
        -moz-border-radius:20px;
        -webkit-border-radius:20px;
        -ms-border-radius:20px;
        -o-border-radius:20px;
        z-index:1;
        transition:All 0.2s ease-in-out;
        -moz-transition:All 0.2s ease-in-out;
        -webkit-transition:All 0.2s ease-in-out;
        -o-transition:All 0.2s ease-in-out;
        -ms-transition:All 0.2s ease-in-out;
    }
    input[name="switch"] 
    {
        opacity:0;
        z-index: 9;
        cursor: pointer;
    }
    input[name="switch-off"] 
    {
        opacity:0;
        z-index: -1;
        cursor: pointer;
    }
    input[value="on"] 
    {
        left:100px;
    }
    input[value="off"] 
    {
        left:-500px;
            
    }
    input[value="on"]:checked 
    {
        left: -500px;
        
    }
    input[value="on"]:checked + input[value="off"] 
    {
        left:100px;
            
    }
    input[value="on"]:checked ~ .lightblock 
    {
        background:rgba(255,255,255,.95);
        transform: perspective(300px) rotateY(-45deg);
        -webkit-transform: perspective(300px) rotateY(-45deg);
        -moz-transform: perspective(300px) rotateY(-45deg);
        -o-transform: perspective(300px) rotateY(-45deg);
        -ms-background: rgba(255,255,255,1);
        box-shadow: 0 0 30px rgba(255, 255, 255, 0.9), 0 0 30px rgba(255, 255, 255, 0.8), 0 0 70px rgba(255, 255, 255, 0.9), 0 0 10px rgba(255, 255, 255, 0.9);
    }
    input[value="on"]:checked ~ #entypo-lamp 
    {
        left:109px;
    }
    input[value="on"]:checked ~ .switch-label
    {
        left:109px;
    }
    .btnouter 
    {
        border:1px solid var(--torch_slip_border_color);
        width:45px;
        height:19px;
        position:absolute;
        left:95px;
        top:14px;
        border-radius:20px;
        -webkit-border-radius:20px;
        -moz-border-radius:20px;
        -o-border-radius:20px;
        -ms-border-radius:20px;
        background:var(--torch_slip_color);
        z-index:0;
    }
    .circle 
    {
        background-color:var(--light_color);
        position:absolute;
        right:-749px;
        top:-119px;
        width:70px;
        height:289px;
        border-radius:50%;
        z-index:-1;
        line-height:289px;
        text-align:center;
        opacity:0;
    }
    .social-links
    {
        opacity:0;
        position:absolute;
        right:-1120px;
        top:15px;
        width:350px;
    }
    input[value="on"]:checked ~ .circle, input[value="on"]:checked ~ .social-links
    {
        opacity:1;
    }
    input[value="on"]:checked ~ .torchhead
    {
        background:var(--light_color);
    }
    .switch-label
    {
        z-index: -1;
        cursor: pointer;
    }
</style>

