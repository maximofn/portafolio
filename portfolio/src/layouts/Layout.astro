---
import Header from '@components/Header.astro';
import Footer from '@components/Footer.astro';
import LastPosts from '@components/LastPosts.astro';
import MostImportantProjects from '@components/MostImportantProjects.astro';
import LastTips from '@components/LastTips.astro';
import LastDockers from '@components/LastDockers.astro';
import LastDatasets from '@components/LastDatasets.astro';
import { ViewTransitions } from 'astro:transitions'

const { color_palette } = await import('@portfolio/consts.json');
const { colors } = await import('@portfolio/consts.json');
const { max_width } = await import('@portfolio/consts.json');
const { sticky_top_positions } = await import('@portfolio/consts.json');
const { social_links } = await import('@portfolio/consts.json');

const background_color = colors.background_color;
const font_color = colors.color_white;
const color_grid_dark = colors.color_grid_dark;
const color_h1 = color_palette.color_700;
const color_h2 = color_palette.color_400;
const color_h3 = color_palette.color_300;
const color_h4 = color_palette.color_200;
const color_h5 = color_palette.color_100;
const color_h6 = color_palette.color_50;
const text_color = colors.color_white;

interface Props {
	title: string;
	languaje: string;
	description: string;
	keywords: string;
	author: string;
	theme_color: string;
	url: string;
	icon: string;
	robots: string;
	og_type: string;
	page_image: string;
	page_image_width: string;
	page_image_height: string;
	page_image_extension: string;
	article_date: string;
}

const { 
	title,
	languaje,
	description,
	keywords,
	author,
	theme_color,
	url,
	icon,
	robots = "index, follow",
	og_type = "website",
	page_image = icon,
	page_image_width = "512",
	page_image_height = "512",
	page_image_extension = "webp",
	article_date = "",
} = Astro.props;

const { currentLocale } = Astro;

const pathname = Astro.url.pathname;
const basePath = "https://maximofn.com";
const currentPath = Astro.url.pathname;
const currentPath_es = basePath + pathname;
const currentPath_en = basePath + "/en" + pathname;
const currentPath_pt = basePath + "/pt" + pathname;

const alternate_langueje1 = "en";
const alternate_langueje2 = "pt";
if ( languaje.toLowerCase() === 'en' ) {
	const alternate_langueje1 = "es";
	const alternate_langueje2 = "pt";
} else if ( languaje.toLowerCase() === 'pt' ) {
	const alternate_langueje1 = "es";
	const alternate_langueje2 = "en";
}

const full_image_page_path = "https://raw.githubusercontent.com/maximofn/portafolio/main/portfolio/public" + page_image;

const image_content = "image/" + page_image_extension;

const debug_outline = '0px';

const sticky_top_default=sticky_top_positions.sticky_top_default;
const sticky_top_649px=sticky_top_positions.sticky_top_649px;
const sticky_top_418px=sticky_top_positions.sticky_top_418px;
const sticky_top_334px=sticky_top_positions.sticky_top_334px;
const sticky_top_315px=sticky_top_positions.sticky_top_315px;
const sticky_top_229px=sticky_top_positions.sticky_top_229px;
---

<!doctype html>
<html lang={currentLocale} class=page>
	<head>
		<title>{title}</title>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1, viewport-fit=cover" />
		<meta name="description" content={description} />
		<meta name="keywords" content={keywords} />
		<meta name="author" content={author} />
		<meta name="robots" content={robots} />
		<meta name="theme-color" content={theme_color} />
		<link rel="icon" type="image/svg+xml" href={icon} />
		<link rel="canonical" href={url} />
        <link rel="alternate" href={currentPath_es} hreflang="es" />
        <link rel="alternate" href={currentPath_en} hreflang="en" />
        <link rel="alternate" href={currentPath_pt} hreflang="pt" />

		<meta property="og:type" content={og_type} />
		<meta property="og:url" content={url} />
		<meta property="og:title" content={title} />
		<meta property="og:description" content={description} />
		<meta property="og:image" content={full_image_page_path} />
		<meta property="og:image:width" content={page_image_width} />
        <meta property="og:image:height" content={page_image_height} />
        <meta property="og:image:type" content={image_content} />
		<meta property="og:site_name" content={author} />
		<meta property="og:locale" content={languaje} />
		<meta property="og:locale:alternate" content={alternate_langueje1} />
		<meta property="og:locale:alternate" content={alternate_langueje2} />
		<meta property="article:publisher" content={social_links.x_link} />
		<meta property="article:published_time" content={article_date} />
		<meta property="article:modified_time" content={article_date} />

		<script 
			data-jetpack-boost="ignore" 
			type="application/ld+json" 
			class="yoast-schema-graph"
		>
		{
			"@context": "https://schema.org",
			"@graph": [
				{
					"@type": "WebPage",
					"@id": url, // Usando la constante 'url'
					"url": url,
					"name": title,  // Usando la constante 'title'
					"isPartOf": {
						"@id": `${basePath}/#website` // Usando 'basePath'
					},
					"primaryImageOfPage": {
						"@id": `${url}#primaryimage` // Usando 'url'
					},
					"image": {
						"@id": `${url}#primaryimage`
					},
					"thumbnailUrl": full_image_page_path, // Usando la constante existente
					"datePublished": article_date, // Usando la constante 'article_date'
					"dateModified": article_date,
					"author": {
						"@id": `${basePath}/#schema/person/0ea0528f95bec67b9271c68d5a300aed` // Puedes usar 'basePath' si es necesario
					},
					"description": description, // Usando la constante 'description'
					"breadcrumb": {
						"@id": `${url}#breadcrumb` 
					},
					"inLanguage": languaje, // Usando la constante 'languaje'
					"potentialAction": [
						{
							"@type": "ReadAction",
							"target": [url]
						}
					]
				},
				{
					"@type": "ImageObject",
					"inLanguage": languaje,
					"@id": `${url}#primaryimage`,
					"url": full_image_page_path,
					"contentUrl": full_image_page_path,
					"width": parseInt(page_image_width), // Convirtiendo a número
					"height": parseInt(page_image_height), // Convirtiendo a número
					"caption": title
				},
				{
					"@type": "BreadcrumbList",
					"@id": `${url}#breadcrumb`,
					"itemListElement": [
						{
							"@type": "ListItem",
							"position": 1,
							"name": "Portada", 
							"item": basePath // Usando 'basePath'
						},
						{
							"@type": "ListItem",
							"position": 2,
							"name": title // Usando 'title' para el nombre de la página actual
						}
					]
				},
				{
					"@type": "WebSite",
					"@id": `${basePath}/#website`,
					"url": basePath,
					"name": author, // Usando 'author'
					"description": "Web de MaximoFN",
					"potentialAction": [
						{
							"@type": "SearchAction",
							"target": {
								"@type": "EntryPoint",
								"urlTemplate": `${basePath}/?s={search_term_string}`
							},
							"query-input": "required name=search_term_string"
						}
					],
					"inLanguage": languaje 
				},
				{
					"@type": "Person",
					"@id": `${basePath}/#schema/person/0ea0528f95bec67b9271c68d5a300aed`, // Puedes usar 'basePath'
					"name": author, // Usando 'author'
					"image": {
						"@type": "ImageObject",
						"inLanguage": languaje,
						"@id": `${basePath}/#schema/person/image/`,
						"url": "https://secure.gravatar.com/avatar/d42cd1341d871ab6d87a2ac338ae6f60?s=96&d=mm&r=g",
						"contentUrl": "https://secure.gravatar.com/avatar/d42cd1341d871ab6d87a2ac338ae6f60?s=96&d=mm&r=g",
						"caption": author 
					},
					"sameAs": [basePath] // Usando 'basePath'
				}
			]
		}
		</script>

		<!-- <meta name="twitter:card" content="summary" /> -->
        <meta name="twitter:card" content="summary_large_image" />
        <meta name="twitter:creator" content="@Maximo_fn" />
        <meta name="twitter:site" content="@Maximo_fn" />
		<meta name="twitter:url" content={url} />
		<meta name="twitter:title" content={title} />
		<meta name="twitter:description" content={description} />
		<meta name="twitter:image" content={full_image_page_path} />
		
		<ViewTransitions />
	</head>
	<body>
		<Header
			languaje={languaje}
		></Header>
		<main class="layout-style">
			<slot class="layout-content"/>
			{ currentPath !== "/" && currentPath !== "/en/" && currentPath !== "/pt-br/" && currentPath !== "/blog" && currentPath !== "/en/blog" && currentPath !== "/pt-br/blog" && (
				<LastPosts languaje={languaje} continue_reading={true}></LastPosts>
			)}
			{ currentPath !== "/" && currentPath !== "/en/" && currentPath !== "/pt-br/" && currentPath !== "/projects" && currentPath !== "/en/projects" && currentPath !== "/pt-br/projects" && (
				<MostImportantProjects languaje={languaje} continue_reading={true}></MostImportantProjects>
			)}
			{ currentPath !== "/" && currentPath !== "/en/" && currentPath !== "/pt-br/" && currentPath !== "/tips" && currentPath !== "/en/tips" && currentPath !== "/pt-br/tips" && (
				<LastTips languaje={languaje} continue_reading={true}></LastTips>
			)}
			{ currentPath !== "/" && currentPath !== "/en/" && currentPath !== "/pt-br/" && currentPath !== "/dockers" && currentPath !== "/en/dockers" && currentPath !== "/pt-br/dockers" && (
				<LastDockers languaje={languaje} continue_reading={true}></LastDockers>
			)}
			{ currentPath !== "/" && currentPath !== "/en/" && currentPath !== "/pt-br/" && currentPath !== "/datasets" && currentPath !== "/en/datasets" && currentPath !== "/pt-br/datasets" && (
				<LastDatasets languaje={languaje} continue_reading={true}></LastDatasets>
			)}
		</main>
		<Footer languaje={languaje}></Footer>
		<section class="background-grid"></section>
	</body>
</html>

<style is:global define:vars={{
	debug_outline,
	max_width,
	background_color,
	font_color,
	color_grid_dark,
	color_h1,
	color_h2,
	color_h3,
	color_h4,
	color_h5,
	color_h6,
	text_color,
	sticky_top_default,
	sticky_top_649px,
	sticky_top_418px,
	sticky_top_334px,
	sticky_top_315px,
	sticky_top_229px,
}}>

	/* CSS reset */
	* {
		/* box-sizing: border-box; */
		/* position: relative; */
		min-width: 0;
	}

	@font-face {
		font-family: 'Cascadia Code';
		src: url('/fonts/ttf/CascadiaCodeItalic.ttf') format('ttf');
	}
	
	html {
		display: flex;
		flex-direction: column;
		justify-content: flex-start;
		align-items: center;
		gap: 20px;
		margin: 0px;
		padding: 0px;
		font-family: 'Cascadia code', system-ui, sans-serif;
		color: var(--font_color);
		background: var(--background_color);
		color-scheme: dark light;
		width: 100%;
		height: 100%;
		z-index: -2;
		scroll-timeline: --page-scroll block;
	}
	.background-grid {
		position: fixed;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		background-image: linear-gradient(to right, var(--color_grid_dark) 1px, transparent 1px),
		linear-gradient(to bottom, var(--color_grid_dark) 1px, transparent 1px);
		background-size: 14px 24px;
		-webkit-mask-image: linear-gradient(ellipse 60% 50% at 50% 0%, #000 70%, transparent 100%);
		mask-image: radial-gradient(ellipse 60% 50% at 50% 0%, #000 70%, transparent 100%);
		z-index: -1;
	}

	.layout-style {
		display: flex;
        flex-direction: column;
		align-items: center;
		gap: 300px;
		max-width: var(--max_width);
		height: auto;
		width: 100%;
	}

	body{
		margin: 0;
	}
	@media (max-width: 1508px) {
		body {
			margin-inline: 1px;
		}
	}
	@media (max-width: 1506px) {
		body {
			margin-inline: 2px;
		}
	}
	@media (max-width: 1504px) {
		body {
			margin-inline: 3px;
		}
	}
	@media (max-width: 1502px) {
		body {
			margin-inline: 4px;
		}
	}
	@media (max-width: 1500px) {
		body {
			margin-inline: 5px;
		}
	}

	section {
		width: 100%;
	}

	a {
		color: var(--text_color);
	}

	p {
		text-wrap: pretty;
	}

	img {
		max-width: 1500px
	}

	h1 {
		color: var(--color_h1);
		font-size: 3.5rem;
		text-wrap: balance;
	}
	h2 {
		color: var(--color_h2);
		font-size: 2.5rem;
		margin-top: 100px;
		text-wrap: balance;
		position: sticky;
		top: var(--sticky_top_default);
		z-index: 1;
	}
	h3 {
		color: var(--color_h3);
		font-size: 1.5rem;
		margin-top: 50px;
		padding-left: 20px;
		text-wrap: balance;
		position: sticky;
		top: calc(var(--sticky_top_default) + var(--sticky_top_h3_increment));
	}
	h4 {
		color: var(--color_h4);
		font-size: 1rem;
		margin-top: 20px;
		padding-left: 40px;
		text-wrap: balance;
	}
	@media (max-width: 418px) {
		h4 {
			font-size: 0.6rem;
		}
	}
	h5 {
		color: var(--color_h5);
		font-size: 1rem;
		font-style: oblique;
		margin-top: 10px;
		padding-left: 60px;
		text-wrap: balance;
	}
	@media (max-width: 418px) {
		h5 {
			font-size: 0.4rem;
		}
	}
	h6 {
		color: var(--color_h6);
		font-size: 1rem;
		font-style: oblique;
		padding-left: 80px;
		text-wrap: balance;
	}
	@media (max-width: 418px) {
		h6 {
			font-size: 0.3rem;
		}
	}

	video, img {
		max-width: 100%;
		height: auto;
	}

	#header-nav {
		animation: blur linear both;
		animation-timeline: scroll();
		animation-range: 0 500px;
	}
    @media screen and (prefers-reduce-motion){
        #header-nav {
            animation: none;
        }
    }

	@keyframes blur {
		to {
			box-shadow:
				0px 1px 100px 0px rgba(255, 255, 255, 0.2),
				0px 0px 0 1px rgba(50, 50, 50, 0.1);
			background: rgba(0, 0, 0, 0.1);
			backdrop-filter: blur(2px);
		}
	}
	
</style>
