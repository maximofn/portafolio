---
import Layout from '@layouts/Layout.astro';
import LastPosts from '@components/LastPosts.astro';

const { social_links } = await import('@portfolio/consts.json');
const { metadata_page } = await import('@portfolio/consts.json');
const { colors } = await import('@portfolio/consts.json');
const { color_palette } = await import('@portfolio/consts.json');
const { max_width } = await import('@portfolio/consts.json');
const { max_width_pre } = await import('@portfolio/consts.json');
const { sticky_top_positions } = await import('@portfolio/consts.json');

interface Props {
	title: string;
	languaje: string;
	description: string;
	keywords: string;
    author: string;
	theme_color: string;
	end_url: string;
    image_path: string;
    image_width: string;
    image_height: string;
    image_extension: string;
    robots: string;
    article_date: string;
}

const { 
	title,
	languaje,
	description,
	keywords,
    author,
	theme_color,
	end_url,
    image_path,
    image_width,
    image_height,
    image_extension,
    robots = "index, follow",
    article_date = "",
} = Astro.props;

const currentPath = Astro.url.pathname;
const all_pages_list = Object.values(import.meta.glob('../pages/*.astro', { eager: true }));
// get all pages url
const pages = all_pages_list.map(page => page.url);

const page_title = metadata_page.title + " - " + title;
const url = social_links.portfolio_link_external + "/" + end_url;

const inline_code_block_font_color = color_palette.color_950;
const inline_code_block_background_color = color_palette.color_200;
const highlight_code_block_font_color = colors.color_white;
const highlight_code_block_background_color = color_palette.color_700;
const inline_code_block_border_color = color_palette.color_500;
const code_block_background_color = color_palette.color_950;
const code_block_font_color = colors.color_white;
const code_block_border_color = color_palette.color_700;
const output_block_background_color = color_palette.color_950;
const a_font_color = colors.color_white;
const generated_images_border_color = color_palette.color_950;
const generated_images_box_shadow_color = color_palette.color_500;
const copy_button_hover_background_color = color_palette.color_900;
const progress_bar_color = color_palette.color_500;

const sticky_top_default=sticky_top_positions.sticky_top_default;
const sticky_top_649px=sticky_top_positions.sticky_top_649px;
const sticky_top_418px=sticky_top_positions.sticky_top_418px;
const sticky_top_334px=sticky_top_positions.sticky_top_334px;
const sticky_top_315px=sticky_top_positions.sticky_top_315px;
const sticky_top_229px=sticky_top_positions.sticky_top_229px;

const max_width_index = "250px";
// max width for content 1500 - 250 = 1250px
const max_width_content = "1250px";

// article_date is like 2021-02-11+T00:00:00Z
const article_date_only_date = article_date.split("T")[0];
let article_date_day = article_date_only_date.split("-")[2];
// if + in article_date_day remove it
if (article_date_day.includes("+")) {
    article_date_day = article_date_day.replace("+", "");
}
let article_date_month = article_date_only_date.split("-")[1];
if (article_date_month === "01") {
    if (languaje.toLowerCase() === "es") {
        article_date_month = "de enero del";
    } else if (languaje.toLowerCase() === "en") {
        article_date_month = "of january of";
    } else if (languaje.toLowerCase() === "pt") {
        article_date_month = "de janeiro de";
    }
} else if (article_date_month === "02") {
    if (languaje.toLowerCase() === "es") {
        article_date_month = "de febrero del";
    } else if (languaje.toLowerCase() === "en") {
        article_date_month = "of february of";
    } else if (languaje.toLowerCase() === "pt") {
        article_date_month = "de fevereiro de";
    }
} else if (article_date_month === "03") {
    if (languaje.toLowerCase() === "es") {
        article_date_month = "de marzo del";
    } else if (languaje.toLowerCase() === "en") {
        article_date_month = "of march of";
    } else if (languaje.toLowerCase() === "pt") {
        article_date_month = "de mar√ßo de";
    }
} else if (article_date_month === "04") {
    if (languaje.toLowerCase() === "es") {
        article_date_month = "de abril del";
    } else if (languaje.toLowerCase() === "en") {
        article_date_month = "of april of";
    } else if (languaje.toLowerCase() === "pt") {
        article_date_month = "de abril de";
    }
} else if (article_date_month === "05") {
    if (languaje.toLowerCase() === "es") {
        article_date_month = "de mayo del";
    } else if (languaje.toLowerCase() === "en") {
        article_date_month = "of may of";
    } else if (languaje.toLowerCase() === "pt") {
        article_date_month = "de maio de";
    }
} else if (article_date_month === "06") {
    if (languaje.toLowerCase() === "es") {
        article_date_month = "de junio del";
    } else if (languaje.toLowerCase() === "en") {
        article_date_month = "of june of";
    } else if (languaje.toLowerCase() === "pt") {
        article_date_month = "de junho de";
    }
} else if (article_date_month === "07") {
    if (languaje.toLowerCase() === "es") {
        article_date_month = "de julio del";
    } else if (languaje.toLowerCase() === "en") {
        article_date_month = "of july of";
    } else if (languaje.toLowerCase() === "pt") {
        article_date_month = "de julho de";
    }
} else if (article_date_month === "08") {
    if (languaje.toLowerCase() === "es") {
        article_date_month = "de agosto del";
    } else if (languaje.toLowerCase() === "en") {
        article_date_month = "of august of";
    } else if (languaje.toLowerCase() === "pt") {
        article_date_month = "de agosto de";
    }
} else if (article_date_month === "09") {
    if (languaje.toLowerCase() === "es") {
        article_date_month = "de septiembre del";
    } else if (languaje.toLowerCase() === "en") {
        article_date_month = "of september of";
    } else if (languaje.toLowerCase() === "pt") {
        article_date_month = "de setembro de";
    }
} else if (article_date_month === "10") {
    if (languaje.toLowerCase() === "es") {
        article_date_month = "de octubre del";
    } else if (languaje.toLowerCase() === "en") {
        article_date_month = "of october of";
    } else if (languaje.toLowerCase() === "pt") {
        article_date_month = "de outubro de";
    }
} else if (article_date_month === "11") {
    if (languaje.toLowerCase() === "es") {
        article_date_month = "de noviembre del";
    } else if (languaje.toLowerCase() === "en") {
        article_date_month = "of november of";
    } else if (languaje.toLowerCase() === "pt") {
        article_date_month = "de novembro de";
    }
} else if (article_date_month === "12") {
    if (languaje.toLowerCase() === "es") {
        article_date_month = "de diciembre del";
    } else if (languaje.toLowerCase() === "en") {
        article_date_month = "of december of";
    } else if (languaje.toLowerCase() === "pt") {
        article_date_month = "de dezembro de";
    }
}
const article_date_year = article_date_only_date.split("-")[0];
---

<Layout 
    title={page_title}
    languaje={languaje}
    description={description}
    keywords={keywords}
    author={author}
    theme_color={theme_color}
    url={url}
    icon={metadata_page.icon}
    robots={robots}
    og_type="article"
    page_image={image_path}
    page_image_width={image_width}
    page_image_height={image_height}
    page_image_extension={image_extension}
    article_date={article_date}
>

    <main class="post-layout">
        <header class="post-container-header">
            <div>
                <h1 class="post-container-header-h1">{title}</h1>
                <time class="post-container-header-date-published" itemprop="datePublished" datetime={article_date}>{article_date_day} {article_date_month} {article_date_year}</time>
            </div>
            <div class="post-container-header-img" transition:name={`post-image-${title.replace(/\s+/g, '-').toLowerCase()}`}>
                <img onerror="this.parentNode.removeChild(this)" class="img-top" decoding="async" src={image_path} alt={title} width=auto height=300px />
                <img onerror="this.parentNode.removeChild(this)" class="img-blur" decoding="async" src={image_path} alt={title} width=auto height=300px />
            </div>
        </header>

        <div class="progress"></div>

        <slot class="post-container"/>
    </main>
    

</Layout>

<style is:global define:vars={{
	max_width,
	max_width_pre,
    inline_code_block_font_color,
    inline_code_block_background_color,
    highlight_code_block_font_color,
    highlight_code_block_background_color,
    inline_code_block_border_color,
    code_block_background_color,
    code_block_font_color,
    code_block_border_color,
    output_block_background_color,
    a_font_color,
    generated_images_border_color,
    generated_images_box_shadow_color,
    copy_button_hover_background_color,
	sticky_top_default,
	sticky_top_649px,
	sticky_top_418px,
	sticky_top_334px,
	sticky_top_315px,
	sticky_top_229px,
    max_width_index,
    max_width_content,
    progress_bar_color,
}}>

    @keyframes grow-progress {
        from {transform: scaleX(0);}
        to {transform: scaleX(1);}
    }

    .progress {
        position: fixed;
        background: var(--progress_bar_color);
        z-index: 10;
        left: 0;
        top: 99dvh;
        width: 100vw;
        height: 1dvh;
        transform-origin: 0 50%;
        animation: grow-progress auto linear;
        animation-timeline: --page-scroll;
        animation-range: 0% calc(100% - 8600px);
    }
    @media screen and (prefers-reduce-motion){
        .progress {
            animation: none;
        }
    }

    .post-layout {
        display: flex;
        flex-direction: column;
        align-items: flex-start;
        gap: 100px;
        width: 100%;
    }
    .post-container-header {
        display: flex;
        flex-direction: row;
        justify-content: space-evenly;
        flex-wrap: wrap;
        align-items: center;
        gap: 50px;
        width: 100%;
    }
    @media (max-width: 390px) {
        .post-container-header-h1 {
            font-size: 1.5rem;
        }
    }
    .post-container-header-img {
        display: flex;
        flex-direction: row;
        justify-content: center;
        align-items: center;
        position: relative; /* Contenedor de referencia para position absolute */
    }
    .post-container-header-date-published {
        font-size: 0.8rem;
    }
    .img-top {
        width: 300px;
        max-width: 100%;
        height: auto;
        z-index: 9;
    }
    .img-blur {
        width: 300px;
        max-width: 100%;
        height: auto;
        z-index: 8;
        position: absolute;
        top: 0;
        left: 0;
        filter: blur(7px);
    }
    .post-container-header-h1 {
        margin: 0;
        padding: 0;
        text-align: center;
    }

    .post-body {
        display: flex;
        flex-direction: row;
        align-content: flex-start;
        justify-content: flex-start;
        align-items: flex-start;
        max-width: var(--max_width);
        width: 100%;
    }
    .post-body h1 {
        display: none;
    }

    .post-index {
        display: flex;
        flex-direction: column;
        gap: 20px;
        position: sticky;
        top: var(--sticky_top_default);
        max-width: var(--max_width_index);
        max-height: 100vh;
        overflow-y: auto;
        overflow-x: auto;
        margin-top: 100px;
        padding-bottom: 200px;
    }
    @media (max-width: 1500px) {
        .post-index {
            display: none;
        }
    }
    .post-index a {
        text-decoration: none;
    }
    .post-index h1, .post-index h2, .post-index h3, .post-index h4, .post-index h5, .post-index h6 {
        margin-top: 0px;
        margin-bottom: 0px;
        margin: 0px;
        padding: 0px;
    }
    .post-index h2 {
        font-size: medium;
    }
    .post-index h3 {
        padding-left: 6px;
        font-size: small;
    }
    .post-index h4 {
        padding-left: 12px;
        font-size: smaller;
    }
    .post-index h5 {
        padding-left: 18px;
        font-size: x-small;
    }
    .post-index h6 {
        padding-left: 24px;
        font-size: x-small;
    }

    .post-body-content{
        padding-left: 20px;
        margin-left: 50px;
        max-width: var(--max_width_content);
        width: 100%;
    }
    @media (max-width: 1500px) {
		.post-body-content {
            padding-inline: 0px;
            margin-left: 0px;
		}
		
	}
    .post-body-content h2, .post-body-content h3 {
        position: static;
    }
    @keyframes reveral {
        0% {
            transform: scale(0.8) translateY(100px); 
            opacity: 0;
        }
        100% { 
            transform: scale(1) translateY(0); 
            opacity: 1;
        }
    }
    .post-body-content img {
        max-width: 100%;
        height: auto;
        animation: reveral auto linear;
        animation-timeline: view();
        animation-range: entry 0% contain 50%;
        animation-fill-mode: both;
    }
    .post-body-content img.link-img {
        animation: none;
    }
    @media screen and (prefers-reduce-motion){
        .post-body-content img {
            animation: none;
            opacity: 1;
            transform: none;
        }
    }
    /* Code in text */
    .section-block-markdown-cell p code, 
    .section-block-markdown-cell table code, 
    .section-block-markdown-cell ol li code, 
    .section-block-markdown-cell ul li code, 
    .section-block-markdown-cell .highlight {
        background-color: var(--inline_code_block_background_color);
        color: var(--inline_code_block_font_color);
        border: 1px solid var(--inline_code_block_border_color);
        padding: 0px 5px;
        border-radius: 7px;
        opacity: 0.8;
        text-wrap: pretty;
    }
    .section-block-markdown-cell h2 code,
    .section-block-markdown-cell h3 code,
    .section-block-markdown-cell h4 code,
    .section-block-markdown-cell h5 code,
    .section-block-markdown-cell h6 code {
        background-color: var(--inline_code_block_background_color);
        color: var(--inline_code_block_font_color);
        border: 1px solid var(--inline_code_block_border_color);
        padding: 0px 5px;
        border-radius: 7px;
        opacity: 0.8;
        text-wrap: pretty;
    }
    .post-index .anchor-link h2 code,
    .post-index .anchor-link h3 code,
    .post-index .anchor-link h4 code,
    .post-index .anchor-link h5 code,
    .post-index .anchor-link h6 code {
        background-color: var(--inline_code_block_background_color);
        color: var(--inline_code_block_font_color);
        border: 1px solid var(--inline_code_block_border_color);
        padding: 0px 5px;
        border-radius: 7px;
        opacity: 0.8;
        text-wrap: pretty;
    }
    .section-block-markdown-cell .highlight {
        background-color: var(--highlight_code_block_background_color);
        color: var(--highlight_code_block_font_color);
        box-shadow: 3px 3px 6px 0 hsla(0, 0%, 100%, 0.3);
        padding: 10px;
        margin: 20px;
        width: fit-content;
    }
    .section-block-markdown-cell .highlight pre {
        text-wrap: pretty;
        word-break: break-word;
        margin: 3px 0px;
    }
    .section-block-markdown-cell p {
        text-wrap: pretty;
        word-break: break-word;
    }
    .section-block-code-cell- .input-code .highlight pre{
        text-wrap: pretty;
        word-break: break-word;
    }
    .output-wrapper .output-area .output-subarea-output-stream-output-stdout-output-text pre{
        text-wrap: pretty;
        word-break: break-word;
    }
    .output-wrapper .output-area .output-subarea-output-stream-output-stderr-output-text pre{
        text-wrap: pretty;
        word-break: break-word;
    }
    .output-wrapper .output-area .output-text-output-subarea pre{
        text-wrap: pretty;
        word-break: break-word;
    }
    .output-wrapper .output-area .output-text-output-subareaoutput_execute_result pre{
        text-wrap: pretty;
        word-break: break-word;
    }
    pre {
        text-wrap: pretty;
        word-break: break-word;
    }
    .output-wrapper .output-area .prompt-output-prompt
    .section-block-markdown-cell {
        text-wrap: pretty;
        word-break: break-word;
    }
    /* img in post */
    p img {
        width: auto;
        height: auto;
    }

    /* code style - Pygments syntax highlighting */
    
    /* ===== COMENTARIOS ===== */
    .input-cell-code .c { color: #79d779; font-style: italic; } /* Comment general */
    .input-cell-code .c1 { color: #79d779; font-style: italic; } /* Comment single line */
    .input-cell-code .cm { color: #79d779; font-style: italic; } /* Comment multiline */
    .input-cell-code .cs { color: #79d779; font-style: italic; } /* Comment special */
    .input-cell-code .ch { color: #79d779; font-style: italic; } /* Comment hashbang */
    .input-cell-code .cp { color: #9C6500; } /* Comment preproc */
    .input-cell-code .cpf { color: #79d779; font-style: italic; } /* Comment preproc file */

    /* ===== PALABRAS CLAVE ===== */
    .input-cell-code .k { color: #ff8fff; font-weight: bold; } /* Keyword */
    .input-cell-code .kc { color: #ff8fff; font-weight: bold; } /* Keyword constant */
    .input-cell-code .kd { color: #ff8fff; font-weight: bold; } /* Keyword declaration */
    .input-cell-code .kn { color: #ff8fff; font-weight: bold; } /* Keyword namespace */
    .input-cell-code .kp { color: #ff8fff; } /* Keyword pseudo */
    .input-cell-code .kr { color: #ff8fff; font-weight: bold; } /* Keyword reserved */
    .input-cell-code .kt { color: #B00040; } /* Keyword type */

    /* ===== CADENAS DE TEXTO ===== */
    .input-cell-code .s { color: #ffa63a; } /* String literal */
    .input-cell-code .s1 { color: #ffa63a; } /* String single quoted */
    .input-cell-code .s2 { color: #ffa63a; } /* String double quoted */
    .input-cell-code .sb { color: #ffa63a; } /* String backtick */
    .input-cell-code .sc { color: #ffa63a; } /* String char */
    .input-cell-code .sd { color: #ffa63a; font-style: italic; } /* String doc */
    .input-cell-code .se { color: #AA5D1F; font-weight: bold; } /* String escape */
    .input-cell-code .sh { color: #ffa63a; } /* String heredoc */
    .input-cell-code .si { color: #A45A77; font-weight: bold; } /* String interpol */
    .input-cell-code .sr { color: #A45A77; } /* String regex */
    .input-cell-code .ss { color: #19177C; } /* String symbol */
    .input-cell-code .sx { color: var(--code_block_font_color) } /* String other */
    .input-cell-code .sa { color: #ffa63a; } /* String affix */
    .input-cell-code .dl { color: #ffa63a; } /* String delimiter */

    /* ===== NOMBRES Y VARIABLES ===== */
    .input-cell-code .n { color: #a2c9db; } /* Name */
    .input-cell-code .na { color: #687822; } /* Name attribute */
    .input-cell-code .nb { color: var(--code_block_font_color) } /* Name builtin */
    .input-cell-code .nc { color: #79d779; font-weight: bold; } /* Name class */
    .input-cell-code .nd { color: #A2F; } /* Name decorator */
    .input-cell-code .ne { color: #79d779; font-weight: bold; } /* Name exception */
    .input-cell-code .nf { color: #dfdf86; } /* Name function */
    .input-cell-code .ni { color: #717171; font-weight: bold; } /* Name entity */
    .input-cell-code .nl { color: #767600; } /* Name label */
    .input-cell-code .nn { color: #79d779; font-weight: bold; } /* Name namespace */
    .input-cell-code .no { color: #800; } /* Name constant */
    .input-cell-code .nt { color: var(--code_block_font_color) font-weight: bold; } /* Name tag */
    .input-cell-code .nv { color: #19177C; } /* Name variable */
    .input-cell-code .bp { color: var(--code_block_font_color) } /* Name builtin pseudo */
    .input-cell-code .fm { color: #dfdf86; } /* Name function magic */
    .input-cell-code .vc { color: #19177C; } /* Name variable class */
    .input-cell-code .vg { color: #19177C; } /* Name variable global */
    .input-cell-code .vi { color: #19177C; } /* Name variable instance */
    .input-cell-code .vm { color: #19177C; } /* Name variable magic */

    /* ===== N√öMEROS ===== */
    .input-cell-code .m { color: #ffffa6; } /* Number */
    .input-cell-code .mb { color: #ffffa6; } /* Number bin */
    .input-cell-code .mf { color: #ffffa6; } /* Number float */
    .input-cell-code .mh { color: #ffffa6; } /* Number hex */
    .input-cell-code .mi { color: #ffffa6; } /* Number integer */
    .input-cell-code .mo { color: #ffffa6; } /* Number oct */
    .input-cell-code .il { color: #ffffa6; } /* Number integer long */

    /* ===== OPERADORES Y PUNTUACI√ìN ===== */
    .input-cell-code .o { color: var(--code_block_font_color); } /* Operator */
    .input-cell-code .ow { color: var(--code_block_font_color); } /* Operator word */
    .input-cell-code .p { color: yellow; } /* Punctuation */

    /* ===== TEXTO Y ESPACIOS ===== */
    .input-cell-code .w { color: #BBB; } /* Text whitespace */

    /* ===== ERRORES Y RESALTADOS ===== */
    .input-cell-code .err { color: #E40000; } /* Error */
    .input-cell-code .hll { background-color: #ffffcc; } /* Highlight line */

    /* ===== GEN√âRICOS (para diff, traceback, etc.) ===== */
    .input-cell-code .gd { color: #A00000; } /* Generic deleted */
    .input-cell-code .ge { font-style: italic; } /* Generic emph */
    .input-cell-code .ges { font-weight: bold; font-style: italic; } /* Generic emph strong */
    .input-cell-code .gr { color: #E40000; } /* Generic error */
    .input-cell-code .gh { color: #000080; font-weight: bold; } /* Generic heading */
    .input-cell-code .gi { color: #008400; } /* Generic inserted */
    .input-cell-code .go { color: #717171; } /* Generic output */
    .input-cell-code .gp { color: #000080; font-weight: bold; } /* Generic prompt */
    .input-cell-code .gs { font-weight: bold; } /* Generic strong */
    .input-cell-code .gu { color: #800080; font-weight: bold; } /* Generic subheading */
    .input-cell-code .gt { color: #04D; } /* Generic traceback */

    /* ===== COMPATIBILIDAD CON ANSI (mantener para retrocompatibilidad) ===== */
    .ansi-blue-fg { color: #9797ff; }
    .ansi-cyan-fg { color: cyan; }
    .ansi-green-fg, .ansi-green-intense-fg { color: #50cb50; }
    .ansi-bold { font-weight: bold; }
    .ansi-red-fg, .ansi-red-intense-fg { color: #fd7d7d; font-weight: bold; }
    .ansi-yellow-fg, .ansi-yellow-intense-fg { color: yellow; }
    .ansi-magenta-fg, .ansi-magenta-intense-fg { color: #ff57ff; }
    .ansi-white-fg { color: white; }
    .ansi-black-fg, .ansi-black-intense-fg { color: black; }
    
    /* ===== CLASES ANSI ADICIONALES FALTANTES ===== */
    .ansi-blue-intense-fg { color: #5c5cff; font-weight: bold; }
    .ansi-cyan-intense-fg { color: #00ffff; font-weight: bold; }
    .ansi-default-inverse-fg { color: #000; background-color: #fff; }
    .ansi-default-inverse-bg { background-color: #fff; color: #000; }
    .ansi-yellow-bg { background-color: yellow; color: #000; }
    
    /* ===== CLASES YAML/SCALAR (para notebooks con YAML) ===== */
    .l { color: #ffffff; } /* Literal */
    .l-Scalar { color: #BA2121; } /* Scalar value */
    .l-Scalar-Plain { color: #BA2121; } /* Plain scalar */
    .input-cell-code .l { color: #ffffff; } /* Literal in highlight */
    .input-cell-code .l-Scalar { color: #BA2121; } /* Scalar value in highlight */
    .input-cell-code .l-Scalar-Plain { color: #BA2121; } /* Plain scalar in highlight */
    
    /* ===== CLASES ADICIONALES ESPEC√çFICAS ===== */
    .input-cell-code .nx { color: #ffffff; } /* Name other */

    /* ===== CLASES MATEM√ÅTICAS ===== */
    /* Estilos base para matem√°ticas */
    .math { 
        font-style: italic; 
        font-family: "Computer Modern", "Latin Modern Math", "Times New Roman", serif;
        line-height: 1.4;
        color: var(--code_block_font_color);
    }
    
    /* Matem√°ticas en l√≠nea */
    .math-inline { 
        font-style: italic; 
        font-family: "Computer Modern", "Latin Modern Math", "Times New Roman", serif;
        padding: 2px 4px;
        margin: 0 2px;
        background-color: rgba(255, 255, 255, 0.05);
        border-radius: 3px;
        border: 1px solid rgba(255, 255, 255, 0.1);
        display: inline-block;
        vertical-align: middle;
    }
    
    /* Matem√°ticas en bloque (display) */
    .math-display { 
        font-style: italic; 
        font-family: "Computer Modern", "Latin Modern Math", "Times New Roman", serif;
        display: block;
        text-align: center;
        margin: 20px auto;
        padding: 15px 20px;
        border: 1px solid var(--code_block_border_color);
        border-radius: 7px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        overflow-x: auto;
        max-width: 100%;
        width: fit-content;
    }
    
    /* Estilos espec√≠ficos para MathJax/KaTeX */
    .MathJax, .katex {
        font-size: 1.1em !important;
    }
    
    .MathJax_Display, .katex-display {
        margin: 20px 0 !important;
        padding: 15px;
        background-color: var(--code_block_background_color);
        border: 1px solid var(--code_block_border_color);
        border-radius: 8px;
        overflow-x: auto;
    }
    
    /* Mejoras para elementos matem√°ticos espec√≠ficos */
    .math .mfrac, .katex .mfrac {
        vertical-align: middle;
    }
    
    .math .msqrt, .katex .sqrt {
        padding: 2px;
    }
    
    .math .msubsup, .katex .msubsup {
        line-height: 1.2;
    }
    
    /* Estilos para matrices y vectores */
    .math .matrix, .katex .matrix {
        padding: 5px;
        border: 1px solid rgba(255, 255, 255, 0.2);
        border-radius: 4px;
    }
    
    /* Responsive para matem√°ticas */
    @media (max-width: 768px) {
        .math-display {
            padding: 10px;
            margin: 15px 0;
            font-size: 0.9em;
        }
        
        .math-inline {
            font-size: 0.95em;
        }
    }
    
    /* Estilos para ecuaciones numeradas */
    .math-numbered {
        position: relative;
        padding-right: 60px;
    }
    
    .math-numbered::after {
        content: attr(data-equation-number);
        position: absolute;
        right: 15px;
        top: 50%;
        transform: translateY(-50%);
        font-style: normal;
        font-size: 0.9em;
        color: var(--inline_code_block_font_color);
        background-color: var(--inline_code_block_background_color);
        padding: 2px 8px;
        border-radius: 4px;
        border: 1px solid var(--inline_code_block_border_color);
    }
    
    /* Estilos para s√≠mbolos especiales */
    .math .symbol {
        font-weight: bold;
        color: #ffa63a;
    }
    
    .math .operator {
        color: #ff8fff;
        font-weight: bold;
        margin: 0 2px;
    }
    
    .math .variable {
        color: #a2c9db;
        font-style: italic;
    }
    
    .math .constant {
        color: var(--code_block_font_color);
        font-weight: bold;
    }
    
    /* Animaciones sutiles para matem√°ticas */
    .math-display {
        animation: auto linear reveral both;
        animation-timeline: view();
        animation-range: entry 70% cover 30%;
    }
    
    @media screen and (prefers-reduce-motion) {
        .math-display {
            animation: none;
        }
    }
    
    /* Estilos para c√≥digo LaTeX crudo */
    .latex-code {
        font-family: "Fira Code", "Consolas", monospace;
        background-color: var(--inline_code_block_background_color);
        color: var(--inline_code_block_font_color);
        padding: 2px 6px;
        border-radius: 4px;
        font-size: 0.9em;
        border: 1px solid var(--inline_code_block_border_color);
    }
    
    /* Hover effects para matem√°ticas interactivas */
    .math-display:hover {
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
        transform: translateY(-2px);
        transition: all 0.3s ease;
    }
    
    @media screen and (prefers-reduce-motion) {
        .math-display:hover {
            transform: none;
        }
    }
    
    /* Estilos para fracciones visuales */
    .math-fraction {
        display: inline-block;
        vertical-align: middle;
        text-align: center;
        font-style: italic;
        margin: 0 2px;
    }
    
    .math-fraction-numerator {
        display: block;
        border-bottom: 1px solid currentColor;
        padding-bottom: 2px;
        margin-bottom: 2px;
        font-size: 0.9em;
        line-height: 1;
    }
    
    .math-fraction-denominator {
        display: block;
        padding-top: 2px;
        margin-top: 2px;
        font-size: 0.9em;
        line-height: 1;
    }
    
    /* Fracciones en matem√°ticas en l√≠nea */
    .math-inline .math-fraction {
        font-size: 0.85em;
        margin: 0 1px;
    }
    
    .math-inline .math-fraction-numerator,
    .math-inline .math-fraction-denominator {
        font-size: 0.8em;
        padding: 1px 0;
        margin: 1px 0;
    }
    
    /* Fracciones en matem√°ticas en bloque */
    .math-display .math-fraction {
        font-size: 1.1em;
        margin: 0 3px;
    }
    
    .math-display .math-fraction-numerator,
    .math-display .math-fraction-denominator {
        font-size: 1em;
        padding: 3px 0;
        margin: 2px 0;
    }
    
    /* Fracciones anidadas */
    .math-fraction .math-fraction {
        font-size: 0.8em;
        margin: 0 1px;
    }
    
    .math-fraction .math-fraction-numerator,
    .math-fraction .math-fraction-denominator {
        font-size: 0.75em;
        padding: 1px 0;
        margin: 1px 0;
    }
    
    /* Responsive para fracciones */
    @media (max-width: 768px) {
        .math-fraction {
            font-size: 0.9em;
        }
        
        .math-inline .math-fraction {
            font-size: 0.8em;
        }
        
        .math-display .math-fraction {
            font-size: 1em;
        }
    }

    blockquote {
        background-color: var(--code_block_background_color);
        color: var(--code_block_font_color);
        border-left: 5px solid var(--code_block_border_color);
        padding: 2px 0px 2px 10px;
        margin-left: 20px;
    }

    @media (max-width: 418px) {
        h3 a img {
            width: 15px;
        }
        h4 a img {
            width: 14px;
        }
        h5 a img {
            width: 13px;
        }
    }

	iframe {
		width: 100%;
		height: 100vh;
		border: 1px solid var(--inline_code_background_color);
		box-shadow: 3px 3px 6px 0 hsla(0, 0%, 100%, 0.3);
		border-radius: 7px;
	}

    /* table */
    .output-wrapper {
        width: 100%;
        max-width: 100%;
    }
    .output-area {
        width: 100%;
        max-width: 100%;
    }
    .output-html-rendered-html-output-subareaoutput_execute_result {
        width: 100%;
        max-width: 100%;
    }
    .output-html-rendered-html-output-subareaoutput_execute_result div {
        width: 100%;
        max-width: 100vw;
        white-space: nowrap;
    }
    table {
        overflow-x: auto;
        max-width: 100%;
        white-space: nowrap;
    }
    table thead tr th {
        text-wrap: pretty;
        word-break: break-word;
    }
    table tbody tr td {
        text-wrap: pretty;
        word-break: break-word;
    }

    /* list */
    li {
        text-wrap: pretty;
        word-break: break-word;
    }
    
</style>

<script>
    // Calculate and display footer position and total page length in pixels
    (function () {
        function updateFooterPosition() {
            const continueReadingTitle = document.querySelector('h2.continue-reading-title');
            const continueReadingTitleTopPx = continueReadingTitle
                ? Math.round(continueReadingTitle.getBoundingClientRect().top + window.scrollY)
                : null;
            const pageHeight = Math.max(
                document.body.scrollHeight,
                document.documentElement.scrollHeight,
                document.body.offsetHeight,
                document.documentElement.offsetHeight,
                document.body.clientHeight,
                document.documentElement.clientHeight
            );
            const continueReadingBottomPx = pageHeight - continueReadingTitleTopPx;

            // Update progress bar: reach 100% at H2 position if present
            const progressEl = document.querySelector('.progress');
            if (progressEl) {
                if (continueReadingBottomPx !== null) {
                    progressEl.style.setProperty('animation-range', `0% calc(100% - ${continueReadingBottomPx}px + 800px)`);
                }
            }
        }

        if (document.readyState === 'loading') {
            document.addEventListener('DOMContentLoaded', updateFooterPosition);
        } else {
            updateFooterPosition();
        }
        window.addEventListener('scroll', updateFooterPosition, { passive: true });
        window.addEventListener('resize', updateFooterPosition);
    })();
</script>