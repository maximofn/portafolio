---
import Layout from '@layouts/Layout.astro';
import LastPosts from '@components/LastPosts.astro';

const { social_links } = await import('@portfolio/consts.json');
const { metadata_page } = await import('@portfolio/consts.json');
const { colors } = await import('@portfolio/consts.json');
const { color_palette } = await import('@portfolio/consts.json');
const { max_width } = await import('@portfolio/consts.json');
const { max_width_pre } = await import('@portfolio/consts.json');
const { sticky_top_positions } = await import('@portfolio/consts.json');

interface Props {
	title: string;
	languaje: string;
	description: string;
	keywords: string;
    author: string;
	theme_color: string;
	end_url: string;
    image_path: string;
    image_width: string;
    image_height: string;
    image_extension: string;
    robots: string;
    article_date: string;
}

const { 
	title,
	languaje,
	description,
	keywords,
    author,
	theme_color,
	end_url,
    image_path,
    image_width,
    image_height,
    image_extension,
    robots = "index, follow",
    article_date = "",
} = Astro.props;

const currentPath = Astro.url.pathname;
const all_pages_list = await Astro.glob('../pages/*.astro');
// get all pages url
const pages = all_pages_list.map(page => page.url);

const page_title = metadata_page.title + " - " + title;
const url = social_links.portfolio_link_external + "/" + end_url;

const inline_code_block_font_color = color_palette.color_950;
const inline_code_block_background_color = color_palette.color_200;
const highlight_code_block_font_color = colors.color_white;
const highlight_code_block_background_color = color_palette.color_700;
const inline_code_block_border_color = color_palette.color_500;
const code_block_background_color = color_palette.color_950;
const code_block_font_color = colors.color_white;
const code_block_border_color = color_palette.color_700;
const output_block_background_color = color_palette.color_950;
const a_font_color = colors.color_white;
const generated_images_border_color = color_palette.color_950;
const generated_images_box_shadow_color = color_palette.color_500;
const copy_button_hover_background_color = color_palette.color_900;
const progress_bar_color = color_palette.color_500;

const sticky_top_default=sticky_top_positions.sticky_top_default;
const sticky_top_649px=sticky_top_positions.sticky_top_649px;
const sticky_top_418px=sticky_top_positions.sticky_top_418px;
const sticky_top_334px=sticky_top_positions.sticky_top_334px;
const sticky_top_315px=sticky_top_positions.sticky_top_315px;
const sticky_top_229px=sticky_top_positions.sticky_top_229px;

const max_width_index = "250px";
// max width for content 1500 - 250 = 1250px
const max_width_content = "1250px";

// article_date is like 2021-02-11+T00:00:00Z
const article_date_only_date = article_date.split("T")[0];
let article_date_day = article_date_only_date.split("-")[2];
// if + in article_date_day remove it
if (article_date_day.includes("+")) {
    article_date_day = article_date_day.replace("+", "");
}
let article_date_month = article_date_only_date.split("-")[1];
if (article_date_month === "01") {
    if (languaje.toLowerCase() === "es") {
        article_date_month = "de enero del";
    } else if (languaje.toLowerCase() === "en") {
        article_date_month = "of january of";
    } else if (languaje.toLowerCase() === "pt") {
        article_date_month = "de janeiro de";
    }
} else if (article_date_month === "02") {
    if (languaje.toLowerCase() === "es") {
        article_date_month = "de febrero del";
    } else if (languaje.toLowerCase() === "en") {
        article_date_month = "of february of";
    } else if (languaje.toLowerCase() === "pt") {
        article_date_month = "de fevereiro de";
    }
} else if (article_date_month === "03") {
    if (languaje.toLowerCase() === "es") {
        article_date_month = "de marzo del";
    } else if (languaje.toLowerCase() === "en") {
        article_date_month = "of march of";
    } else if (languaje.toLowerCase() === "pt") {
        article_date_month = "de mar√ßo de";
    }
} else if (article_date_month === "04") {
    if (languaje.toLowerCase() === "es") {
        article_date_month = "de abril del";
    } else if (languaje.toLowerCase() === "en") {
        article_date_month = "of april of";
    } else if (languaje.toLowerCase() === "pt") {
        article_date_month = "de abril de";
    }
} else if (article_date_month === "05") {
    if (languaje.toLowerCase() === "es") {
        article_date_month = "de mayo del";
    } else if (languaje.toLowerCase() === "en") {
        article_date_month = "of may of";
    } else if (languaje.toLowerCase() === "pt") {
        article_date_month = "de maio de";
    }
} else if (article_date_month === "06") {
    if (languaje.toLowerCase() === "es") {
        article_date_month = "de junio del";
    } else if (languaje.toLowerCase() === "en") {
        article_date_month = "of june of";
    } else if (languaje.toLowerCase() === "pt") {
        article_date_month = "de junho de";
    }
} else if (article_date_month === "07") {
    if (languaje.toLowerCase() === "es") {
        article_date_month = "de julio del";
    } else if (languaje.toLowerCase() === "en") {
        article_date_month = "of july of";
    } else if (languaje.toLowerCase() === "pt") {
        article_date_month = "de julho de";
    }
} else if (article_date_month === "08") {
    if (languaje.toLowerCase() === "es") {
        article_date_month = "de agosto del";
    } else if (languaje.toLowerCase() === "en") {
        article_date_month = "of august of";
    } else if (languaje.toLowerCase() === "pt") {
        article_date_month = "de agosto de";
    }
} else if (article_date_month === "09") {
    if (languaje.toLowerCase() === "es") {
        article_date_month = "de septiembre del";
    } else if (languaje.toLowerCase() === "en") {
        article_date_month = "of september of";
    } else if (languaje.toLowerCase() === "pt") {
        article_date_month = "de setembro de";
    }
} else if (article_date_month === "10") {
    if (languaje.toLowerCase() === "es") {
        article_date_month = "de octubre del";
    } else if (languaje.toLowerCase() === "en") {
        article_date_month = "of october of";
    } else if (languaje.toLowerCase() === "pt") {
        article_date_month = "de outubro de";
    }
} else if (article_date_month === "11") {
    if (languaje.toLowerCase() === "es") {
        article_date_month = "de noviembre del";
    } else if (languaje.toLowerCase() === "en") {
        article_date_month = "of november of";
    } else if (languaje.toLowerCase() === "pt") {
        article_date_month = "de novembro de";
    }
} else if (article_date_month === "12") {
    if (languaje.toLowerCase() === "es") {
        article_date_month = "de diciembre del";
    } else if (languaje.toLowerCase() === "en") {
        article_date_month = "of december of";
    } else if (languaje.toLowerCase() === "pt") {
        article_date_month = "de dezembro de";
    }
}
const article_date_year = article_date_only_date.split("-")[0];
---

<Layout 
    title={page_title}
    languaje={languaje}
    description={description}
    keywords={keywords}
    author={author}
    theme_color={theme_color}
    url={url}
    icon={metadata_page.icon}
    robots={robots}
    og_type="article"
    page_image={image_path}
    page_image_width={image_width}
    page_image_height={image_height}
    page_image_extension={image_extension}
    article_date={article_date}
>

    <main class="post-layout">
        <header class="post-container-header">
            <div>
                <h1 class="post-container-header-h1">{title}</h1>
                <time class="post-container-header-date-published" itemprop="datePublished" datetime={article_date}>{article_date_day} {article_date_month} {article_date_year}</time>
            </div>
            <div class="post-container-header-img">
                <img onerror="this.parentNode.removeChild(this)" class="img-top" decoding="async" src={image_path} alt={title} width=auto height=300px transition:name={title} />
                <img onerror="this.parentNode.removeChild(this)" class="img-blur" decoding="async" src={image_path} alt={title} width=auto height=300px transition:name={title} />
            </div>
        </header>

        <div class="progress"></div>

        <slot class="post-container"/>
    </main>
    

</Layout>

<style is:global define:vars={{
	max_width,
	max_width_pre,
    inline_code_block_font_color,
    inline_code_block_background_color,
    highlight_code_block_font_color,
    highlight_code_block_background_color,
    inline_code_block_border_color,
    code_block_background_color,
    code_block_font_color,
    code_block_border_color,
    output_block_background_color,
    a_font_color,
    generated_images_border_color,
    generated_images_box_shadow_color,
    copy_button_hover_background_color,
	sticky_top_default,
	sticky_top_649px,
	sticky_top_418px,
	sticky_top_334px,
	sticky_top_315px,
	sticky_top_229px,
    max_width_index,
    max_width_content,
    progress_bar_color,
}}>

    @keyframes grow-progress {
        from {transform: scaleX(0);}
        to {transform: scaleX(1);}
    }

    .progress {
        position: fixed;
        background: var(--progress_bar_color);
        z-index: 10;
        left: 0;
        top: 99dvh;
        width: 100vw;
        height: 1dvh;
        transform-origin: 0 50%;
        animation: grow-progress auto linear;
        animation-timeline: --page-scroll;
        animation-range: 0% calc(100% - 8600px);
    }
    @media screen and (prefers-reduce-motion){
        .progress {
            animation: none;
        }
    }

    .post-layout {
        display: flex;
        flex-direction: column;
        align-items: flex-start;
        gap: 100px;
        width: 100%;
    }
    .post-container-header {
        display: flex;
        flex-direction: row;
        justify-content: space-evenly;
        flex-wrap: wrap;
        align-items: center;
        gap: 50px;
        width: 100%;
    }
    @media (max-width: 390px) {
        .post-container-header-h1 {
            font-size: 1.5rem;
        }
    }
    .post-container-header-img {
        display: flex;
        flex-direction: row;
        justify-content: center;
        align-items: center;
    }
    .post-container-header-date-published {
        font-size: 0.8rem;
    }
    .img-top {
        width: 300px;
        max-width: 100%;
        height: auto;
        z-index: 9;
    }
    .img-blur {
        width: 300px;
        max-width: 100%;
        height: auto;
        z-index: 8;
        position: absolute;
        filter: blur(7px);
    }
    .post-container-header-h1 {
        margin: 0;
        padding: 0;
        text-align: center;
    }

    .post-body {
        display: flex;
        flex-direction: row;
        align-content: flex-start;
        justify-content: flex-start;
        align-items: flex-start;
        max-width: var(--max_width);
        width: 100%;
    }
    .post-body h1 {
        display: none;
    }

    .post-index {
        display: flex;
        flex-direction: column;
        gap: 20px;
        position: sticky;
        top: var(--sticky_top_default);
        max-width: var(--max_width_index);
        max-height: 100vh;
        overflow-y: auto;
        overflow-x: auto;
        margin-top: 100px;
    }
    @media (max-width: 1500px) {
        .post-index {
            display: none;
        }
    }
    .post-index a {
        text-decoration: none;
    }
    .post-index h1, .post-index h2, .post-index h3, .post-index h4, .post-index h5, .post-index h6 {
        margin-top: 0px;
        margin-bottom: 0px;
        margin: 0px;
        padding: 0px;
    }
    .post-index h2 {
        font-size: medium;
    }
    .post-index h3 {
        padding-left: 6px;
        font-size: small;
    }
    .post-index h4 {
        padding-left: 12px;
        font-size: smaller;
    }
    .post-index h5 {
        padding-left: 18px;
        font-size: x-small;
    }
    .post-index h6 {
        padding-left: 24px;
        font-size: x-small;
    }

    .post-body-content{
        padding-left: 20px;
        margin-left: 50px;
        max-width: var(--max_width_content);
    }
    @media (max-width: 1500px) {
		.post-body-content {
            padding-inline: 0px;
            margin-left: 0px;
		}
		
	}
    .post-body-content h2, .post-body-content h3 {
        position: static;
    }
    @keyframes reveral {
        entry 0% {
            transform: scale(0.8) translateY(100px); 
            opacity: 0;
        }
        entry 100% { 
            transform: scale(1) translateY(0); 
            opacity: 1;
        }
    }
    .post-body-content img {
        max-width: 100%;
        height: auto;
        animation: auto linear reveral both;
        animation-timeline: view();
        animation-range: entry 50% cover 50%;
    }
    @media screen and (prefers-reduce-motion){
        .post-body-content img {
            animation: none;
        }
    }
    /* Code in text */
    code, .section-block-markdown-cell .highlight {
        background-color: var(--inline_code_block_background_color);
        color: var(--inline_code_block_font_color);
        border: 1px solid var(--inline_code_block_border_color);
        padding: 0px 3px;
        border-radius: 7px;
        opacity: 0.8;
        text-wrap: pretty;
    }
    .section-block-markdown-cell .highlight {
        background-color: var(--highlight_code_block_background_color);
        color: var(--highlight_code_block_font_color);
        box-shadow: 3px 3px 6px 0 hsla(0, 0%, 100%, 0.3);
        padding: 3px 30px;
        margin: 20px 0px 20px 20px;
        width: fit-content;
    }
    .section-block-markdown-cell .highlight pre {
        text-wrap: pretty;
    }
    /* img in post */
    p img {
        width: auto;
        height: auto;
    }

    /* code style */
    .ansi-blue-fg {
        color: #9797ff; /* blue */
    }
    .ansi-cyan-fg {
        color: cyan;    /* cyan */
    }
    .ansi-green-fg, .ansi-green-intense-fg {
        color: #50cb50; /* green */
    }
    .ansi-bold {
        font-weight: bold;
    }
    .ansi-red-fg .ansi-red-intense-fg .nv {
        color: #fd7d7d; /* red */
        font-weight: bold;
    }
    .ansi-yellow-fg .ansi-yellow-fg .ansi-yellow-intense-fg {
        color: yellow;  /* yellow */
    }
    .ansi-magenta-fg {
        color: #ff57ff; /* magenta */
    }
    .ansi-white-fg {
        color: white;   /* white */
    }
    .ansi-black-fg {
        color: black;   /* black */
    }
    .bp, .nb {
        color: #87c1dd; /* blue */
    }
    .c1 {
        color: #9bc77d; /* green */
    }
    .fm, .nf {
        color: #dfdf86; /* yellow */
    }
    .k, .kn, .si {
        color: #ff8fff; /* magenta */
    }
    .kc, .ow, .sa {
        color: #9bbaff; /* blue */
    }
    .mf, .mi, .nd {
        color: #ffffa6; /* yellow */
    }
    .n, .vm {
        color: #a2c9db; /* blue */
    }
    .nc, .ne, .nn {
        color: #79d779; /* green */
    }
    .o {
        color: white;   /* white */
    }
    .p, .se {
        color: yellow;  /* yellow */
    }
    .s1, .s2, .sd, .sb {
        color: #ffa63a; /* orange */
    }
    .w .ansi-default-inverse-fg .m {
    }

    blockquote {
        background-color: var(--code_block_background_color);
        color: var(--code_block_font_color);
        border-left: 5px solid var(--code_block_border_color);
        padding: 2px 0px 2px 10px;
        margin-left: 20px;
    }

    @media (max-width: 418px) {
        h3 a img {
            width: 15px;
        }
        h4 a img {
            width: 14px;
        }
        h5 a img {
            width: 13px;
        }
    }
    
</style>