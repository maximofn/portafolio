---
import PostLayout from '@layouts/PostLayout.astro';
import CodeBlockInputCell from '@components/CodeBlockInputCell.astro';
import CodeBlockOutputCell from '@components/CodeBlockOutputCell.astro';

const { metadata_page } = await import('@portfolio/consts.json');
const { colors } = await import('@portfolio/consts.json');
const { svg_paths } = await import('@portfolio/consts.json');

const page_title = 'CSS';
const end_url = 'css';
const description = 'CSS, or Cascading Style Sheets, is a fundamental technology in web design that allows developers and designers to style and present HTML documents in a sophisticated and efficient manner. Through CSS, we can control layout, colors, fonts, and much more, enabling the creation of rich and visually appealing user experiences. This post explores the basics of CSS, from selectors and properties to the box model, offering a detailed guide for those looking to get started or improve their web design skills. With practical examples and helpful tips, it demonstrates how CSS makes it easy to separate content from presentation, improving the accessibility and maintainability of web projects.';
const keywords = 'css, web design, styling, layout, selectors, properties, box model, accessibility, maintainability';
const languaje = 'EN';
const image_path = 'https://pub-fb664c455eca46a2ba762a065ac900f7.r2.dev/CSS3.webp';
const opening_brace = '{';
const closing_brace = '}';
---

<PostLayout 
    title={page_title}
    languaje={languaje}
    description={description}
    keywords={keywords}
    author={metadata_page.author}
    theme_color={colors.background_color}
    end_url={end_url}
    image_path={image_path}
    image_width=1000
    image_height=600
    image_extension=webp
    article_date=2024-02-05+T00:00:00Z
>

  <section class="post-body">


    <aside class="post-index">
      <a class="anchor-link" href="#Parts of CSS (selector, properties, values)"><h2>Parts of CSS (selector, properties, values)</h2></a>
      <a class="anchor-link" href="#Selectors"><h2>Selectors</h2></a>
      <a class="anchor-link" href="#Styles"><h2>Styles</h2></a>
      <a class="anchor-link" href="#Color"><h3>Color</h3></a>
      <a class="anchor-link" href="#Current Color"><h3>Current Color</h3></a>
      <a class="anchor-link" href="#Inheritance"><h3>Inheritance</h3></a>
      <a class="anchor-link" href="#Sources"><h3>Sources</h3></a>
      <a class="anchor-link" href="#Border and Outline"><h3>Border and Outline</h3></a>
      <a class="anchor-link" href="#Waterfall"><h2>Waterfall</h2></a>
      <a class="anchor-link" href="#Fallback"><h3>Fallback</h3></a>
      <a class="anchor-link" href="#Specificity"><h3>Specificity</h3></a>
      <a class="anchor-link" href="#Units"><h2>Units</h2></a>
      <a class="anchor-link" href="#Units of length"><h3>Units of length</h3></a>
      <a class="anchor-link" href="#Absolute Units"><h4>Absolute Units</h4></a>
      <a class="anchor-link" href="#Relative units"><h4>Relative units</h4></a>
      <a class="anchor-link" href="#Box Model"><h2>Box Model</h2></a>
      <a class="anchor-link" href="#Inline boxes inline"><h3>Inline boxes <code>inline</code></h3></a>
      <a class="anchor-link" href="#Boxes block"><h3>Boxes <code>block</code></h3></a>
      <a class="anchor-link" href="#Margin, Border, Padding and Content"><h3>Margin, Border, Padding and Content</h3></a>
      <a class="anchor-link" href="#Box Size When Changing Padding"><h4>Box Size When Changing Padding</h4></a>
      <a class="anchor-link" href="#Box Size When Changing the Border"><h4>Box Size When Changing the Border</h4></a>
      <a class="anchor-link" href="#Box Size When Changing the Margin"><h4>Box Size When Changing the Margin</h4></a>
      <a class="anchor-link" href="#Box Size"><h4>Box Size</h4></a>
      <a class="anchor-link" href="#Box-sizing"><h3>Box-sizing</h3></a>
      <a class="anchor-link" href="#Overflow"><h3>Overflow</h3></a>
      <a class="anchor-link" href="#Overflow hidden"><h3>Overflow hidden</h3></a>
      <a class="anchor-link" href="#Styling the Bar"><h4>Styling the Bar</h4></a>
      <a class="anchor-link" href="#Position"><h3>Position</h3></a>
      <a class="anchor-link" href="#Position relative"><h4>Position relative</h4></a>
      <a class="anchor-link" href="#Position absolute"><h4>Position absolute</h4></a>
      <a class="anchor-link" href="#Position fixed"><h4>Position fixed</h4></a>
      <a class="anchor-link" href="#Position sticky"><h4>Position sticky</h4></a>
      <a class="anchor-link" href="#Z-index"><h3>Z-index</h3></a>
      <a class="anchor-link" href="#Flexbox and Grid"><h2>Flexbox and Grid</h2></a>
      <a class="anchor-link" href="#Flexbox"><h2>Flexbox</h2></a>
      <a class="anchor-link" href="#Flex-direction"><h3>Flex-direction</h3></a>
      <a class="anchor-link" href="#Direction"><h3>Direction</h3></a>
      <a class="anchor-link" href="#Flex-wrap"><h3>Flex-wrap</h3></a>
      <a class="anchor-link" href="#Flex-flow"><h3>Flex-flow</h3></a>
      <a class="anchor-link" href="#Flex-grow, Flex-shrink and Flex-basis"><h3>Flex-grow, Flex-shrink and Flex-basis</h3></a>
      <a class="anchor-link" href="#Order"><h3>Order</h3></a>
      <a class="anchor-link" href="#Justify-content"><h3>Justify-content</h3></a>
      <a class="anchor-link" href="#Gap"><h3>Gap</h3></a>
      <a class="anchor-link" href="#Align-items"><h3>Align-items</h3></a>
      <a class="anchor-link" href="#Align-content"><h3>Align-content</h3></a>
      <a class="anchor-link" href="#Align-content vs Align-items"><h3>Align-content vs Align-items</h3></a>
      <a class="anchor-link" href="#Align-self"><h3>Align-self</h3></a>
      <a class="anchor-link" href="#Flexbox Practice"><h3>Flexbox Practice</h3></a>
      <a class="anchor-link" href="#Grid"><h2>Grid</h2></a>
      <a class="anchor-link" href="#Grid container"><h3>Grid container</h3></a>
      <a class="anchor-link" href="#Fraction"><h3>Fraction</h3></a>
      <a class="anchor-link" href="#Empty Grid"><h3>Empty Grid</h3></a>
      <a class="anchor-link" href="#Grid-auto-rows"><h3>Grid-auto-rows</h3></a>
      <a class="anchor-link" href="#Repeat"><h3>Repeat</h3></a>
      <a class="anchor-link" href="#minmax"><h3>minmax</h3></a>
      <a class="anchor-link" href="#Grid-column-gap and Grid-row-gap"><h3>Grid-column-gap and Grid-row-gap</h3></a>
      <a class="anchor-link" href="#Auto-fill and Auto-fit"><h3>Auto-fill and Auto-fit</h3></a>
      <a class="anchor-link" href="#Auto-fill vs Auto-fit"><h3>Auto-fill vs Auto-fit</h3></a>
      <a class="anchor-link" href="#Grid-column-start and Grid-column-end (bento grid)"><h3>Grid-column-start and Grid-column-end (bento grid)</h3></a>
      <a class="anchor-link" href="#Grid-row-start and Grid-row-end (bento grid)"><h3>Grid-row-start and Grid-row-end (bento grid)</h3></a>
      <a class="anchor-link" href="#Element Overlapping"><h3>Element Overlapping</h3></a>
      <a class="anchor-link" href="#Layouts with Grid"><h3>Layouts with Grid</h3></a>
      <a class="anchor-link" href="#Grid-area"><h3>Grid-area</h3></a>
      <a class="anchor-link" href="#Justify-items, Align-items, Justify-content and Align-content"><h3>Justify-items, Align-items, Justify-content and Align-content</h3></a>
      <a class="anchor-link" href="#Justify-items"><h4>Justify-items</h4></a>
      <a class="anchor-link" href="#Justify-self"><h4>Justify-self</h4></a>
      <a class="anchor-link" href="#Align-items"><h4>Align-items</h4></a>
      <a class="anchor-link" href="#Align-self"><h4>Align-self</h4></a>
      <a class="anchor-link" href="#Place-content"><h4>Place-content</h4></a>
      <a class="anchor-link" href="#Grid Practice"><h3>Grid Practice</h3></a>
      <a class="anchor-link" href="#Center a div"><h2>Center a div</h2></a>
      <a class="anchor-link" href="#Animations"><h2>Animations</h2></a>
      <a class="anchor-link" href="#Transitions"><h3>Transitions</h3></a>
      <a class="anchor-link" href="#Transition"><h4>Transition</h4></a>
      <a class="anchor-link" href="#Smooth transitions"><h4>Smooth transitions</h4></a>
      <a class="anchor-link" href="#Step-by-step Transitions"><h4>Step-by-step Transitions</h4></a>
      <a class="anchor-link" href="#Full control of the transition with cubic-bezier"><h4>Full control of the transition with cubic-bezier</h4></a>
      <a class="anchor-link" href="#Everything in one line"><h4>Everything in one line</h4></a>
      <a class="anchor-link" href="#What to Transition?"><h4>What to Transition?</h4></a>
      <a class="anchor-link" href="#Different transitions at the beginning and end"><h4>Different transitions at the beginning and end</h4></a>
      <a class="anchor-link" href="#Accessibility"><h4>Accessibility</h4></a>
      <a class="anchor-link" href="#Animations"><h3>Animations</h3></a>
      <a class="anchor-link" href="#Keyframes"><h4>Keyframes</h4></a>
      <a class="anchor-link" href="#After"><h4>After</h4></a>
      <a class="anchor-link" href="#Movement"><h4>Movement</h4></a>
      <a class="anchor-link" href="#Address"><h4>Address</h4></a>
      <a class="anchor-link" href="#Pause animations"><h4>Pause animations</h4></a>
      <a class="anchor-link" href="#CSS nesting"><h4>CSS nesting</h4></a>
      <a class="anchor-link" href="#How to End Animations"><h4>How to End Animations</h4></a>
      <a class="anchor-link" href="#Everything in one line"><h4>Everything in one line</h4></a>
      <a class="anchor-link" href="#Scroll Animations"><h4>Scroll Animations</h4></a>
      <a class="anchor-link" href="#Example of progress bar"><h5>Example of progress bar</h5></a>
      <a class="anchor-link" href="#Example of a header that changes color"><h5>Example of a header that changes color</h5></a>
      <a class="anchor-link" href="#Example of image gallery"><h5>Example of image gallery</h5></a>
    </aside>


    <div class="post-body-content">
      
      <section class="section-block-markdown-cell">
      </section>
      
      <section class="section-block-markdown-cell">
      <blockquote>
      <p>Disclaimer: This post has been translated to English using a machine translation model. Please, let me know if you find any mistakes.</p>
      </blockquote>
      </section>
      
      <section class="section-block-markdown-cell">
      <h2 id="Parts of CSS (selector, properties, values)">Parts of CSS (selector, properties, values)<a class="anchor-link" href="#Parts of CSS (selector, properties, values)"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 96" src={svg_paths.link_svg_path}/></a></h2>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>In CSS, we can talk about three main parts:</p>
      <ul>
        <li><strong>Selector</strong>: It is the part that selects the element to which the style will be applied.</li>
        <li><strong>Property</strong>: It is the part that defines the style to be applied to the element.</li>
        <li><strong>Value</strong>: It is the part that defines the value of the property to be applied to the element.</li>
      </ul>
      <p>To add comments in CSS, use <code>/* comment */</code>.</p>
      <p>The line that has <code>property: value;</code> is called a **declaration**.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">selector &#123;<br>property: value;   /* comment */<br>&#125;</code></pre></div>
            </section>
      </section>
      
      <section class="section-block-markdown-cell">
      <h2 id="Selectors">Selectors<a class="anchor-link" href="#Selectors"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 97" src={svg_paths.link_svg_path}/></a></h2>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>There are several types of selectors:</p>
      <ul>
        <li><strong>Universal selector</strong>: Selects all elements on the page. It uses the asterisk <code>*</code>.</li>
        <li><strong>Type selector</strong>: Selects all elements of a type. It uses the name of the element type. For example, <code>p</code> selects all paragraphs.</li>
        <li><strong>Class selector</strong>: Selects all elements that have a class. The class name is used. For example, <code>.class</code> selects all elements that have the class <code>class</code>. This is useful because if we want all buttons to be the same, in the HTML we put <code>&lt;button class="button"&gt;</code> and in the CSS we put <code>.button &#123; /* styles */ &#125;</code>. This way, all buttons will have the same styles, and if we want a button to be different, we give it another class.</li>
        <li><strong>Pseudo-class selector</strong>: Selects all elements that have a pseudo-class. It uses the name of the pseudo-class. For example, <code>:hover</code> selects all elements that are being targeted by the mouse. This is useful because if we want a button to change color when the mouse is over it, in the CSS we put <code>.button:hover &#123; /* styles */ &#125;</code>. This way, the button will have the desired styles when the mouse is over it. Some pseudo-classes are:</li>
        <li><code>:hover</code>: Selects all elements that are being targeted by the mouse.</li>
        <li><code>:active</code>: Selects all elements that are being selected by the mouse and are being pressed.</li>
        <li><code>:focus</code>: Selects all elements that are being targeted by the mouse and are being pressed, and also have focus.</li>
        <li><code>:first-child</code>: Selects all elements that are the first child of their parent. This is useful, for example, with the <code>&lt;li&gt;</code> items in lists, because if we want the first element of the list to have a different style, in the CSS we put <code>li:first-child &#123; /* styles */ &#125;</code>. This way, the first element of the list will have the styles we want.</li>
        <li><code>:last-child</code>: Selects all elements that are the last child of their parent. This is useful, for example, with the <code>&lt;li&gt;</code> items in lists, because if we want the last element of the list to have a different style, in the CSS we put <code>li:last-child &#123; /* styles */ &#125;</code>. This way, the last element of the list will have the styles we want.</li>
        <li><code>:nth-child(n)</code>: Selects all elements that are the nth child of their parent. For example, <code>:nth-child(2)</code> selects all elements that are the second child of their parent.</li>
        <li><code>:nth-last-child(n)</code>: Selects all elements that are the n-th child of their parent, counting from the end. For example, <code>:nth-last-child(2)</code> selects all elements that are the second child of their parent, counting from the end.</li>
        <li><code>:nth-of-type(n)</code>: Selects all elements that are the n-th child of their parent, of the same type. For example, <code>:nth-of-type(2)</code> selects all elements that are the second child of their parent, of the same type.</li>
        <li><code>:nth-last-of-type(n)</code>: Selects all elements that are the n-th child of their parent, of the same type, starting from the end. For example, <code>:nth-last-of-type(2)</code> selects all elements that are the second child of their parent, of the same type, starting from the end.</li>
        <li><code>:first-of-type</code>: Selects all elements that are the first child of their parent, of the same type.</li>
        <li><code>:last-of-type</code>: Selects all elements that are the last child of their parent, of the same type.</li>
        <li><code>:only-child</code>: Selects all elements that are the only child of their parent.</li>
        <li><code>:only-of-type</code>: Selects all elements that are the only child of their parent, of the same type.</li>
        <li><code>:empty</code>: Selects all elements that have no children.</li>
        <li><strong>ID selector</strong>: Selects an element that has a specific id. It uses the name of the id. For example, <code>#id</code> selects the element that has the id <code>id</code>. This is useful because if we want an element to be unique, in the HTML we put <code>&lt;p id="unique"&gt;</code> and in the CSS we put <code>#unique &#123; /* styles */ &#125;</code>. This way, that element will have the styles we want, and if we want another element to be the same, we give it a different class.</li>
        <li><strong>Combined selectors</strong>: Select elements that meet multiple conditions. Use the selectors you want, separated by a space. For example, <code>p .clase</code> selects all elements that have the class <code>clase</code> and are children of a paragraph. This is useful because if we want all buttons within a paragraph to be the same, in the HTML we put <code>&lt;p class="parrafo_que_quiero_cambiar"&gt;&lt;button class="boton"&gt;</code> and in the CSS we put <code>.parrafo_que_quiero_cambiar .boton &#123; /* styles */ &#125;</code>. This way, all buttons inside a paragraph with the class <code>parrafo_que_quiero_cambiar</code> will have the same styles, and if we want a button to be different, we give it another class.</li>
        <li><strong>First-level combined selector</strong>: Select elements that meet several conditions, but only if they are at the first level. Use any selectors you want, separated by a <code>></code>. For example, <code>p > .class</code> selects all elements that have the class <code>class</code> and are direct children of a paragraph. This is useful because if we want all buttons inside a paragraph to be the same, in the HTML we put <code>&lt;p class="paragraph_i_want_to_change"&gt;&lt;button class="button"&gt;</code> and in the CSS we put <code>.paragraph_i_want_to_change > .button &#123; /* styles */ &#125;</code>. This way, all buttons inside a paragraph with the class <code>paragraph_i_want_to_change</code> will have the same styles. If we want a button to be different, we give it another class.</li>
        <li><strong>General sibling combinator selector</strong>: Select elements that meet multiple conditions, but only if they are at the same level. Use any selectors you want, separated by a <code>~</code>. For example, <code>p ~ .class</code> selects all elements with the class <code>class</code> that are at the same level as a paragraph. This is useful because if we want all buttons at the same level as a paragraph to be the same, in the HTML we put <code>&lt;p class="paragraph_i_want_to_change"&gt;&lt;/p&gt;&lt;button class="button"&gt;</code> and in the CSS we put <code>.paragraph_i_want_to_change ~ .button &#123; /* styles */ &#125;</code>. This way, all buttons at the same level as a paragraph with the class <code>paragraph_i_want_to_change</code> will have the same styles. If we want a button to be different, we give it another class.</li>
        <li><strong>Adjacent sibling combinator selector</strong>: Selects elements that meet several conditions, but only if they are at the same level and adjacent. We use the selectors we want, separated by a <code>+</code>. For example, <code>p + .class</code> selects all elements that have the class <code>class</code> and are at the same level and adjacent to a paragraph. This is useful because if we want all buttons that are at the same level and adjacent to a paragraph to be the same, in the HTML we put <code>&lt;p class="paragraph_to_change"&gt;&lt;/p&gt;&lt;button class="button"&gt;</code> and in the CSS we put <code>.paragraph_to_change + .button &#123; /* styles */ &#125;</code>. This way, all buttons that are at the same level and adjacent to a paragraph with the class <code>paragraph_to_change</code> will have the same styles, and if we want a button to be different, we give it another class.</li>
      </ul>
      <p>It is common to use the class selector, because this way we can reuse the styles.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h2 id="Styles">Styles<a class="anchor-link" href="#Styles"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 98" src={svg_paths.link_svg_path}/></a></h2>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="Color">Color<a class="anchor-link" href="#Color"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 99" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>The color can be set in several ways:</p>
      <ul>
        <li><strong>Name</strong>: You can put the name of the color. For example, <code>red</code> is red.</li>
        <li><strong>Hexadecimal</strong>: The color can be set in hexadecimal. For example, <code>#ff0000</code> is red.</li>
      </ul>
      <p>If you want to add transparency, you can use <code>#ff000080</code>, which is red with 50% transparency.</p>
      <p>If only three numbers are provided, they repeat. For example, <code>#f10</code> is the same as <code>#ff1100</code>. If you want to add transparency, you can use <code>#f108</code>, which is the same as <code>#ff110088</code>.</p>
      <ul>
        <li><strong>RGB</strong>: The color can be set in RGB. For example, <code>rgb(255, 0, 0)</code> is red.</li>
      </ul>
      <p>If you want to add transparency, you can use <code>rgb(255 0 0 / 0.5)</code>, which is red with 50% transparency. You can also set the transparency as a percentage, <code>rgb(255 0 0 / 50%)</code>. You can find the legacy way of setting transparency with <code>rgba(255, 0, 0, 0.5)</code>, which is red with 50% transparency, but it's best to use the modern method.</p>
      <ul>
        <li><strong>HSL</strong>: You can set the color in HSL. For example, <code>hsl(0, 100%, 50%)</code> is red.</li>
      </ul>
      <ul>
        <li><strong>OKLCH</strong>: The color can be set in OKLCH. For example, <code>oklch(0 100% 50%)</code> is red.</li>
      </ul>
      <p>In <code>HSL</code> and <code>OKLCH</code> there is a wider color scale than in <code>RGB</code>, so if you need more colors, it's better to use <code>HSL</code> or <code>OKLCH</code>.</p>
      <p>Transparency can also be added by including the statement <code>color:transparent</code>.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="Current Color">Current Color<a class="anchor-link" href="#Current Color"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 100" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>There is a color value that is <code>currentColor</code>, which is the current color. For example, if we have some text and set its color to red, and then add a border to this text, if we put <code>border: 1px solid currentColor;</code>, the border will be red.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">p &#123;<br>color: red;<br>border: 1px solid currentColor;<br>It seems like you didn&#39;t provide any Markdown text to translate. Please provide the Markdown text you want translated to English.</code></pre></div>
            </section>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="Inheritance">Inheritance<a class="anchor-link" href="#Inheritance"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 101" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>When a style is applied to an element, this style is inherited by the child elements. For example, if we have a <code>div</code> with some text, and we set the color to red for the <code>div</code>, the text will also be red.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-html">&lt;div&gt;<br>&lt;p&gt;Text&lt;/p&gt;<br>&lt;/div&gt;</code></pre></div>
            </section>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">div &#123;<br>color: red;<br>It seems like you didn&#39;t provide any Markdown text to translate. Please provide the Markdown text you want translated to English.</code></pre></div>
            </section>
      <p>By doing this, the text will be red.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>We can indicate in the child which styles are inherited. For example, suppose we have a parent and a child</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-html">&lt;div class="parent"&gt;<br>&lt;p class="child"&gt;Text&lt;/p&gt;<br>&lt;/div&gt;</code></pre></div>
            </section>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">.parent &#123;<br>color: red;<br>&#125;<br><br>.son &#123;<br>color: inherit;<br>&#125;</code></pre></div>
            </section>
      <p>By doing this, the text will be red, because the child inherits the color from the parent.</p>
      <p>The possible options are:</p>
      <ul>
        <li><code>inherit</code>: Inherits the style from the parent.</li>
        <li><code>initial</code>: Sets the style to its default value.</li>
        <li><code>unset</code>: Resets the style</li>
        <li><code>revert</code>: Revert the style</li>
      </ul>
      <p>Not all styles are inherited, for example, the <code>background</code> is not inherited. To know which styles are inherited without listing them all, one way is to go to <code>MDN</code> and check if the style has the <code>Inherited</code> property set to <code>yes</code> (within <code>Formal definition</code>).</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="Sources">Sources<a class="anchor-link" href="#Sources"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 102" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>When loading fonts, they can be loaded in several ways:</p>
      <ul>
        <li><strong>Local</strong>: A local font can be loaded. For example, <code>font-family: Arial;</code> loads the Arial font.</li>
        <li><strong>URL</strong>: A font can be loaded from a URL. For example, <code>font-family: url(https://fonts.googleapis.com/css2?family=Roboto);</code> loads the Roboto font from Google Fonts.</li>
        <li><strong>Generic</strong>: A generic font can be loaded. For example, <code>font-family: sans-serif;</code> loads a sans-serif font. This font depends on the operating system, so it will be Arial on Windows, Helvetica on Mac, and DejaVu Sans on Linux.</li>
      </ul>
      <p>Multiple fonts can be loaded, and if one is not available, the next one is loaded. For example, <code>font-family: Arial, sans-serif;</code> loads Arial, and if it is not available, it loads a sans-serif font.</p>
      <p>A font can also be loaded with multiple styles. For example, <code>font-family: Arial, sans-serif; font-weight: 700;</code> loads Arial in bold, and if it is not available, it loads a sans-serif font in bold.</p>
      <p>As <code>sans-serif</code> is a generic font, it's best to always put it last, so that if the font we want is not available, the generic one will be loaded.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">p &#123;<br>font-family: url(https://fonts.googleapis.com/css2?family=Roboto), url(https://fonts.googleapis.com/css2?family=Roboto+Slab), Ubuntu, sans-serif;<br>&#125;</code></pre></div>
            </section>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="Border and Outline">Border and Outline<a class="anchor-link" href="#Border and Outline"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 103" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>We can add a border to an element with <code>border: 1px solid red;</code>. This adds a border that is 1px thick, solid, and red.</p>
      <p>If we want to add an outline, we can use <code>outline: 1px solid red;</code>. This adds a 1px thick, solid, and red outline.</p>
      <p>The difference between <code>border</code> and <code>outline</code> is that <code>border</code> takes up space, while <code>outline</code> does not. For example, if we have a <code>div</code> with some text, and we add a border, the text will move to make room for the border. If we add an outline, the text will not move, because the outline does not take up space. This can be observed if we change the style in the <code>:hover</code> pseudo-class. If we add a border, when we hover over it, the text will move, but if we add an outline, the text will not move.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h2 id="Waterfall">Waterfall<a class="anchor-link" href="#Waterfall"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 104" src={svg_paths.link_svg_path}/></a></h2>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>The cascade is the order in which styles are applied. The order is:</p>
      <ol>
        <li>User styles: These are the styles that the user has configured. For example, if the user has set the text to be red, the text will be red.</li>
        <li>Author styles: These are the styles that the author has configured. For example, if the author has configured the text to be blue, the text will be blue.</li>
        <li>Browser styles: These are the browser's styles. For example, if the browser is configured to have text in green color, the text will be green.</li>
      </ol>
      <p>User styles prevail over author styles, and author styles prevail over browser styles.</p>
      <p>But within the author's styles, the styles that are lower in the code prevail. For example, if we have a <code>div</code> with some text, and we set the color to red, and then set the color to blue, the text will be blue.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-html">&lt;div&gt;<br>&lt;p&gt;Text&lt;/p&gt;<br>&lt;/div&gt;</code></pre></div>
            </section>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">div &#123;color: red;<br>&#125;<br><br>div &#123;<br>color: blue;<br>&#125;</code></pre></div>
            </section>
      <p>In this example, the text will be blue. The red color is overridden with the blue color.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="Fallback">Fallback<a class="anchor-link" href="#Fallback"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 105" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>One of the benefits of the cascade is that we can apply a very new style, but in case the browser the user is using does not support it, we can set an older style beforehand just in case. For example, styling the color with <code>oklch</code> is something new, which might not be supported by the browser the user is using, so we can set an older style beforehand just in case.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">p &#123;<br>color: rgb(255, 0, 0);<br>color: oklch(0 100% 50%);<br>It seems like you&#39;ve provided an incomplete or incorrect Markdown text to translate. Please provide the full Markdown text you want translated into English.</code></pre></div>
            </section>
      <p>This way, the browser will first try to style with <code>oklch</code>, and if it can't, it will style with <code>rgb</code>.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="Specificity">Specificity<a class="anchor-link" href="#Specificity"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 106" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>An HTML element can have several ways to refer to it. For example</p>
      <div class='highlight'><pre><code class="language-html">&lt;p class="clase" id="id"&gt;Text&lt;/p&gt;</code></pre></div>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">p &#123;<br>color: red;<br>&#125;<br><br>.class &#123;<br>color: blue;<br>&#125;<br><br>#id &#123;<br>color: green;<br>&#125;</code></pre></div>
            </section>
      <p>In this example, the text will be green. This is because the id selector has more specificity than the class selector, and the class selector has more specificity than the type selector. Therefore, the id selector overrides the class selector, and the class selector overrides the type selector.</p>
      <p>If we had in the CSS</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">p &#123;<br>color: red;<br>&#125;<br><br>p.class &#123;<br>color: blue;<br>It seems like you have provided an incomplete or incorrect Markdown text to translate. Please provide the full Markdown content so I can assist with the translation.</code></pre></div>
            </section>
      <p>The text would be blue. This is because the class selector has more specificity than the type selector, so the class selector overrides the type selector.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Inline styles have more specificity than author styles. For example</p>
      <div class='highlight'><pre><code class="language-html">&lt;p style="color: red;"&gt;Text&lt;/p&gt;</code></pre></div>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">p &#123;<br>color: blue;<br>It seems like you might have accidentally sent an incomplete or incorrect Markdown text. Could you please provide the actual Markdown content that needs to be translated?</code></pre></div>
            </section>
      <p>In this example, the text will be red. This is because the inline style has more specificity than the author's style.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>If <code>!important</code> is added to the end of the declaration, this declaration will have more specificity than any other. For example</p>
      <div class='highlight'><pre><code class="language-html">&lt;p class="clase" id="id"&gt;Text&lt;/p&gt;</code></pre></div>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">p &#123;<br>color: red;<br>&#125;<br><br>.class &#123;<br>color: blue;<br>It seems like there might be a missing Markdown text to translate. Could you please provide the Markdown content that needs to be translated?<br><br>#id &#123;<br>color: green;<br>&#125;<br><br>p.class &#123;<br>color: yellow !important;<br>&#125;</code></pre></div>
            </section>
      <p>In this example, the text will be yellow. This is because the declaration with <code>!important</code> has more specificity than any other.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h2 id="Units">Units<a class="anchor-link" href="#Units"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 107" src={svg_paths.link_svg_path}/></a></h2>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="Units of length">Units of length<a class="anchor-link" href="#Units of length"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 108" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <h4 id="Absolute Units">Absolute Units<a class="anchor-link" href="#Absolute Units"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 109" src={svg_paths.link_svg_path}/></a></h4>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>If we want to set a fixed size, we can use absolute units. For example, <code>px</code> is a pixel, <code>cm</code> is a centimeter, <code>mm</code> is a millimeter, <code>in</code> is an inch, <code>pt</code> is a point, <code>pc</code> is a pica.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h4 id="Relative units">Relative units<a class="anchor-link" href="#Relative units"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 110" src={svg_paths.link_svg_path}/></a></h4>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>However, if we want the size to be relative, we can use relative units. For example, <code>em</code> is the font size, <code>rem</code> is the root element's font size, <code>vw</code> is the viewport width, <code>vh</code> is the viewport height, <code>vmin</code> is the viewport width or height, whichever is smaller, <code>vmax</code> is the viewport width or height, whichever is larger, <code>ch</code> is the width of a character, <code>ex</code> is the x-height, and <code>fr</code> is a fraction of the available space.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h2 id="Box Model">Box Model<a class="anchor-link" href="#Box Model"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 111" src={svg_paths.link_svg_path}/></a></h2>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>In HTML, everything is boxes, but there are two ways to view the boxes: <code>inline</code> and <code>block</code>. For example, <code>&#x3C;span&#x3E;</code> elements are <code>inline</code>, and <code>&#x3C;div&#x3E;</code> elements are <code>block</code>.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="Inline boxes inline">Inline boxes <code>inline</code><a class="anchor-link" href="#Inline boxes inline"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 112" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>When the element is <code>inline</code>, width and height cannot be set, and the element behaves as if it were text. For example, if we have a <code>span</code> with some text, and we set a width and height, the width and height will not be applied, and the element will behave as if it were text.</p>
      <div class='highlight'><pre><code class="language-html">&lt;span&gt;Text&lt;/span&gt;</code></pre></div>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">span &#123;<br>width: 100px;<br>height: 100px;It seems like you&#39;ve only provided a closing brace `&#125;` without any Markdown content to translate. If you have a specific Markdown text that needs translation, please provide it, and I&#39;ll be happy to help!</code></pre></div>
            </section>
      <p>In this example, the width and height will not be applied, and the element will behave as if it were text.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Additionally, when the element is <code>inline</code>, if multiple elements are placed together in the HTML, these elements will be displayed together. For example, if we have several <code>span</code> elements with text, and we place them together in the HTML, these elements will be displayed together.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-html">&lt;span&gt;Text&lt;/span&gt;<br>&lt;span&gt;Text&lt;/span&gt;<br>&lt;span&gt;Text&lt;/span&gt;</code></pre></div>
            </section>
      <p>In this example, the elements will be displayed together ==> TextTextText.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>But if we want the elements to be displayed on different lines, we can use <code>display: block;</code>. For example, if we have several <code>span</code> elements with text, and we set <code>display: block;</code> for them, these elements will be displayed on different lines.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-html">&lt;span&gt;Text&lt;/span&gt;<br>&lt;span&gt;Text&lt;/span&gt;<br>&lt;span&gt;Text&lt;/span&gt;</code></pre></div>
            </section>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">span &#123;<br>display: block;<br>It seems like you might have intended to provide a Markdown text for translation but didn&#39;t include it. Please provide the Markdown text you want translated to English.</code></pre></div>
            </section>
      <p>In this example, the elements will be displayed on different lines</p>
      <p>⬇</p>
      <p>Text</p>
      <p>Text</p>
      <p>Text</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="Boxes block">Boxes <code>block</code><a class="anchor-link" href="#Boxes block"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 113" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>When the element is <code>block</code>, the width and height can be configured, and the element behaves as if it were a block. For example, if we have a <code>div</code> with some text, and we set a width and height, the width and height will be applied, and the element will behave as if it were a block.</p>
      <div class='highlight'><pre><code class="language-html">&lt;div&gt;Text&lt;/div&gt;</code></pre></div>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">div &#123;<br>width: 100px;<br>height: 100px;&#125;</code></pre></div>
            </section>
      <p>In this example, the width and height will be applied, and the element will behave as if it were a block.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Additionally, when the element is <code>block</code>, if multiple elements are placed together in the HTML, these elements will be displayed one below the other. For example, if we have several <code>div</code> with text, and we place them together in the HTML, these elements will be displayed one below the other.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-html">&lt;div&gt;Text&lt;/div&gt;<br>&lt;div&gt;Text&lt;/div&gt;<br>&lt;div&gt;Text&lt;/div&gt;</code></pre></div>
            </section>
      <p>In this example, the elements will be displayed one below the other</p>
      <p>⬇</p>
      <p>Text</p>
      <p>Text</p>
      <p>Text</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>But if we want the elements to be displayed on the same line, we can use <code>display: inline;</code>. For example, if we have several <code>div</code> with text, and we set <code>display: inline;</code>, these elements will be displayed on the same line.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-html">&lt;div&gt;Text&lt;/div&gt;<br>&lt;div&gt;Text&lt;/div&gt;<br>&lt;div&gt;Text&lt;/div&gt;</code></pre></div>
            </section>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">div &#123;<br>display: inline;<br>&#125;</code></pre></div>
            </section>
      <p>In this example, the elements will be displayed on the same line ==> TextTextText.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="Margin, Border, Padding and Content">Margin, Border, Padding and Content<a class="anchor-link" href="#Margin, Border, Padding and Content"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 114" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Now that we know that in HTML everything is boxes, we can see that each box has 4 parts:</p>
      <ul>
        <li><strong>Margin</strong>: It is the space between the box and other boxes.</li>
        <li><strong>Border</strong>: It is the border of the box.</li>
        <li><strong>Padding</strong>: It is the space between the border and the content.- <strong>Content</strong>: It is the content of the box.</li>
      </ul>
      <img decoding="async" onerror="this.parentNode.removeChild(this)" src="https://web.dev/static/learn/css/box-model/image/un-diagrama-que-muestra-l-a71d29fe924e.svg?hl=en" alt="Margin, Border, Padding and Content">
      </section>
      
      <section class="section-block-markdown-cell">
      <p>All these properties can be configured. For example, if we have a <code>div</code> with some text, and we set a width and a height, the width and height will be applied, and the element will behave as if it were a block.</p>
      <div class='highlight'><pre><code class="language-html">&lt;div&gt;Text&lt;/div&gt;</code></pre></div>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">div &#123;<br>width: 100px;<br>height: 100px;<br>margin: 10px;<br>border: 10px solid red;<br>padding: 10px;<br>&#125;</code></pre></div>
            </section>
      <p>As they are size properties, length units can be used. For example:</p>
      <ul>
        <li>If we want the margin to be 10 pixels, we put <code>margin: 10px;</code>.</li>
        <li>If we want only the left margin, we put <code>margin-left: 10px;</code>.</li>
        <li>If we want only the right margin, we put <code>margin-right: 10px;</code>.</li>
        <li>If we want only the top margin, we put <code>margin-top: 10px;</code>.</li>
        <li>If we want it to be only the bottom margin, we put <code>margin-bottom: 10px;</code>.</li>
        <li>If we want each margin to be a different size, we put <code>margin: 10px 20px 30px 40px;</code>. The order is top, right, bottom, left, as if they were the hands of a clock.</li>
        <li>If we want to change the margins on the horizontal and vertical axes, we put <code>margin: 10px 20px;</code>. The order is top and bottom (10px), left and right (20px).</li>
      </ul>
      </section>
      
      <section class="section-block-markdown-cell">
      <h4 id="Box Size When Changing Padding">Box Size When Changing Padding<a class="anchor-link" href="#Box Size When Changing Padding"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 115" src={svg_paths.link_svg_path}/></a></h4>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>If we have a <code>div</code> with some text, and we set its width and height, the width and height will be applied, and the element will behave as if it were a block.</p>
      <div class='highlight'><pre><code class="language-html">&lt;div&gt;Text&lt;/div&gt;</code></pre></div>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">div &#123;<br>width: 100px;<br>height: 100px;<br>&#125;</code></pre></div>
            </section>
      <p>This way the <code>div</code> will have a width and height of 100px.</p>
      <p>But if we now apply a padding of 10px, the width and height will remain the same, but the box size will be 120px, because the padding is added to the width and height.</p>
      <div class='highlight'><pre><code class="language-html">&lt;div&gt;Text&lt;/div&gt;</code></pre></div>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">div &#123;<br>width: 100px;<br>height: 100px;<br>padding: 10px;<br>&#125;</code></pre></div>
            </section>
      <p>This way the <code>div</code> will have a width and height of 100px, but the box size will be 120px.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h4 id="Box Size When Changing the Border">Box Size When Changing the Border<a class="anchor-link" href="#Box Size When Changing the Border"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 116" src={svg_paths.link_svg_path}/></a></h4>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>If we have a <code>div</code> with some text, and we set its width and height, the width and height will be applied, and the element will behave as if it were a block.</p>
      <div class='highlight'><pre><code class="language-html">&lt;div&gt;Text&lt;/div&gt;</code></pre></div>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">div &#123;<br>width: 100px;<br>height: 100px;<br>It seems like you&#39;ve provided an incomplete or incorrect Markdown structure. Could you please provide the full Markdown text for translation?</code></pre></div>
            </section>
      <p>This way the <code>div</code> will have a width and height of 100px.</p>
      <p>But if we now apply a border of 10px, the width and height will remain the same, but the box size will be 120px, because the border is added to the width and height.</p>
      <div class='highlight'><pre><code class="language-html">&lt;div&gt;Text&lt;/div&gt;</code></pre></div>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">div &#123;<br>width: 100px;<br>height: 100px;<br>border: 10px solid red;<br>&#125;</code></pre></div>
            </section>
      <p>In this way, the <code>div</code> will have a width and height of 100px, but the box size will be 120px.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h4 id="Box Size When Changing the Margin">Box Size When Changing the Margin<a class="anchor-link" href="#Box Size When Changing the Margin"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 117" src={svg_paths.link_svg_path}/></a></h4>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>In the case of margins, the size of the box does not change, but the space between the boxes does. For example, if we have two <code>div</code> with text, and we set a width and a height, the width and height will be applied, and the element will behave as if it were a block.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-html">&lt;div&gt;Text&lt;/div&gt;<br>&lt;div&gt;Text&lt;/div&gt;</code></pre></div>
            </section>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">div &#123;<br>width: 100px;<br>height: 100px;<br>&#125;</code></pre></div>
            </section>
      <p>This way the <code>div</code> will have a width and height of 100px.</p>
      <p>But if we now apply a margin of 10px, the width and height will remain, but the space between the <code>div</code> elements will be 20px, because the margin is added to the space between the <code>div</code>.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-html">&lt;div&gt;Text&lt;/div&gt;<br>&lt;div&gt;Text&lt;/div&gt;</code></pre></div>
            </section>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">div &#123;<br>width: 100px;<br>height: 100px;<br>margin: 10px;<br>&#125;</code></pre></div>
            </section>
      <p>This way the <code>div</code> will have a width and height of 100px, but the space between the <code>div</code> will be 20px.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h4 id="Box Size">Box Size<a class="anchor-link" href="#Box Size"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 118" src={svg_paths.link_svg_path}/></a></h4>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Therefore, what occupies the box is:</p>
      <ul>
        <li>Width: <code>width + padding + border</code>.</li>
        <li>Height: <code>height + padding + border</code>.</li>
      </ul>
      <p>The margin does not count, because the margin is the space between the boxes.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="Box-sizing">Box-sizing<a class="anchor-link" href="#Box-sizing"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 119" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>By default, the <code>box-sizing</code> property is set to <code>content-box</code>. This means that the width and height do not include the padding or the border. For example, if we have a <code>div</code> with some text, and we set a width and a height, the width and height will be applied, and the element will behave as if it were a block.</p>
      <div class='highlight'><pre><code class="language-html">&lt;div&gt;Text&lt;/div&gt;</code></pre></div>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">div &#123;<br>width: 100px;<br>height: 100px;<br>&#125;</code></pre></div>
            </section>
      <p>This way the <code>div</code> will have a width and height of 100px.</p>
      <p>But if we now apply a padding of 10px, the width and height will remain the same, but the box size will be 120px, because the padding is added to the width and height.</p>
      <div class='highlight'><pre><code class="language-html">&lt;div&gt;Text&lt;/div&gt;</code></pre></div>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">div &#123;<br>width: 100px;<br>height: 100px;<br>padding: 10px;<br>It seems like you&#39;ve provided an incomplete or incorrect Markdown structure. Could you please provide the full Markdown text for translation?</code></pre></div>
            </section>
      <p>In this way, the <code>div</code> will have a width and height of 100px, but the box size will be 120px.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>If we changed the <code>box-sizing</code> property to <code>border-box</code>, the width and height would include the padding and border. For example, if we have a <code>div</code> with some text, and we set a width and height, the width and height will be applied, and the element will behave as if it were a block.</p>
      <div class='highlight'><pre><code class="language-html">&lt;div&gt;Text&lt;/div&gt;</code></pre></div>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">div &#123;<br>width: 100px;<br>height: 100px;<br>box-sizing: border-box;<br>&#125;</code></pre></div>
            </section>
      <p>This way the <code>div</code> will have a width and height of 100px.</p>
      <p>But if we now apply a padding of 10px, the width and height will remain, and the box size will also be 100px, because the padding is not added to the width and height.</p>
      <div class='highlight'><pre><code class="language-html">&lt;div&gt;Text&lt;/div&gt;</code></pre></div>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">div &#123;<br>width: 100px;<br>height: 100px;<br>box-sizing: border-box;<br>padding: 10px;<br>It seems like you didn&#39;t provide any Markdown text to translate. Please provide the Markdown text you want translated to English.</code></pre></div>
            </section>
      <p>This way the <code>div</code> will have a width and height of 100px, and the box size will also be 100px.</p>
      <p>It's important to note that when the <code>box-sizing</code> property is changed to <code>border-box</code>, the width and height include the padding and border, so we cannot set a width and height smaller than the padding and border. For example, if we have a <code>div</code> with some text, and we set a width and height, the width and height will be applied, and the element will behave as if it were a block.</p>
      <div class='highlight'><pre><code class="language-html">&lt;div&gt;Text&lt;/div&gt;</code></pre></div>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">div &#123;<br>width: 100px;<br>height: 100px;<br>box-sizing: border-box;<br>&#125;</code></pre></div>
            </section>
      <p>This way the <code>div</code> will have a width and height of 100px.</p>
      <p>But if we now apply a padding of 110px, the width and height will remain the same, but the box size will be 220px, because the padding is added to the width and height.</p>
      <div class='highlight'><pre><code class="language-html">&lt;div&gt;Text&lt;/div&gt;</code></pre></div>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">div &#123;<br>width: 100px;<br>height: 100px;<br>box-sizing: border-box;<br>padding: 110px;<br>&#125;</code></pre></div>
            </section>
      <p>In this way, the <code>div</code> will have a width and height of 100px, but the box size will be 220px.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="Overflow">Overflow<a class="anchor-link" href="#Overflow"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 120" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>One of the most famous CSS memes is the following</p>
      <img decoding="async" onerror="this.parentNode.removeChild(this)" src="https://css-tricks.com/wp-content/uploads/2021/04/css-is-awesome.jpg" alt="CSS is awesome">
      <p>And this happens when the content size is larger than the box size. For example, if we have a <code>div</code> with some text, and we set a width and height, the width and height will be applied, and the element will behave as if it were a block.</p>
      <div class='highlight'><pre><code class="language-html">&lt;div&gt;Text&lt;/div&gt;</code></pre></div>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">div &#123;<br>width: 100px;<br>height: 100px;<br>&#125;</code></pre></div>
            </section>
      <p>This way the <code>div</code> will have a width and height of 100px.</p>
      <p>But if we now apply a very long text, the text will overflow the box because the content size is larger than the box size.</p>
      <div class='highlight'><pre><code class="language-html">&lt;div&gt;Very long text&lt;/div&gt;</code></pre></div>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">div &#123;<br>width: 100px;<br>height: 100px;<br>It seems like you&#39;ve provided an incomplete or incorrect Markdown text to translate. Could you please provide the full text you want translated?</code></pre></div>
            </section>
      <p>This way the <code>div</code> will have a width and height of 100px, but the text will overflow the box.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>This happened because in CSS the <code>overflow</code> property is set to <code>visible</code>. This means that the content can extend beyond the box. But we have other options:</p>
      <ul>
        <li><code>hidden</code>: The content cannot overflow the box and is clipped.</li>
        <li><code>scroll</code>: The content cannot overflow the box, and a scrollbar is added.</li>
        <li><code>auto</code>: The content cannot overflow the box, and a scrollbar is added if necessary. In this case, it depends on the device, because if the device has a scrollbar, a scrollbar will be added, and if the device does not have a scrollbar, no scrollbar will be added.</li>
      </ul>
      <p>Between <code>scroll</code> and <code>auto</code>, the recommended option is <code>auto</code>, because if the device has a scrollbar, it will add a scrollbar, and if the device does not have a scrollbar, it will not add a scrollbar.</p>
      <img decoding="async" onerror="this.parentNode.removeChild(this)" src="https://lh3.googleusercontent.com/-tVNmvecB8A4/Ukqdi769oPI/AAAAAAAAAd0/kgisEf3RGRk/s538/CU01038D_1.png" alt="aoverflow">
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="Overflow hidden">Overflow hidden<a class="anchor-link" href="#Overflow hidden"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 121" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>In the case of choosing <code>hidden</code>, the content cannot overflow the box, and it gets clipped. In this case, we have the property <code>text-overflow</code>, which allows us to configure what happens with the text that overflows the box. The options are:</p>
      <ul>
        <li><code>clip</code>: The text is clipped.</li>
        <li><code>ellipsis</code>: The text is truncated, and <code>...</code> is added to the end of the text.</li>
      </ul>
      <p>In the future, a custom symbol will be able to be set, but for now it cannot.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h4 id="Styling the Bar">Styling the Bar<a class="anchor-link" href="#Styling the Bar"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 122" src={svg_paths.link_svg_path}/></a></h4>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>In case of overflow, the scrollbar can be styled, but it is recommended not to style the page's scrollbar and only do so for scrollbars of internal boxes. For example, if there is a sidebar index on the page, and we want to change the size and color of the scrollbar to make it look better, we can do that.</p>
      <p>At <a href="https://scrollbar.app/" target="_blank" rel="nofollow noreferrer">scrollbar.app</a> we have an editor to style the scrollbar and get the necessary code</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="Position">Position<a class="anchor-link" href="#Position"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 123" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>In html elements are stacked, by default they are positioned statically, this is because by default in CSS they have the attribute <code>position</code> with the value <code>static</code>. This means that the element is positioned statically, and cannot be moved. The possible values are</p>
      <ul>
        <li><code>static</code>: The element is positioned statically and cannot be moved.</li>
        <li><code>relative</code>: The element is positioned relative to its normal position, and can be moved.</li>
        <li><code>absolute</code>: The element is positioned absolutely, and can be moved.</li>
        <li><code>fixed</code>: The element is positioned fixed and can be moved.</li>
        <li><code>sticky</code>: The element is positioned in a sticky manner and can move.</li>
      </ul>
      <img decoding="async" onerror="this.parentNode.removeChild(this)" src="https://miro.medium.com/v2/resize:fit:600/1*WU2bIP1OCaS71r82S5zFeA.jpeg" alt="Position">
      </section>
      
      <section class="section-block-markdown-cell">
      <h4 id="Position relative">Position relative<a class="anchor-link" href="#Position relative"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 124" src={svg_paths.link_svg_path}/></a></h4>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>When we want an element's position to be relative to another, we use <code>position: relative;</code>. But we need to put <code>position: relative;</code> on the parent, and <code>position: absolute;</code> on the child. For example, if we have a <code>div</code> with some text, and we want the text to be in the top right corner of the <code>div</code>, we can do that.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-html">&lt;div&gt;<br>&lt;p&gt;Text&lt;/p&gt;<br>&lt;/div&gt;</code></pre></div>
            </section>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">div &#123;<br>position: relative;<br>&#125;<br><br>p &#123;position: absolute;<br>top: 0;<br>right: 50px;<br>&#125;</code></pre></div>
            </section>
      <p>This way the text will be in the top right corner of the <code>div</code>.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h4 id="Position absolute">Position absolute<a class="anchor-link" href="#Position absolute"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 125" src={svg_paths.link_svg_path}/></a></h4>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>When the element is <code>absolute</code>, the element is positioned absolutely to the first parent element that is not <code>static</code>. In the previous example, we saw that if we have a <code>div</code> with some text, and we want the text to be in the top right corner of the <code>div</code>, we can do it.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-html">&lt;div&gt;<br>&lt;p&gt;Text&lt;/p&gt;<br>&lt;/div&gt;</code></pre></div>
            </section>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">div &#123;<br>position: relative;<br>It seems like there might be some missing content in your request. Could you please provide the Markdown text that needs to be translated?<br><br>p &#123;position: absolute;<br>top: 0;<br>right: 50px;<br>It seems like you have provided an incomplete or incorrect Markdown text to translate. Could you please provide the full text you want translated?</code></pre></div>
            </section>
      <p>In this example, the <code>div</code> has <code>position: relative;</code>, so the <code>p</code> is positioned absolutely to the <code>div</code>, in the top right corner.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>If there is no parent element that is not <code>static</code>, the element will be positioned absolutely to the <code>body</code>, that is, to the page.</p>
      <div class='highlight'><pre><code class="language-html">&lt;p&gt;Text&lt;/p&gt;</code></pre></div>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">p &#123;<br>position: absolute;<br>top: 0;<br>right: 50px;<br>&#125;</code></pre></div>
            </section>
      <p>In this example, the <code>p</code> has no parent element that is not <code>static</code>, so the <code>p</code> is positioned absolutely with respect to the <code>body</code>. That is, at the top right of the page.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Thanks to the <code>relative</code> and <code>absolute</code> properties, we can center a <code>div</code> both horizontally and vertically. For example, if we have a <code>div</code> with some text, and we want the text to be centered both horizontally and vertically, we can do that.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-html">&lt;div&gt;<br>&lt;p&gt;Text&lt;/p&gt;<br>&lt;/div&gt;</code></pre></div>
            </section>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">div &#123;<br>position: relative;<br>&#125;<br><br>p &#123;<br>position: absolute;<br>top: 0;<br>right: 0;<br>bottom: 0;<br>left: 0;<br>margin: auto;<br>It seems like you didn&#39;t provide any Markdown text to translate. Please provide the Markdown text you want to be translated into English.</code></pre></div>
            </section>
      <p>In this example, the <code>div</code> has <code>position: relative;</code>, so the <code>p</code> is positioned absolutely to the <code>div</code>, in the top right corner. Additionally, the <code>p</code> has <code>top: 0;</code>, <code>right: 0;</code>, <code>bottom: 0;</code>, and <code>left: 0;</code>, so the <code>p</code> occupies the entire <code>div</code>. Finally, the <code>p</code> has <code>margin: auto;</code>, so the <code>p</code> is centered both horizontally and vertically.</p>
      <p>This is not the best way to center content in a <code>div</code>, but it can be very useful in some cases, such as in a modal.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h4 id="Position fixed">Position fixed<a class="anchor-link" href="#Position fixed"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 126" src={svg_paths.link_svg_path}/></a></h4>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>When the element is <code>fixed</code>, the element is positioned fixed to the window. It's similar to <code>absolute</code>, but instead of positioning itself relative to the first non-<code>static</code> parent element, it positions itself relative to the window. Additionally, if the window moves, the element moves with it, meaning that if you scroll, the element will always remain in the same position.</p>
      <p>For example, if we have a <code>div</code> with some text, and we want the text to be in the top right corner of the window, we can do it.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-html">&lt;div&gt;<br>&lt;p&gt;Text&lt;/p&gt;<br>&lt;/div&gt;</code></pre></div>
            </section>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">p &#123;<br>position: fixed;top: 0;<br>right: 50px;<br>&#125;</code></pre></div>
            </section>
      <p>In this example, the <code>p</code> is fixed to the window, in the upper right corner, and when scrolling, the <code>p</code> will always remain in the same position.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h4 id="Position sticky">Position sticky<a class="anchor-link" href="#Position sticky"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 127" src={svg_paths.link_svg_path}/></a></h4>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>When the element is <code>sticky</code>, the element is positioned in a sticky manner relative to the first parent element that is not <code>static</code>.</p>
      <p>It is similar to <code>relative</code>, but when the element reaches the top of the window, the element is positioned fixed to the window. Additionally, if the window moves, the element moves with it, meaning that if we scroll, the element will always remain in the same position.</p>
      <p>For example, if we have a <code>div</code> with some text, and we want the text to be in the top right corner of the <code>div</code>, we can do that.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-html">&lt;div&gt;<br>&lt;p&gt;Text&lt;/p&gt;<br>&lt;/div&gt;</code></pre></div>
            </section>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">div &#123;<br>position: relative;<br>&#125;<br><br>p &#123;position: sticky;<br>top: 0;<br>right: 50px;<br>&#125;</code></pre></div>
            </section>
      <p>In this example, the <code>div</code> has <code>position: relative;</code>, so the <code>p</code> is positioned relatively to the <code>div</code>, in the top right corner. Additionally, the <code>p</code> has <code>top: 0;</code>, which means the <code>p</code> sticks to the <code>div</code>. That is, when the <code>p</code> reaches the top of the viewport, the <code>p</code> becomes fixed to the window.</p>
      <img decoding="async" onerror="this.parentNode.removeChild(this)" src="https://miro.medium.com/v2/resize:fit:720/format:webp/1*kyrVMytQd1Dt19D0If5q3Q.gif" alt="sticky">
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="Z-index">Z-index<a class="anchor-link" href="#Z-index"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 128" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>As we have seen, when changing the <code>position</code> of an element, the element is positioned on top of other elements. Therefore, we need to have control over which element is or will be visible above the others. For this, we have the <code>z-index</code> property. By default, all elements have <code>z-index: auto;</code>, but we can change it. For example, if we have a <code>div</code> with some text, and we want the text to be on top of the <code>div</code>, we can do that.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-html">&lt;div&gt;<br>&lt;p&gt;Text&lt;/p&gt;<br>&lt;/div&gt;</code></pre></div>
            </section>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">div &#123;<br>position: relative;<br>z-index: 0;<br>It seems like you have not provided any Markdown text to translate. Could you please provide the text you want translated into English?<br><br>p &#123;position: absolute;<br>top: 0;<br>right: 50px;<br>z-index: 1;<br>&#125;</code></pre></div>
            </section>
      <p>In this example, the <code>div</code> has <code>position: relative;</code> and <code>z-index: 0;</code>, so the <code>div</code> is positioned relatively to the <code>div</code>, and the <code>div</code> has a <code>z-index</code> of 0. Additionally, the <code>p</code> has <code>position: absolute;</code>, <code>top: 0;</code>, <code>right: 50px;</code> and <code>z-index: 1;</code>, so the <code>p</code> is positioned absolutely to the <code>div</code>, in the top right corner, and the <code>p</code> has a <code>z-index</code> of 1. Therefore, the <code>p</code> will be on top of the <code>div</code>.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>If the <code>z-index</code> is not specified, children have a higher <code>z-index</code> than their parents. However, for example, in the case of <code>position: sticky;</code>, the <code>z-index</code> of the child element is greater than that of its parent, but when scrolling, if at any point the child overlaps with another parent, the other parent will be on top.</p>
      <p>If we want that child to appear above the other parents, we can control it with the <code>z-index</code>.</p>
      <p>In the <a href="https://web.dev/learn/css/z-index?hl=es-419" target="_blank" rel="nofollow noreferrer">CSS course by Google</a> you can see very well how the <code>z-index</code> works.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h2 id="Flexbox and Grid">Flexbox and Grid<a class="anchor-link" href="#Flexbox and Grid"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 129" src={svg_paths.link_svg_path}/></a></h2>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>There are two ways to create layouts in CSS, with <code>flexbox</code> and with <code>grid</code>. <code>Flexbox</code> is older, and <code>grid</code> is newer. <code>Flexbox</code> is one-dimensional, and <code>grid</code> is two-dimensional. <code>Flexbox</code> is for simple layouts, and <code>grid</code> is for complex layouts.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h2 id="Flexbox">Flexbox<a class="anchor-link" href="#Flexbox"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 130" src={svg_paths.link_svg_path}/></a></h2>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>As we have seen, we have containers that have <code>display: block;</code>, and containers that have <code>display: inline;</code>. The former are displayed on different lines, and the latter are displayed on the same line. Therefore, if we have several <code>div</code>s they will be displayed one below the other, and if we have several <code>span</code>s they will be displayed on the same line.</p>
      <p>But if we want the <code>div</code>s to appear on the same line and also in a flexible manner, we can create a parent container that contains them and make the parent container have <code>display: flex;</code>.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-html">&lt;section&gt;<br>&lt;div&gt;Text&lt;/div&gt;<br>&lt;div&gt;Text&lt;/div&gt;<br>&lt;div&gt;Text&lt;/div&gt;<br>&lt;/div&gt;</code></pre></div>
            </section>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">section &#123;<br>display: flex;<br>It seems like there was an issue with your request. Could you please provide the Markdown text you would like to be translated?</code></pre></div>
            </section>
      <p>This way the <code>div</code>s will be displayed on the same line and also flexibly, meaning if they don't fit on the same line, they will move to the next line.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="Flex-direction">Flex-direction<a class="anchor-link" href="#Flex-direction"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 131" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p><code>Flexbox</code> is one-dimensional, meaning that only one direction can be set. By default, the <code>flex-direction</code> property is set to <code>row</code>. This means that items are displayed on the same line. However, we can change it to <code>column</code>, so that items are displayed on different lines.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-html">&lt;section&gt;<br>&lt;div&gt;Text&lt;/div&gt;<br>&lt;div&gt;Text&lt;/div&gt;<br>&lt;div&gt;Text&lt;/div&gt;<br>&lt;/section&gt;</code></pre></div>
            </section>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">section &#123;<br>display: flex;flex-direction: column;<br>It seems like you&#39;ve provided an incomplete or incorrect Markdown text to translate. Could you please provide the full Markdown content so I can assist you with the translation?</code></pre></div>
            </section>
      <p>This way the <code>div</code>s will be displayed on different lines.</p>
      <p>This is very useful for creating responsive layouts, because we can change the direction of the elements depending on the screen size.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>We can also specify the direction sense with <code>flex-direction: row-reverse;</code> or <code>flex-direction: column-reverse;</code>. For example, if we have several <code>div</code>s and want them to be displayed in the same line but in reverse order, we can do so.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-html">&lt;section&gt;<br>&lt;div&gt;Text&lt;/div&gt;<br>&lt;div&gt;Text&lt;/div&gt;<br>&lt;div&gt;Text&lt;/div&gt;<br>&lt;/section&gt;</code></pre></div>
            </section>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">section &#123;<br>display: flex;flex-direction: row-reverse;<br>&#125;</code></pre></div>
            </section>
      <p>This way the <code>div</code>s will be displayed on the same line, but in reverse order.</p>
      <p>This is very useful when we want to reverse the order of elements, for example, if we have a <code>ul</code> with a list and we want the list to be displayed in reverse order. This way, there's no need to program anything and it can be done with CSS.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <img decoding="async" onerror="this.parentNode.removeChild(this)" src="https://pub-fb664c455eca46a2ba762a065ac900f7.r2.dev/flex-direction.webp" alt="flex-direction">
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="Direction">Direction<a class="anchor-link" href="#Direction"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 132" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Another way to indicate the direction sense is with the <code>direction</code> property. By default, the <code>direction</code> property is set to <code>ltr</code>. This means that the direction sense is from left to right. But we can change it to <code>rtl</code>, so that the direction sense is from right to left.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-html">&lt;section&gt;<br>&lt;div&gt;Text&lt;/div&gt;<br>&lt;div&gt;Text&lt;/div&gt;<br>&lt;div&gt;Text&lt;/div&gt;<br>&lt;/section&gt;</code></pre></div>
            </section>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">section &#123;display: flex;<br>direction: ltr;<br>&#125;</code></pre></div>
            </section>
      <img decoding="async" onerror="this.parentNode.removeChild(this)" src="https://rtlstaging.com/img/flexbox-axis.jpg" alt="direction">
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="Flex-wrap">Flex-wrap<a class="anchor-link" href="#Flex-wrap"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 133" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>When the elements don't fit on the same line, they are placed on the next line. But we can change this behavior with the <code>flex-wrap</code> property. By default, the <code>flex-wrap</code> property is set to <code>nowrap</code>. This means that the elements cannot be placed on the next line. However, we can change it to <code>wrap</code>, so that the elements can be placed on the next line.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-html">&lt;section&gt;<br>&lt;div&gt;Text&lt;/div&gt;<br>&lt;div&gt;Text&lt;/div&gt;<br>&lt;div&gt;Text&lt;/div&gt;<br>&lt;/section&gt;</code></pre></div>
            </section>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">section &#123;<br>display: flex;flex-wrap: wrap;<br>&#125;</code></pre></div>
            </section>
      <p>This way the <code>div</code>s can be placed on the next line.</p>
      <img decoding="async" onerror="this.parentNode.removeChild(this)" src="https://pub-fb664c455eca46a2ba762a065ac900f7.r2.dev/flex-wrap.webp" alt="flex-wrap">
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="Flex-flow">Flex-flow<a class="anchor-link" href="#Flex-flow"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 134" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>One way to set the direction and wrapping of elements is with the <code>flex-flow</code> property. By default, the <code>flex-flow</code> property is set to <code>row nowrap</code>. This means that the items are displayed on the same line, and cannot be placed on the next line. However, we can change it to <code>row wrap</code>, so that the items are displayed on the same line, and can be placed on the next line.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-html">&lt;section&gt;<br>&lt;div&gt;Text&lt;/div&gt;<br>&lt;div&gt;Text&lt;/div&gt;<br>&lt;div&gt;Text&lt;/div&gt;<br>&lt;/section&gt;</code></pre></div>
            </section>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">section &#123;<br>display: flex;flex-flow: row wrap;<br>&#125;</code></pre></div>
            </section>
      <p>This way the <code>div</code>s will be displayed on the same line, and can be placed on the next line.</p>
      <img decoding="async" onerror="this.parentNode.removeChild(this)" src="https://i.stack.imgur.com/6vtqd.png" alt="flex-flow">
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="Flex-grow, Flex-shrink and Flex-basis">Flex-grow, Flex-shrink and Flex-basis<a class="anchor-link" href="#Flex-grow, Flex-shrink and Flex-basis"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 135" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>We can set the size of the items with the properties <code>flex-grow</code>, <code>flex-shrink</code>, and <code>flex-basis</code>.</p>
      <ul>
        <li><code>flex-grow</code>: Indicates whether the element can grow or not. By default, the <code>flex-grow</code> property is set to <code>0</code>, which means that the element cannot grow. However, we can change it to <code>1</code>, so that the element can grow.</li>
        <li><code>flex-shrink</code>: Indicates whether the element can shrink or not. By default, the <code>flex-shrink</code> property is set to <code>1</code>, which means the element can shrink. But we can change it to <code>0</code>, so that the element cannot shrink.</li>
        <li><code>flex-basis</code>: Indicates the size of the element. By default, the <code>flex-basis</code> property is set to <code>auto</code>, which means the element has an automatic size. But we can change it to <code>100px</code>, so that the element has a size of 100px.</li>
      </ul>
      <p>For example, if we have several <code>div</code>s, and we want the first <code>div</code> to have a size of 100px, and the others to share the remaining space, we can do that.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-html">&lt;section&gt;<br>&lt;div&gt;Text&lt;/div&gt;<br>&lt;div&gt;Text&lt;/div&gt;<br>&lt;div&gt;Text&lt;/div&gt;<br>&lt;/section&gt;</code></pre></div>
            </section>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">section &#123;<br>display: flex;<br>&#125;<br><br>section div:first-child &#123;flex-grow: 0;   /* Since it&#39;s 0 by default, there&#39;s no need to set it */<br>flex-shrink: 0; /* As it defaults to 1, there&#39;s no need to set it */<br>flex-basis: 100px;<br>It seems like there was an issue with your request. Please provide the Markdown text you would like to be translated into English.<br><br>section div &#123;<br>flex-grow: 1;<br>flex-shrink: 1;     /* As it defaults to 1, there&#39;s no need to specify it */<br>flex-basis: auto;   /* Since it defaults to auto, there&#39;s no need to specify it */<br>It seems like you have not provided any Markdown text to translate yet. Please provide the Markdown text you want translated into English.</code></pre></div>
            </section>
      <p>This way, the first <code>div</code> will have a size of 100px, and the others will share the remaining space.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>The three values can be modified at once with the <code>flex</code> property. For example, if we have several <code>div</code>s, and we want the first <code>div</code> to have a size of 100px, and the others to share the remaining space, we can do this.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-html">&lt;section&gt;<br>&lt;div&gt;Text&lt;/div&gt;<br>&lt;div&gt;Text&lt;/div&gt;<br>&lt;div&gt;Text&lt;/div&gt;<br>&lt;/section&gt;</code></pre></div>
            </section>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">section &#123;<br>display: flex;<br>It seems like you have not provided any Markdown text to translate yet. Please provide the Markdown text you want translated into English.<br><br>section div:first-child &#123;flex: 0 0 100px;<br>It seems like you might have accidentally sent an incomplete or incorrect markdown text. Could you please provide the actual markdown content to be translated?<br><br>section div &#123;<br>flex: 1 1 auto;<br>It seems like you didn&#39;t provide any Markdown text to translate. Please provide the Markdown text you want translated to English.</code></pre></div>
            </section>
      <p>This way, the first <code>div</code> will have a size of 100px, and the others will share the remaining space.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Or it can also be modified at once with <code>flex: initial;</code>, which is the same as <code>flex: 0 1 auto;</code>. Or with <code>flex: auto;</code>, which is the same as <code>flex: 1 1 auto;</code>. Or with <code>flex: none;</code>, which is the same as <code>flex: 0 0 auto;</code>. Or with <code>flex: 1;</code>, which is the same as <code>flex: 1 1 0%;</code>.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Another way to modify <code>flex</code> is by using numbers, which will indicate the relative space of the container. For example, if we have several <code>div</code>s and we want the first one to have twice the space of the second, and the second to have twice the space of the third, we can do that.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-html">&lt;section&gt;<br>&lt;div&gt;Text&lt;/div&gt;<br>&lt;div&gt;Text&lt;/div&gt;<br>&lt;div&gt;Text&lt;/div&gt;<br>&lt;/section&gt;</code></pre></div>
            </section>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">section &#123;<br>display: flex;<br>&#125;<br><br>section div:first-child &#123;<br>flex: 4;<br>&#125;<br>section div:nth-child(2) &#123;<br>flex: 4;<br>&#125;<br><br>section div:nth-child(3) &#123;<br>flex: 1;<br>&#125;</code></pre></div>
            </section>
      <p>This way, the first <code>div</code> will have twice the space of the second, and the second will have twice the space of the third.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="Order">Order<a class="anchor-link" href="#Order"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 136" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>We can order the elements inside a container with the <code>order</code> property. By default, the <code>order</code> property is set to <code>0</code>. But we can change it to <code>1</code>, so that the element appears after the elements that have <code>order: 0;</code>. Or we can change it to <code>-1</code>, so that the element appears before the elements that have <code>order: 0;</code>.</p>
      <p>It's like <code>z-index</code>, but for the order of elements. The higher the <code>order</code>, the later the element will be placed. For example, if we have several <code>div</code>s and want the first <code>div</code> to come after the second, we can do that.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-html">&lt;section&gt;<br>&lt;div&gt;Text 1&lt;/div&gt;<br>&lt;div&gt;Text 2&lt;/div&gt;<br>&lt;div&gt;Text 3&lt;/div&gt;<br>&lt;/section&gt;</code></pre></div>
            </section>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">section &#123;<br>display: flex;<br>&#125;<br><br>section div:first-child &#123;<br>order: 1;<br>&#125;<br><br>section div &#123;order: 0;<br>It seems like you&#39;ve provided an incomplete or incorrect Markdown text to translate. Please provide the full Markdown text you want translated into English.</code></pre></div>
            </section>
      <p>The result will be</p>
      <p>Text 2</p>
      <p>Text 3</p>
      <p>Text 1</p>
      <img decoding="async" onerror="this.parentNode.removeChild(this)" src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8a7d45de6a88466ca3f98f4f0505f4d7~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp" alt="order">
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="Justify-content">Justify-content<a class="anchor-link" href="#Justify-content"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 137" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>As <code>Flexbox</code> is one-dimensional, we can configure the justification of the container's elements along the <code>Flexbox</code> axis of the container. That is, if the <code>Flexbox</code> axis of the container is horizontal, we can configure the justification of the container's elements on the horizontal axis. And if the <code>Flexbox</code> axis of the container is vertical, we can configure the justification of the container's elements on the vertical axis.</p>
      <p>The possible values are:</p>
      <ul>
        <li><code>flex-start</code>: The items are justified to the beginning of the <code>Flexbox</code> container's axis.</li>
        <li><code>flex-end</code>: The items are justified to the end of the <code>Flexbox</code> container's main axis.</li>
        <li><code>center</code>: The items are justified to the center of the <code>Flexbox</code> container's axis.</li>
        <li><code>space-between</code>: The elements are justified with the same space between them. No space is left on the sides of the first and last element.</li>
        <li><code>space-around</code>: The elements are justified with the same space around them.</li>
        <li><code>space-evenly</code>: The elements are justified with the same space between them and around them. That is, it is similar to <code>space-between</code>, but space is left on the sides of the first and last element. The space on the sides is the same as the space between the elements.</li>
      </ul>
      <img decoding="async" onerror="this.parentNode.removeChild(this)" src="https://css-tricks.com/wp-content/uploads/2018/10/justify-content.svg" alt="justify-content">
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="Gap">Gap<a class="anchor-link" href="#Gap"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 138" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Suppose we have several elements inside a container and we've set <code>justify-content: center;</code>. This will make the elements centered in the container, but they will be touching each other. If we want there to be space between the elements, we can set <code>gap: 10px;</code>. This way, there will be a 10px gap between the elements.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-html">&lt;section&gt;<br>&lt;div&gt;Text 1&lt;/div&gt;<br>&lt;div&gt;Text 2&lt;/div&gt;<br>&lt;div&gt;Text 3&lt;/div&gt;<br>&lt;/section&gt;</code></pre></div>
            </section>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">section &#123;<br>display: flex;<br>justify-content: center;<br>gap: 10px;<br>&#125;</code></pre></div>
            </section>
      <p>I'm unable to view or interpret images directly. However, if you can describe the image or provide details about it, I'd be happy to help you with any questions or information you're looking for!</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="Align-items">Align-items<a class="anchor-link" href="#Align-items"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 139" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>So far we have seen how to distribute elements along the main axis of the <code>Flexbox</code>. But what about the cross axis? For that, we have the <code>align-items</code> property. This property allows us to align items along the cross axis of the <code>Flexbox</code>.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-html">&lt;section&gt;<br>&lt;div&gt;Text 1&lt;/div&gt;<br>&lt;div&gt;Text 2&lt;/div&gt;<br>&lt;div&gt;Text 3&lt;/div&gt;<br>&lt;/section&gt;</code></pre></div>
            </section>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">section &#123;display: flex;<br>align-items: center;<br>&#125;</code></pre></div>
            </section>
      <img decoding="async" onerror="this.parentNode.removeChild(this)" src="https://css-tricks.com/wp-content/uploads/2018/10/align-items.svg" alt="align-items">
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="Align-content">Align-content<a class="anchor-link" href="#Align-content"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 140" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>With <code>align-content</code> we can align the content of the container on the cross axis. This property is similar to <code>align-items</code>, but instead of aligning the items, it aligns the content of the container.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-html">&lt;section&gt;<br>&lt;div&gt;Text 1&lt;/div&gt;<br>&lt;div&gt;Text 2&lt;/div&gt;<br>&lt;div&gt;Text 3&lt;/div&gt;<br>&lt;/section&gt;</code></pre></div>
            </section>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">section &#123;<br>display: flex;align-content: center;<br>flex-wrap: wrap;<br>height: 200px;<br>&#125;</code></pre></div>
            </section>
      <img decoding="async" onerror="this.parentNode.removeChild(this)" src="https://css-tricks.com/wp-content/uploads/2018/10/align-content.svg" alt="align-content">
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="Align-content vs Align-items">Align-content vs Align-items<a class="anchor-link" href="#Align-content vs Align-items"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 141" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>As there can be confusion between <code>align-content</code> and <code>align-items</code>, let's look at an example to see the difference between these properties.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-html">&lt;section&gt;<br>&lt;div&gt;Text 1&lt;/div&gt;<br>&lt;div&gt;Text 2&lt;/div&gt;<br>&lt;div&gt;Text 3&lt;/div&gt;<br>&lt;div&gt;Text 4&lt;/div&gt;<br>&lt;div&gt;Text 5&lt;/div&gt;<br>&lt;div&gt;Text 6&lt;/div&gt;<br>&lt;div&gt;Text 7&lt;/div&gt;<br>&lt;div&gt;Text 8&lt;/div&gt;<br>&lt;div&gt;Text 9&lt;/div&gt;<br>&lt;/section&gt;</code></pre></div>
            </section>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">section &#123;<br>display: flex;<br>align-items: center;<br>align-content: center;<br>flex-wrap: wrap;<br>height: 200px;<br>It seems like you might have accidentally sent an incomplete or incorrect Markdown text. Could you please provide the actual Markdown content that needs to be translated?</code></pre></div>
            </section>
      <p>With <code>align-items</code> we align the items along the cross axis, while with <code>align-content</code> we align the content of the container along the cross axis. That is, with <code>align-items</code> we align the items relative to each other, whereas with <code>align-content</code> we align the content of the container. In the previous example, we can see that with <code>align-items</code> the items are aligned relative to each other, while with <code>align-content</code> the content of the container is aligned along the cross axis.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="Align-self">Align-self<a class="anchor-link" href="#Align-self"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 142" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Sometimes we need to align an element on the cross axis differently from the rest of the elements. For this, we have the <code>align-self</code> property. This property allows us to align an element on the cross axis differently from the rest of the elements.</p>
      <p>So far we aligned the elements in the parent, but with <code>align-self</code> we can align an element on the cross axis differently from the other elements.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-html">&lt;section&gt;<br>&lt;div&gt;Text 1&lt;/div&gt;<br>&lt;div&gt;Text 2&lt;/div&gt;<br>&lt;div&gt;Text 3&lt;/div&gt;<br>&lt;/section&gt;</code></pre></div>
            </section>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">section &#123;<br>display: flex;<br>align-items: center;<br>&#125;<br><br>section div:nth-child(2) &#123;<br>align-self: flex-end;<br>&#125;</code></pre></div>
            </section>
      <img decoding="async" onerror="this.parentNode.removeChild(this)" src="https://css-tricks.com/wp-content/uploads/2018/10/align-self.svg" alt="align-self">
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="Flexbox Practice">Flexbox Practice<a class="anchor-link" href="#Flexbox Practice"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 143" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>A good resource to practice Flexbox is <a href="https://flexboxfroggy.com/#es" target="_blank" rel="nofollow noreferrer">Flexbox Froggy</a>.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h2 id="Grid">Grid<a class="anchor-link" href="#Grid"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 144" src={svg_paths.link_svg_path}/></a></h2>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>If we need to create a more complex layout, we can use <code>Grid</code>. <code>Grid</code> is a two-dimensional grid system that allows us to create more complex layouts than with <code>Flexbox</code>.</p>
      <img decoding="async" onerror="this.parentNode.removeChild(this)" src="https://miro.medium.com/v2/resize:fit:860/1*FifZUGz97Onmb7RUOairbg.png" alt="grid">
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="Grid container">Grid container<a class="anchor-link" href="#Grid container"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 145" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Let's see an example of how to layout with <code>Grid</code>. For this, we will use the following HTML structure.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-html">&lt;section&gt;<br>&lt;div&gt;Text 1&lt;/div&gt;<br>&lt;div&gt;Text 2&lt;/div&gt;<br>&lt;div&gt;Text 3&lt;/div&gt;<br>&lt;div&gt;Text 4&lt;/div&gt;<br>&lt;div&gt;Text 5&lt;/div&gt;<br>&lt;div&gt;Text 6&lt;/div&gt;<br>&lt;div&gt;Text 7&lt;/div&gt;<br>&lt;div&gt;Text 8&lt;/div&gt;<br>&lt;div&gt;Text 9&lt;/div&gt;<br>&lt;/section&gt;</code></pre></div>
            </section>
      <p>To create a <code>Grid</code>, we need to create a container with the property <code>display: grid</code>, remember that by default containers have <code>display: block</code> by default. This container is known as the <code>Grid container</code>.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">section &#123;<br>display: grid;<br>&#125;</code></pre></div>
            </section>
      <p>This code will create a <code>Grid</code> with a single column and as many rows as we have items.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>If we want to change the number of columns, we can use the <code>grid-template-columns</code> property. This property allows us to define the number of columns our <code>Grid</code> will have. To define the number of columns, we can use units of measurement such as <code>px</code>, <code>em</code>, <code>rem</code>, <code>fr</code>, etc.</p>
      <p>As many columns as defined measurement units will be created. In the following example, we will create 3 columns of 100px each.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">section &#123;<br>display: grid;<br>grid-template-columns: 100px 100px 100px;&#125;</code></pre></div>
            </section>
      <p>With this example, we have created a <code>Grid</code> with 3 columns, each 100px wide.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>We can define the width of one of the columns with <code>auto</code> and the rest with a measure, this way the column with <code>auto</code> will adapt to the content, while the other columns will have the width we have defined.</p>
      <p>When setting <code>auto</code>, the browser will decide the column width based on the space available in the container and the space occupied by the column content.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">section &#123;<br>display: grid;<br>grid-template-columns: auto 100px 100px;<br>&#125;</code></pre></div>
            </section>
      <p>The first column will adjust to the content, while the other two will have a width of 100px.</p>
      <p>If we define two columns with <code>auto</code>, the browser will distribute the space between the two columns, but it doesn't have to be the same space for each column, since, as we've said, the space will depend on the container's space and the content's space.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">section &#123;<br>display: grid;<br>grid-template-columns: auto auto 100px;<br>&#125;</code></pre></div>
            </section>
      <p>In this example, the first two columns will adjust to the content, while the third will have a width of 100px.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="Fraction">Fraction<a class="anchor-link" href="#Fraction"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 146" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>There is a unit of measurement that only exists in <code>Grid</code> and it is <code>fr</code>. This unit of measurement allows us to define the width of the columns based on the available space in the container.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">section &#123;<br>display: grid;<br>grid-template-columns: 1fr 1fr 1fr;<br>&#125;</code></pre></div>
            </section>
      <p>In this example, the three columns will have the same width, as the available space in the container will be distributed among the three columns.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">section &#123;display: grid;<br>grid-template-columns: 1fr 2fr 1fr;<br>&#125;</code></pre></div>
            </section>
      <p>In this example, the second column will be twice as wide as the other two, since the available space in the container will be distributed among the three columns, but the second column will have twice as much space as the other two.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>We can do the same with rows, for this we use the <code>grid-template-rows</code> property.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">section &#123;<br>display: grid;<br>grid-template-columns: 1fr 2fr 1fr;grid-template-rows: 1fr 2fr 1fr;<br>It seems like there was an issue with your message. Could you please provide the Markdown text you would like translated to English?</code></pre></div>
            </section>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="Empty Grid">Empty Grid<a class="anchor-link" href="#Empty Grid"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 147" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>We have said that we can divide the <code>Grid</code> into columns and rows, for which we set as many units of measurement as columns or rows we want. But what happens if we set more units of measurement than we need.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-html">&lt;section&gt;<br>&lt;div&gt;Text 1&lt;/div&gt;<br>&lt;div&gt;Text 2&lt;/div&gt;<br>&lt;div&gt;Text 3&lt;/div&gt;<br>&lt;div&gt;Text 4&lt;/div&gt;<br>&lt;div&gt;Text 5&lt;/div&gt;<br>&lt;div&gt;Text 6&lt;/div&gt;<br>&lt;div&gt;Text 7&lt;/div&gt;<br>&lt;div&gt;Text 8&lt;/div&gt;<br>&lt;div&gt;Text 9&lt;/div&gt;<br>&lt;/section&gt;</code></pre></div>
            </section>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">section &#123;<br>display: grid;<br>grid-template-columns: 1fr 1fr 1fr 1fr;<br>grid-template-rows: 1fr 1fr 1fr 1fr;<br>&#125;</code></pre></div>
            </section>
      <p>In this example, a <code>Grid</code> with 4 columns and 4 rows will be created, but we only have 9 elements, while we have created a grid of 16 elements. What happens to the 7 extra elements? The browser creates them as empty.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="Grid-auto-rows">Grid-auto-rows<a class="anchor-link" href="#Grid-auto-rows"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 148" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>If when creating the <code>Grid</code> we only define the value of <code>grid-template-columns</code>, the browser will create the necessary rows for the columns we have defined, but it will create them with the default size, that is, the size of the content.</p>
      <p>If we want to define the size of the rows, we can use the <code>grid-auto-rows</code> property. This property allows us to define the size of the rows that are created by default.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">section &#123;<br>display: grid;<br>grid-template-columns: 1fr 1fr 1fr 1fr;<br>grid-auto-rows: 100px;<br>It seems like you might have intended to provide a Markdown text for translation but didn&#39;t include it. Could you please provide the Markdown text you want translated?</code></pre></div>
            </section>
      <p>In this example, a <code>Grid</code> will be created with 4 columns and as many rows as we have items, but the row size will be 100px.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Suppose we have also defined <code>grid-template-rows</code>, but we have defined the size of the first rows and not all the necessary rows. With <code>grid-auto-rows</code>, we can define the size of the missing rows.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">section &#123;<br>display: grid;<br>grid-template-columns: 1fr 1fr 1fr 1fr;<br>grid-template-rows: 100px 100px;<br>grid-auto-rows: 50px;<br>&#125;</code></pre></div>
            </section>
      <p>In this example, a <code>Grid</code> will be created with 4 columns and as many rows as we have items, but the size of the first two rows will be 100px, while the size of the remaining rows will be 50px.</p>
      <p>This is very useful when we don't know how many elements we are going to have, since we can define the size of the first rows and the size of the rows that are created by default.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="Repeat">Repeat<a class="anchor-link" href="#Repeat"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 149" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Let's imagine we want to create a <code>Grid</code> with 100 columns and all of the same size. We would have to write the unit of measurement we want to use 100 times. To avoid this, we can use the <code>repeat</code> property.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">section &#123;<br>display: grid;<br>grid-template-columns: repeat(100, 1fr);<br>It seems like you&#39;ve only provided a closing brace `&#125;` without any Markdown content to translate. Could you please provide the full text you&#39;d like translated?</code></pre></div>
            </section>
      <p>With <code>repeat</code> we can define the number of columns we want and the unit of measurement we want to use.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>We can use <code>repeat</code> with subparts of the grid. For example, imagine we want to create 100 columns again, but we want the first and last columns to have a width of 100px and the rest of the columns to have a width of 1fr.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">section &#123;<br>display: grid;<br>grid-template-columns: 100px repeat(98, 1fr) 100px;<br>&#125;</code></pre></div>
            </section>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Now suppose we have a column pattern that repeats every 3 columns. We can use <code>repeat</code> to define this pattern.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">section &#123;<br>display: grid;<br>grid-template-columns: repeat(3, 100px 1fr);<br>&#125;</code></pre></div>
            </section>
      <p>This way we create a grid of 6 columns, where the pattern repeats every 2 columns.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="minmax">minmax<a class="anchor-link" href="#minmax"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 150" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Maybe we don't know the exact size of a row or a column, but what we want is for it to occupy a size between a minimum and a maximum. For this, we can use the <code>minmax</code> property.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">section &#123;<br>display: grid;<br>grid-template-columns: minmax(100px, 1fr) 1fr 1fr 1fr;<br>&#125;</code></pre></div>
            </section>
      <p>In this example, we want each column to have 25% of the container's width, but the first column should have a minimum width of 100px. That is, if the space occupied by the first column is less than 100px, the column will have a width of 100px, but if the space occupied by the first column is greater than 100px, the column will have a width of 25% of the container.</p>
      <p>This is very useful, for example, when we have a sidebar index and we want it to occupy a minimum width, but if the available space is larger, it should take up the corresponding space.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-html">&lt;div&gt;<br>&lt;aside&gt;Index&lt;/aside&gt;<br>&lt;main&gt;Content&lt;/main&gt;<br>&lt;/div&gt;</code></pre></div>
            </section>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">div &#123;<br>display: grid;<br>grid-template-columns: minmax(100px, 1fr) 5fr;<br>It seems like you&#39;ve only provided a closing brace `&#125;` without any Markdown content to translate. Could you please provide the actual text in Markdown format that needs translation?</code></pre></div>
            </section>
      <p>This way, the index will have a minimum width of 100px, but if the available space is larger, the index will occupy the corresponding space.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="Grid-column-gap and Grid-row-gap">Grid-column-gap and Grid-row-gap<a class="anchor-link" href="#Grid-column-gap and Grid-row-gap"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 151" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>If we want to add space between the columns or between the rows, we can use the <code>grid-column-gap</code> and <code>grid-row-gap</code> properties.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">section &#123;<br>display: grid;<br>grid-template-columns: repeat(3, 100px);<br>grid-column-gap: 20px;<br>It seems like you have not provided any Markdown text to translate. Please provide the Markdown text you want translated into English.</code></pre></div>
            </section>
      <p>In this example, we have created a <code>Grid</code> with 3 columns of 100px each and a space of 20px between the columns.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">section &#123;display: grid;<br>grid-template-columns: repeat(3, 100px);<br>grid-row-gap: 20px;<br>&#125;</code></pre></div>
            </section>
      <p>In this example, we have created a <code>Grid</code> with 3 columns of 100px each and a spacing of 20px between the rows.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>We can define the space between columns and rows with the <code>grid-gap</code> property.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">section &#123;<br>display: grid;<br>grid-template-columns: repeat(3, 100px);<br>grid-gap: 20px 10px;<br>It seems like there might be some missing content in your request. Could you please provide the Markdown text that needs to be translated?</code></pre></div>
            </section>
      <p>In this example, we have created a <code>Grid</code> with 3 columns of 100px each and a space of 20px between the columns and a space of 10px between the rows.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">section &#123;display: grid;<br>grid-template-columns: repeat(3, 100px);<br>grid-gap: 20px;<br>&#125;</code></pre></div>
            </section>
      <p>In this example, we have created a <code>Grid</code> with 3 columns of 100px each and a spacing of 20px between the columns and rows.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="Auto-fill and Auto-fit">Auto-fill and Auto-fit<a class="anchor-link" href="#Auto-fill and Auto-fit"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 152" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>With <code>auto-fill</code> and <code>auto-fit</code> we can create a <code>Grid</code> with a number of columns or rows that adapt to the available space in the container, thus making the <code>Grid</code> responsive.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">section &#123;<br>display: grid;<br>grid-template-columns: repeat(auto-fill, 100px);<br>It seems like you didn&#39;t provide any Markdown text to translate. Please provide the Markdown text you want translated to English.</code></pre></div>
            </section>
      <p>In this example, as many columns as can fit in the container will be created, but each column will have a width of 100px.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">section &#123;display: grid;<br>grid-template-columns: repeat(auto-fit, 100px);<br>&#125;</code></pre></div>
            </section>
      <p>In this example, as many columns as can fit in the container will be created, but each column will have a width of 100px and if there is extra space in the container, the space will be distributed among the columns.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Now we can make it more complete</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">section &#123;<br>display: grid;<br>grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));<br>&#125;</code></pre></div>
            </section>
      <p>In this example, as many columns as can fit in the container will be created, but each column will have a minimum width of 100px, and if there is extra space in the container, it will be distributed among the columns. As we make the browser smaller, the columns will adapt to the available space until a point is reached where they would need to be narrower than 100px to fit, at which point a column will be removed and the space will be redistributed among the remaining columns.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">section &#123;<br>display: grid;<br>grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));<br>grid-gap: 20px;<br>&#125;</code></pre></div>
            </section>
      <p>In this example, as many columns as can fit in the container will be created, but each column will have a minimum width of 100px and if there is extra space in the container, the space will be distributed among the columns and there will be a 20px gap between the columns.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="Auto-fill vs Auto-fit">Auto-fill vs Auto-fit<a class="anchor-link" href="#Auto-fill vs Auto-fit"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 153" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>The difference between <code>auto-fill</code> and <code>auto-fit</code> is that <code>auto-fill</code> creates as many columns or rows as can fit in the container, while <code>auto-fit</code> creates as many columns or rows as can fit in the container, but if there is extra space in the container, the space will be distributed among the columns or rows.</p>
      <p>That is, <code>auto-fill</code> creates as many columns or rows as can fit in the container, but if there is extra space in the container, the space will not be distributed among the columns or rows, while <code>auto-fit</code> creates as many columns or rows as can fit in the container, but if there is extra space in the container, the space will be distributed among the columns or rows.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="Grid-column-start and Grid-column-end (bento grid)">Grid-column-start and Grid-column-end (bento grid)<a class="anchor-link" href="#Grid-column-start and Grid-column-end (bento grid)"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 154" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>So far we have seen how to create a <code>Grid</code> with columns and rows, but what if we want an element to span more than one column or row? For this, we have the properties <code>grid-column-start</code> and <code>grid-column-end</code>.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-html">&lt;section&gt;<br>&lt;div&gt;Text 1&lt;/div&gt;<br>&lt;div&gt;Text 2&lt;/div&gt;<br>&lt;div&gt;Text 3&lt;/div&gt;<br>&lt;div&gt;Text 4&lt;/div&gt;<br>&lt;div&gt;Text 5&lt;/div&gt;<br>&lt;div&gt;Text 6&lt;/div&gt;<br>&lt;div&gt;Text 7&lt;/div&gt;<br>&lt;div&gt;Text 8&lt;/div&gt;<br>&lt;div&gt;Text 9&lt;/div&gt;<br>&lt;/section&gt;</code></pre></div>
            </section>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">section &#123;display: grid;<br>grid-template-columns: repeat(3, 100px);<br>grid-gap: 20px;<br>&#125;<br><br>section div:nth-child(2) &#123;<br>grid-column-start: 1;<br>grid-column-end: 3;<br>&#125;</code></pre></div>
            </section>
      <p>In this example, we have created a <code>Grid</code> with 3 columns of 100px each and a space of 20px between the columns. The second element spans from the first column to the third column.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>We can also specify the start and end of the column with the <code>grid-column</code> property.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">section &#123;<br>display: grid;<br>grid-template-columns: repeat(3, 100px);<br>grid-gap: 20px;<br>&#125;<br><br>section div:nth-child(2) &#123;<br>grid-column: 1 / 3;<br>&#125;</code></pre></div>
            </section>
      <p>In this example, we have created a <code>Grid</code> with 3 columns of 100px each and a space of 20px between the columns. The second element spans from the first column to the third column.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>If we don't want to tell it where to end, but rather how many columns we want it to occupy, we can use the <code>span</code> property.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">section &#123;<br>display: grid;<br>grid-template-columns: repeat(3, 100px);<br>grid-gap: 20px;<br>It seems like you didn&#39;t provide any Markdown text to translate. Please provide the Markdown text you want translated to English.<br><br>section div:nth-child(2) &#123;grid-column-start: 1;<br>grid-column-end: span 2;<br>&#125;</code></pre></div>
            </section>
      <p>In this example, we have created a <code>Grid</code> with 3 columns of 100px each and a space of 20px between the columns. The second element spans from the first column to the second column, meaning it occupies two columns.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>If we want to position them at the end, but don't know how many columns there are, we can use negative numbers.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">section &#123;<br>display: grid;<br>grid-template-columns: repeat(3, 100px);<br>grid-gap: 20px;<br>&#125;<br><br>section div:nth-child(2) &#123;grid-column-start: 1;<br>grid-column-end: -1;<br>&#125;</code></pre></div>
            </section>
      <p>In this example, we have created a <code>Grid</code> with 3 columns of 100px each and a space of 20px between the columns. The second element spans from the first column to the last column, meaning it occupies all three columns.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="Grid-row-start and Grid-row-end (bento grid)">Grid-row-start and Grid-row-end (bento grid)<a class="anchor-link" href="#Grid-row-start and Grid-row-end (bento grid)"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 155" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>We can do the same with rows, for which we have the properties <code>grid-row-start</code> and <code>grid-row-end</code>.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-html">&lt;section&gt;<br>&lt;div&gt;Text 1&lt;/div&gt;<br>&lt;div&gt;Text 2&lt;/div&gt;<br>&lt;div&gt;Text 3&lt;/div&gt;<br>&lt;div&gt;Text 4&lt;/div&gt;<br>&lt;div&gt;Text 5&lt;/div&gt;<br>&lt;div&gt;Text 6&lt;/div&gt;<br>&lt;div&gt;Text 7&lt;/div&gt;<br>&lt;div&gt;Text 8&lt;/div&gt;<br>&lt;div&gt;Text 9&lt;/div&gt;<br>&lt;/section&gt;</code></pre></div>
            </section>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">section &#123;display: grid;<br>grid-template-columns: repeat(3, 100px);<br>grid-gap: 20px;<br>It seems like you didn&#39;t provide any Markdown text to translate. Please provide the Markdown text you want translated to English.<br><br>section div:nth-child(2) &#123;<br>grid-row-start: 1;<br>grid-row-end: 3;<br>&#125;</code></pre></div>
            </section>
      <p>In this example, we have created a <code>Grid</code> with 3 columns of 100px each and a space of 20px between the columns. The second element spans from the first row to the third row.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>We can also specify the start and end of the row with the <code>grid-row</code> property.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">section &#123;<br>display: grid;<br>grid-template-columns: repeat(3, 100px);<br>grid-gap: 20px;<br>It seems like you&#39;ve provided an incomplete or incorrect Markdown text to translate. Could you please provide the correct Markdown content? I&#39;ll translate it to English for you.<br>section div:nth-child(2) &#123;<br>grid-row: 1 / 3;<br>It seems like there was an issue with the input. Please provide the Markdown text you would like to be translated to English.</code></pre></div>
            </section>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Just like before, if we don't want to tell it where to end, but rather how many rows we want it to occupy, we can use the <code>span</code> property.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">section &#123;<br>display: grid;<br>grid-template-columns: repeat(3, 100px);<br>grid-gap: 20px;<br>It seems like you might have accidentally sent an incomplete or incorrect markdown text. Could you please provide the full markdown text for translation?<br><br>section div:nth-child(2) &#123;grid-row-start: 1;<br>grid-row-end: span 2;<br>It seems like you have not provided any Markdown text to translate yet. Please provide the Markdown text you would like translated into English.</code></pre></div>
            </section>
      <p>In this example, we have created a <code>Grid</code> with 3 columns of 100px each and a spacing of 20px between the columns. The second element spans from the first row to the second row, meaning it occupies two rows.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>If we want to position them at the end, but don't know how many rows there are, we can use negative numbers.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">section &#123;<br>display: grid;<br>grid-template-columns: repeat(3, 100px);<br>grid-gap: 20px;<br>&#125;<br><br>section div:nth-child(2) &#123;grid-row-start: 1;<br>grid-row-end: -1;<br>&#125;</code></pre></div>
            </section>
      <p>In this example, we have created a <code>Grid</code> with 3 columns of 100px each and a space of 20px between the columns. The second element spans from the first row to the last row, meaning it occupies all three rows.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="Element Overlapping">Element Overlapping<a class="anchor-link" href="#Element Overlapping"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 156" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>We can position elements so that they overlap each other.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-html">&lt;section&gt;<br>&lt;div&gt;Text 1&lt;/div&gt;<br>&lt;div&gt;Text 2&lt;/div&gt;<br>&lt;div&gt;Text 3&lt;/div&gt;<br>&lt;div&gt;Text 4&lt;/div&gt;<br>&lt;div&gt;Text 5&lt;/div&gt;<br>&lt;div&gt;Text 6&lt;/div&gt;<br>&lt;div&gt;Text 7&lt;/div&gt;<br>&lt;div&gt;Text 8&lt;/div&gt;<br>&lt;div&gt;Text 9&lt;/div&gt;<br>&lt;/section&gt;</code></pre></div>
            </section>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">section &#123;<br>display: grid;<br>grid-template-columns: repeat(3, 100px);<br>grid-gap: 20px;<br>&#125;<br><br>section div:first-child &#123;<br>grid-column-start: 1;<br>grid-column-end: 2;<br>grid-row-start: 1;<br>grid-row-end: 2;<br>&#125;<br><br>section div:nth-child(2) &#123;<br>grid-column-start: 1;<br>grid-column-end: 2;<br>grid-row-start: 1;<br>grid-row-end: 2;<br>It seems like you didn&#39;t provide any Markdown text to translate. Please provide the Markdown text you want translated to English.</code></pre></div>
            </section>
      <p>In this example, we have created a <code>Grid</code> with 3 columns of 100px each and a 20px gap between the columns. The first element spans from the first column to the second column and from the first row to the second row. The second element spans from the first column to the second column and from the first row to the second row.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>To control which of the elements overlaps the other, we can use the <code>z-index</code> property.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">section &#123;<br>display: grid;<br>grid-template-columns: repeat(3, 100px);<br>grid-gap: 20px;<br>&#125;<br><br>section div:first-child &#123;<br>grid-column-start: 1;<br>grid-column-end: 2;<br>grid-row-start: 1;<br>grid-row-end: 2;<br>z-index: 1;<br>&#125;<br><br>section div:nth-child(2) &#123;<br>grid-column-start: 1;<br>grid-column-end: 2;<br>grid-row-start: 1;<br>grid-row-end: 2;<br>z-index: 2;<br>&#125;</code></pre></div>
            </section>
      <p>In this example, we have created a <code>Grid</code> with 3 columns of 100px each and a space of 20px between the columns. The first element spans from the first column to the second column and from the first row to the second row. The second element also spans from the first column to the second column and from the first row to the second row. Since the second element has a higher <code>z-index</code> than the first element, the second element overlaps the first one.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="Layouts with Grid">Layouts with Grid<a class="anchor-link" href="#Layouts with Grid"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 157" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Now that we know the basic properties of <code>Grid</code>, let's see how we can create layouts with <code>Grid</code>.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-html">&lt;header&gt;Header&lt;/header&gt;<br>&lt;aside&gt;Aside&lt;/aside&gt;<br>&lt;main&gt;Main&lt;/main&gt;<br>&lt;footer&gt;Footer&lt;/footer&gt;</code></pre></div>
            </section>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">body &#123;<br>display: grid;<br>grid-template-columns: 1fr 1fr 1fr;<br>grid-template-rows: 35px 1fr 100px;<br>min-height: 100vh;<br>&#125;<br><br>header &#123;<br>grid-column: 1 / -1;<br>It seems like you didn&#39;t provide any Markdown text to translate. Please provide the Markdown text you want to be translated into English.<br>main &#123;<br>grid-column: span 2;<br>It seems like you didn&#39;t provide any Markdown text to translate. Please provide the Markdown text you want translated to English.<br><br>footer &#123;<br>grid-column: 1 / -1;<br>It seems like there was an issue with the input you provided. Please provide the Markdown text you would like to be translated to English.</code></pre></div>
            </section>
      <p>In this example, we have created a <code>Grid</code> with 3 columns and 3 rows. The first row has a height of 35px, the second row takes up the remaining available space, and the third row has a height of 100px. The header spans from the first column to the last column, the main spans from the first column to the second column, and the footer spans from the first column to the last column.</p>
      <p>We have set <code>min-height: 100vh</code> so that the <code>Grid</code> occupies 100% of the screen height, because if we don't set this, the <code>Grid</code> will only occupy the height of its content.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>However, when looking at the CSS it's hard to understand, so we can use the <code>grid-area</code> property.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="Grid-area">Grid-area<a class="anchor-link" href="#Grid-area"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 158" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>We can name each of the areas in the <code>Grid</code> and then use that name to position the elements.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-html">&lt;header&gt;Header&lt;/header&gt;<br>&lt;aside&gt;Aside&lt;/aside&gt;<br>&lt;main&gt;Main&lt;/main&gt;<br>&lt;footer&gt;Footer&lt;/footer&gt;</code></pre></div>
            </section>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">body &#123;<br>display: grid;<br>grid-template-columns: 1fr 1fr 1fr;<br>grid-template-rows: 35px 1fr 100px;<br>min-height: 100vh;<br>grid-template-areas:<br>"header header header"<br>"sidebar content content"<br>"footer footer footer";<br>It seems like there&#39;s a missing Markdown text to translate. Please provide the Markdown text you want translated to English.<br><br>header &#123;<br>grid-area: header;It seems like you&#39;ve provided an incomplete or incorrect Markdown text to translate. Please provide the full Markdown content so I can translate it accurately.<br><br>main &#123;<br>grid-area: content;<br>It seems like there was an issue with your message. Could you please provide the Markdown text you want to be translated?<br><br>footer &#123;<br>grid-area: footer;<br>It seems like you have not provided any Markdown text to translate. Could you please provide the text you want translated into English?<br><br>aside &#123;<br>grid-area: sidebar;<br>It seems like you have not provided any Markdown text to translate yet. Please provide the Markdown text you would like translated into English.</code></pre></div>
            </section>
      <p>Since we have named each of the areas in the <code>Grid</code>, we can use that name to position the elements. This makes the CSS easier to understand.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>If we wanted to make it responsive now, we would only need to change the <code>Grid</code> and the rest of the CSS would remain the same.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">body &#123;<br>display: grid;<br>grid-template-columns: 1fr 1fr 1fr;<br>grid-template-rows: 35px 1fr 100px;<br>min-height: 100vh;<br>grid-template-areas:<br>"header header header"<br>"sidebar content content"<br>"footer footer footer";<br>&#125;<br><br>@media (width &lt; 400px) &#123;<br>body &#123;<br>grid-template-columns: 1fr;<br>grid-template-rows: 35px 1fr 100px;<br>grid-template-areas:<br>"header header sidebar"<br>"content content content"<br>"footer footer footer";<br>&#125;<br>header &#123;<br>grid-area: header;<br>&#125;<br><br>main &#123;<br>grid-area: content;<br>&#125;<br><br>footer &#123;<br>grid-area: footer;<br>It seems like you didn&#39;t provide any Markdown text to translate. Please provide the Markdown text you want translated to English.<br><br>aside &#123;<br>grid-area: sidebar;<br>&#125;</code></pre></div>
            </section>
      <p>Now we have made it so that when viewed on a large device, the sidebar is on the left and the content is on the right, but when viewed on a small device, the sidebar is on top and the content is below.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Suppose we want nothing in an area, we can put a dot.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">body &#123;<br>display: grid;<br>grid-template-columns: 1fr 1fr 1fr;<br>grid-template-rows: 35px 1fr 100px;<br>min-height: 100vh;<br>grid-template-areas:<br>"header header header"<br>"sidebar . content"<br>"footer footer footer";<br>&#125;<br><br>@media (width &lt; 400px) &#123;<br>body &#123;<br>grid-template-columns: 1fr;<br>grid-template-rows: 35px 1fr 100px;<br>grid-template-areas:<br>"header header sidebar"<br>"content content content"<br>"footer footer footer";<br>&#125;<br>header &#123;<br>grid-area: header;<br>&#125;<br><br>main &#123;<br>grid-area: content;<br>&#125;<br><br>footer &#123;<br>grid-area: footer;<br>&#125;<br><br>aside &#123;<br>grid-area: sidebar;<br>It seems like you might have intended to provide a Markdown text for translation but didn&#39;t include it. Could you please provide the Markdown text you want translated?</code></pre></div>
            </section>
      <p>Now on large screens there is a space between the sidebar and the content.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="Justify-items, Align-items, Justify-content and Align-content">Justify-items, Align-items, Justify-content and Align-content<a class="anchor-link" href="#Justify-items, Align-items, Justify-content and Align-content"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 159" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>We can align the content and elements of a <code>Grid</code> using the properties <code>justify-items</code>, <code>align-items</code>, <code>justify-content</code>, and <code>align-content</code>.</p>
      <img decoding="async" onerror="this.parentNode.removeChild(this)" src="https://miro.medium.com/v2/resize:fit:1080/1*y9RuktkbVshp7lmVmZrbeQ.png" alt="grid justify">
      </section>
      
      <section class="section-block-markdown-cell">
      <h4 id="Justify-items">Justify-items<a class="anchor-link" href="#Justify-items"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 160" src={svg_paths.link_svg_path}/></a></h4>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>We can align the elements on the X-axis of the <code>Grid</code> with the <code>justify-items</code> property.</p>
      <p>The values we can use are:</p>
      <ul>
        <li><code>start</code>: aligns the elements to the start of the main axis.</li>
        <li><code>end</code>: aligns the items to the end of the main axis.</li>
        <li><code>center</code>: aligns the elements in the center of the main axis.</li>
        <li><code>stretch</code>: stretches the items so they take up all available space on the main axis.</li>
      </ul>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-html">&lt;section&gt;<br>&lt;div&gt;Text 1&lt;/div&gt;<br>&lt;div&gt;Text 2&lt;/div&gt;<br>&lt;div&gt;Text 3&lt;/div&gt;&lt;/section&gt;</code></pre></div>
            </section>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">section &#123;<br>display: grid;<br>justify-items: center;<br>&#125;</code></pre></div>
            </section>
      </section>
      
      <section class="section-block-markdown-cell">
      <h4 id="Justify-self">Justify-self<a class="anchor-link" href="#Justify-self"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 161" src={svg_paths.link_svg_path}/></a></h4>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>With <code>justify-items</code> we align all the elements along the main axis of the <code>Grid</code>, but with <code>justify-self</code> we can align an element along the main axis of the <code>Grid</code> differently from the other elements.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-html">&lt;section&gt;<br>&lt;div&gt;Text 1&lt;/div&gt;<br>&lt;div&gt;Text 2&lt;/div&gt;<br>&lt;div&gt;Text 3&lt;/div&gt;<br>&lt;/section&gt;</code></pre></div>
            </section>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">section &#123;<br>display: grid;<br>justify-items: center;&#125;<br><br>section div:nth-child(2) &#123;<br>justify-self: end;<br>&#125;</code></pre></div>
            </section>
      <p>It looks like you've provided an image, but I'm unable to view or interpret images directly. Could you describe what the image contains or provide more context about what you need help with? If it's a specific type of content, such as a diagram, chart, or artwork, let me know, and I'll do my best to assist you!</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h4 id="Align-items">Align-items<a class="anchor-link" href="#Align-items"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 162" src={svg_paths.link_svg_path}/></a></h4>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>It is very similar to <code>justify-items</code>, but instead of aligning the items on the X-axis, it aligns them on the Y-axis.</p>
      <p>The values we can use are:</p>
      <ul>
        <li><code>start</code>: aligns the elements to the start of the cross axis.</li>
        <li><code>end</code>: aligns the items to the end of the cross axis.</li>
        <li><code>center</code>: aligns the elements in the center of the cross axis.</li>
        <li><code>stretch</code>: stretches the items so they take up all available space on the cross axis.</li>
      </ul>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-html">&lt;section&gt;<br>&lt;div&gt;Text 1&lt;/div&gt;<br>&lt;div&gt;Text 2&lt;/div&gt;<br>&lt;div&gt;Text 3&lt;/div&gt;&lt;/section&gt;</code></pre></div>
            </section>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">section &#123;<br>display: grid;<br>align-items: center;<br>&#125;</code></pre></div>
            </section>
      </section>
      
      <section class="section-block-markdown-cell">
      <h4 id="Align-self">Align-self<a class="anchor-link" href="#Align-self"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 163" src={svg_paths.link_svg_path}/></a></h4>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>With <code>align-items</code> we align all the items along the secondary axis of the <code>Grid</code>, but with <code>align-self</code> we can align an item along the secondary axis of the <code>Grid</code> differently from the other items.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-html">&lt;section&gt;<br>&lt;div&gt;Text 1&lt;/div&gt;<br>&lt;div&gt;Text 2&lt;/div&gt;<br>&lt;div&gt;Text 3&lt;/div&gt;<br>&lt;/section&gt;</code></pre></div>
            </section>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">section &#123;<br>display: grid;<br>align-items: center;&#125;<br><br>section div:nth-child(2) &#123;<br>align-self: end;<br>&#125;</code></pre></div>
            </section>
      <p>I apologize, but I'm not able to view or interpret the image you've shared. The image data appears to be a long string of characters, likely encoded in base64 format. Without being able to actually see and examine the contents of the image, I don't have any context about what it depicts or contains.</p>
      <p>If you'd like me to comment on or analyze something in an image, could you please describe its contents? Or if there's a specific question you have about the image, feel free to ask that directly. I'm happy to try and help with whatever information or guidance I can provide based on your description or questions!</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h4 id="Place-content">Place-content<a class="anchor-link" href="#Place-content"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 164" src={svg_paths.link_svg_path}/></a></h4>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>If we want to use <code>justify-content</code> and <code>align-content</code> at the same time, we can use <code>place-content</code>.</p>
      <p>The values we can use are:</p>
      <ul>
        <li><code>start</code>: aligns the elements at the beginning of both the main and cross axes.</li>
        <li><code>end</code>: aligns the items at the end of the main and cross axes.</li>
        <li><code>center</code>: aligns the elements in the center of both the main and cross axes.</li>
        <li><code>stretch</code>: stretches the items so they occupy all available space on both the main and cross axes.</li>
      </ul>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-html">&lt;section&gt;<br>&lt;div&gt;Text 1&lt;/div&gt;<br>&lt;div&gt;Text 2&lt;/div&gt;<br>&lt;div&gt;Text 3&lt;/div&gt;&lt;/section&gt;</code></pre></div>
            </section>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">section &#123;<br>display: grid;<br>place-content: center;<br>It seems like you have not provided any Markdown text to translate. Please provide the Markdown text you would like translated into English.</code></pre></div>
            </section>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="Grid Practice">Grid Practice<a class="anchor-link" href="#Grid Practice"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 165" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>A good resource to practice Grid is <a href="https://cssgridgarden.com/" target="_blank" rel="nofollow noreferrer">Grid Garden</a>.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h2 id="Center a div">Center a div<a class="anchor-link" href="#Center a div"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 166" src={svg_paths.link_svg_path}/></a></h2>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>So far we have seen 3 ways to center a <code>div</code>:</p>
      <ul>
        <li>With <code>position: absolute</code>.</li>
        <li>With <code>display: flex</code>.</li>
        <li>With <code>display: grid</code>.</li>
      </ul>
      </section>
      
      <section class="section-block-markdown-cell">
      <h2 id="Animations">Animations<a class="anchor-link" href="#Animations"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 167" src={svg_paths.link_svg_path}/></a></h2>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Within animations, there are two types: <code>transitions</code> and <code>animations</code></p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="Transitions">Transitions<a class="anchor-link" href="#Transitions"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 168" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>In transitions we change an element from an initial state to a target state</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Suppose we have the following circle</p>
      <div class='highlight'><pre><code class="language-html">&lt;div class="pulser"&gt;&lt;/div&gt;</code></pre></div>
      <p>And its CSS</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">.pulser &#123;<br>width: 30px;<br>height: 30px;<br>background-color: #09f;<br>border-radius: 50%;<br>position: relative;<br>&#125;</code></pre></div>
            </section>
      <p>HTML elements can have states, for example the <code>hover</code> state, which is when the user hovers the cursor over the element.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">.hover &#123;<br>scale: 2;<br>background: purple;<br>box-shadow: 0 0 10px purple;<br>It seems like you&#39;ve provided an incomplete or incorrect Markdown structure with just a closing brace `&#125;`. If you have a specific Markdown text to translate, please provide it so I can assist you properly.</code></pre></div>
            </section>
      <p>When we use <code>scale</code>, we make it increase in size while occupying the same space. However, if we had changed the <code>width</code> and the <code>height</code>, the button would have moved from its original position.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h4 id="Transition">Transition<a class="anchor-link" href="#Transition"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 169" src={svg_paths.link_svg_path}/></a></h4>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>The issue is that if we now hover over the circle, it changes state abruptly, so this is where the <code>transition</code> comes in, which is how we tell CSS how to modify the state. For example, if we want the transition to last 1 second</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">.wristband &#123;<br>width: 30px;<br>height: 30px;<br>background-color: #09f;<br>border-radius: 50%;<br>position: relative;<br>transition: 1s;<br>&#125;</code></pre></div>
            </section>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>It's important to put the transition on <code>.pulser</code> and not on <code>.pulser:hover</code> because otherwise, the transition wouldn't apply when returning to the initial state. In other words, when you hover over the circle, the transition will be visible, but when you move the mouse away from the circle, there won't be a transition back; it will abruptly return to the initial state.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>What is to be transitioned <code>transition-property</code></p>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>With the above, a transition of color, size, and background would occur, but if we don't want a transition to happen for all properties, we can specify this using <code>transition-property</code>.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">.wristband &#123;<br>width: 30px;<br>height: 30px;<br>background-color: #09f;<br>border-radius: 50%;<br>position: relative;transition: 1s;<br>transition-property: background-color, scale;<br>&#125;</code></pre></div>
            </section>
      <p>This way, only the transition of <code>background-color</code> and <code>scale</code> will be applied.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h4 id="Smooth transitions">Smooth transitions<a class="anchor-link" href="#Smooth transitions"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 170" src={svg_paths.link_svg_path}/></a></h4>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>The default transition is linear, but if we want to change it, we can do so using <code>transition-timing-function</code>.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">.wristband &#123;<br>width: 30px;<br>height: 30px;<br>background-color: #09f;<br>border-radius: 50%;<br>position: relative;<br>transition: 1s;<br>transition-property: background-color, scale;<br>transition-timing-function: ease-in-out;<br>&#125;</code></pre></div>
            </section>
      <p>This way the transition will be smoother at the beginning and end. The possible values are as follows:</p>
      <ul>
        <li>linear</li>
        <li>ease</li>
        <li>ease-in</li>
        <li>ease-out</li>
        <li>ease-in-out</li>
        <li>cubic-bezier(n,n,n,n)</li>
      </ul>
      </section>
      
      <section class="section-block-markdown-cell">
      <h4 id="Step-by-step Transitions">Step-by-step Transitions<a class="anchor-link" href="#Step-by-step Transitions"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 171" src={svg_paths.link_svg_path}/></a></h4>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>If we want the animation to occur in several steps, we can use <code>steps(n)</code>, where <code>n</code> is the number of steps we want the animation to have.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">.wristband &#123;<br>width: 30px;<br>height: 30px;<br>background-color: #09f;<br>border-radius: 50%;<br>position: relative;<br>transition: 1s;<br>transition-property: background-color, scale;<br>transition-timing-function: steps(5);<br>&#125;</code></pre></div>
            </section>
      <p>This transition will be carried out in 5 steps over the course of a second</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h4 id="Full control of the transition with cubic-bezier">Full control of the transition with cubic-bezier<a class="anchor-link" href="#Full control of the transition with cubic-bezier"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 172" src={svg_paths.link_svg_path}/></a></h4>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>To perfectly control the transition, we can use <code>cubic-bezier(n,n,n,n)</code>, where <code>n</code> is a number between 0 and 1 that indicates the position of the point on the X and Y axes.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">.pulser &#123;<br>width: 30px;<br>height: 30px;<br>background-color: #09f;<br>border-radius: 50%;<br>position: relative;<br>transition: 1s;<br>transition-property: background-color, scale;<br>transition-timing-function: cubic-bezier(0.1, 0.7, 1.0, 0.1);<br>&#125;</code></pre></div>
            </section>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>With <code>delay</code> we can indicate the time that must pass before the transition starts.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">.pulser &#123;<br>width: 30px;<br>height: 30px;<br>background-color: #09f;<br>border-radius: 50%;<br>position: relative;<br>transition: 1s;<br>transition-property: background-color, scale;<br>transition-timing-function: cubic-bezier(0.1, 0.7, 1.0, 0.1);<br>transition-delay: 1s;<br>It seems like you have not provided any Markdown text to translate. Could you please provide the text you would like translated into English?</code></pre></div>
            </section>
      <p>With <code>delay</code>, you can create loading animations, for example</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-html">&lt;section&gt;<br>Hover to show the elements<br>&lt;div class="pulser"&gt;&lt;/div&gt;<br>&lt;div class="pulser"&gt;&lt;/div&gt;<br>&lt;div class="pulser"&gt;&lt;/div&gt;<br>&lt;/section&gt;</code></pre></div>
            </section>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">section &#123;<br>display: flex;<br>flex-direction: column;<br>align-items: center;<br>justify-content: center;<br>height: 100vh;<br>&#125;<br><br>.pulser &#123;<br>width: 30px;<br>height: 30px;<br>border-radius: 50%;<br>position: relative;<br>position: relative;<br>opacity: 0;<br>transition: 2s;<br>transition-timing-function: ease;<br>&#125;<br><br>section &#123;<br>display: flex;<br>gap: 16px;<br>justify-content: center;<br>align-items: center;<br>&#125;<br><br>section:hover .pulser &#123;<br>opacity: 1;<br>It seems like you might have intended to provide a Markdown text for translation but only sent a closing brace `&#125;`. If you have a specific Markdown text that needs to be translated, please share it, and I will translate it for you.<br><br>.first-child &#123;<br>transition-delay: 0s;<br>It seems like you might have accidentally sent an incomplete or incorrect Markdown text. Could you please provide the actual Markdown content that needs to be translated?<br><br>.pulse:nth-child(2) &#123;<br>transition-delay: 300ms;<br>&#125;<br><br>.last-child &#123;<br>transition-delay: 600ms;<br>&#125;</code></pre></div>
            </section>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>In <a href="https://easings.co/" target="_blank" rel="nofollow noreferrer">easings.co</a> we can see and configure the transitions</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h4 id="Everything in one line">Everything in one line<a class="anchor-link" href="#Everything in one line"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 173" src={svg_paths.link_svg_path}/></a></h4>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>In <code>.pulser</code> we have set <code>transition</code> and <code>transition-timing-function</code>, but we can also put it all in one line</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">.wristband &#123;<br>width: 30px;<br>height: 30px;<br>background-color: #09f;<br>border-radius: 50%;<br>position: relative;<br>transition: background 300ms ease-in-out 2s;<br>&#125;</code></pre></div>
            </section>
      <p>With this, what we have told it is to animate the <code>background</code> for 300ms, with a smooth transition at the beginning and end, and to wait 2 seconds before starting the transition.</p>
      <p>If we want to specify multiple elements, we can do it in the following way</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">.wristband &#123;<br>width: 30px;<br>height: 30px;<br>background-color: #09f;<br>border-radius: 50%;<br>position: relative;<br>transition: background 300ms ease-in-out 2s, scale 1s ease-in-out 1s;<br>It seems like you&#39;ve provided an incomplete or incorrect Markdown text to translate. Could you please provide the full Markdown content for translation?</code></pre></div>
            </section>
      </section>
      
      <section class="section-block-markdown-cell">
      <h4 id="What to Transition?">What to Transition?<a class="anchor-link" href="#What to Transition?"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 174" src={svg_paths.link_svg_path}/></a></h4>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>When it comes to adding transitions, you can look up what can be transitioned in <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_animated_properties" target="_blank" rel="nofollow noreferrer">Animatable CSS properties</a>, but to avoid wasting time searching, it's best to transition properties thoughtfully, for example, something that can be transitioned is a color, a size, etc.</p>
      <p>It is ideal to transition properties with intermediate states, for example, a font does not have an intermediate state and it makes no sense to transition from one font to another.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h4 id="Different transitions at the beginning and end">Different transitions at the beginning and end<a class="anchor-link" href="#Different transitions at the beginning and end"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 175" src={svg_paths.link_svg_path}/></a></h4>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>We previously mentioned that transitions should be placed on the element and not on the hover, because this way the transition will only be visible when the mouse is over the element and not when you move it away. If we want different animations at the start and end, we can take advantage of this. On the element, we will place the final transition, and on the hover, the initial one.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">.wristband &#123;<br>width: 30px;<br>height: 30px;<br>background-color: #09f;<br>border-radius: 50%;<br>position: relative;<br>transition: background 300ms ease-in-out<br>&#125;<br><br>.hover &#123;scale: 2;<br>background: purple;<br>box-shadow: 0 0 10px purple;<br>transition: 1s;<br>transition-duration: 1s;<br>&#125;</code></pre></div>
            </section>
      <p>This way, when we hover over the element, there will be a 300ms transition, and when we remove the mouse, the transition will be 1 second.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h4 id="Accessibility">Accessibility<a class="anchor-link" href="#Accessibility"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 176" src={svg_paths.link_svg_path}/></a></h4>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Some people might get dizzy with the transitions, so we can add a media query to remove them.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">@media (prefers-reduced-motion: reduce) &#123;<br>.wristband &#123;<br>transition: none;&#125;<br>It seems like you might have intended to provide a Markdown text for translation but didn&#39;t include it. Could you please provide the Markdown text you want translated?</code></pre></div>
            </section>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="Animations">Animations<a class="anchor-link" href="#Animations"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 177" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Transitions are the animations when we interact with elements, but in animations we don't need to interact with the element; they can run on their own. For example, the typical button that changes and moves every so often to let you know you need to press it.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h4 id="Keyframes">Keyframes<a class="anchor-link" href="#Keyframes"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 178" src={svg_paths.link_svg_path}/></a></h4>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>We go back to the example of the blue ball and remove all transitions.</p>
      <div class='highlight'><pre><code class="language-html">&lt;div class="pulser"&gt;&lt;/div&gt;</code></pre></div>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">.wristband &#123;<br>width: 30px;<br>height: 30px;background-color: #09f;<br>border-radius: 50%;<br>&#125;</code></pre></div>
            </section>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>We need to tell CSS that we want to create an animation, for this we use <code>@keyframes</code> and give the animation a name.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">@keyframes move &#123;<br>&#125;</code></pre></div>
            </section>
      <p>Now we have to tell it where this frame starts, for that we use <code>from</code> and where it ends, for that we use <code>to</code></p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">@keyframes move &#123;<br>from &#123;<br>&#125;<br>to &#123;<br>It seems like there was an issue with your message. Could you please provide the Markdown text you want to translate?<br>&#125;</code></pre></div>
            </section>
      <p>Now we need to indicate which properties we want to change, for example the position</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">@keyframes move &#123;<br>from &#123;<br>transform: translateX(0);<br>&#125;<br>to &#123;<br>transform: translateX(100px);<br>It seems like there&#39;s a missing Markdown text to translate. Could you please provide the text?<br>It seems like you&#39;ve provided an incomplete or incorrect Markdown text to translate. Could you please provide the full Markdown content? I&#39;ll make sure to translate it accurately while preserving its structure and style.</code></pre></div>
            </section>
      <p>This way, when we enter the page, the blue ball will move 100px to the right</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h4 id="After">After<a class="anchor-link" href="#After"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 179" src={svg_paths.link_svg_path}/></a></h4>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>In an element, you can place an <code>after</code> which is an element that goes after the main element.</p>
      <div class='highlight'><pre><code class="language-html">&lt;div class="pulser"&gt;&lt;/div&gt;</code></pre></div>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">.wristband &#123;<br>width: 30px;<br>height: 30px;<br>background-color: blue;<br>border-radius: 50%;<br>It seems like you might have intended to provide some Markdown text for translation but didn&#39;t include it. Could you please share the text you want translated?<br><br>.pulser::after &#123;<br>content: &#39;&#39;;<br>position: absolute;<br>width: 100%;<br>height: 100%;<br>top: 0;<br>left: 0;<br>background-color: blue;<br>border-radius: 50%;<br>z-index: -1;<br>&#125;</code></pre></div>
            </section>
      <p>This puts a blue circle behind the blue circle, so now we have two blue circles.</p>
      <p>Now we define the keyframes</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">@keyframes move &#123;<br>0% &#123;<br>opacity: 0;<br>It seems like there was an error or incomplete input in your message. Please provide the Markdown text you would like translated to English.<br>50% &#123;<br>scale: 1.5;<br>opacity: 40%;<br>It seems like you have not provided any Markdown text to translate yet. Please provide the Markdown text you would like translated into English.<br>100% &#123;<br>opacity: 60%;<br>It seems like you&#39;ve provided an incomplete or incorrect Markdown text to translate. Please provide the full Markdown text you want translated into English.<br>&#125;</code></pre></div>
            </section>
      <p>And since we have already defined the keyframes, now we just need to tell CSS that we want the animation to run.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">.pulser::after &#123;<br>content: &#39;&#39;;<br>position: absolute;<br>width: 100%;<br>height: 100%;<br>top: 0;<br>left: 0;<br>background-color: blue;<br>border-radius: 50%;<br>z-index: -1;<br>    <br>animation-name: pulse;<br>animation-duration: 2s;<br>animation-timing-function: ease-in-out;<br>It seems like you might have accidentally sent an incomplete or incorrect Markdown text. Could you please provide the actual Markdown content that needs to be translated?</code></pre></div>
            </section>
      <p>Now when the page loads, it will look as if the blue circle had a heartbeat.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>But it only occurs once, to make it occur multiple times we need to add <code>animation-iteration-count</code></p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">.pulser::after &#123;<br>content: &#39;&#39;;<br>position: absolute;<br>width: 100%;<br>height: 100%;<br>top: 0;<br>left: 0;<br>background-color: blue;<br>border-radius: 50%;<br>z-index: -1;<br>    <br>animation-name: pulse;<br>animation-duration: 2s;<br>animation-timing-function: ease-in-out;<br>animation-iteration-count: infinite;<br>&#125;</code></pre></div>
            </section>
      <p>Now it will produce infinitely</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h4 id="Movement">Movement<a class="anchor-link" href="#Movement"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 180" src={svg_paths.link_svg_path}/></a></h4>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>We can make an element move</p>
      <div class='highlight'><pre><code class="language-html">&lt;div class="pulser"&gt;&lt;/div&gt;</code></pre></div>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">.wristband &#123;<br>width: 30px;<br>height: 30px;<br>background-color: blue;<br>border-radius: 50%;<br>position: relative;<br>&#125;<br><br>.pulser::after &#123;<br>content: &#39;&#39;;<br>position: absolute;<br>width: 100%;<br>height: 100%;<br>top: 0;<br>left: 0;<br>background-color: blue;<br>border-radius: 50%;<br>z-index: -1;<br>    <br>animation-name: move;<br>animation-duration: 2s;<br>animation-iteration-count: infinite;<br>animation-timing-function: linear;<br>It seems like you didn&#39;t provide any Markdown text to translate. Please provide the Markdown text you want to be translated to English.<br><br>@keyframes move &#123;<br>from &#123;<br>transform: translateX(0);<br>&#125;<br>to &#123;<br>transform: translateX(100px);<br>&#125;<br>It seems like you&#39;ve only provided a closing brace `&#125;` without any Markdown content to translate. Please provide the full text in Markdown format that you would like translated into English.</code></pre></div>
            </section>
      <p>Now the blue ball will move 100px to the right</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h4 id="Address">Address<a class="anchor-link" href="#Address"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 181" src={svg_paths.link_svg_path}/></a></h4>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>To make the blue ball move to the left, just do <code>animation-direction: reverse</code></p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">.pulser::after &#123;<br>content: &#39;&#39;;<br>position: absolute;<br>width: 100%;<br>height: 100%;<br>top: 0;<br>left: 0;<br>background-color: blue;<br>border-radius: 50%;z-index: -1;<br>    <br>animation-name: move;<br>animation-duration: 2s;<br>animation-iteration-count: infinite;<br>animation-timing-function: linear;<br>animation-direction: reverse;<br>It seems like there might be some missing content. Please provide the Markdown text you would like translated to English.</code></pre></div>
            </section>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>If we want the ball to go back and forth, we need to set <code>animation-direction: alternate</code></p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">.pulser::after &#123;<br>content: &#39;&#39;;<br>position: absolute;<br>width: 100%;<br>height: 100%;<br>top: 0;<br>left: 0;<br>background-color: blue;<br>border-radius: 50%;z-index: -1;<br>    <br>animation-name: move;<br>animation-duration: 2s;<br>animation-iteration-count: infinite;<br>animation-timing-function: linear;<br>animation-direction: alternate;<br>It seems like you&#39;ve provided an incomplete or incorrect Markdown text to translate. Could you please provide the correct Markdown text that needs translation?</code></pre></div>
            </section>
      </section>
      
      <section class="section-block-markdown-cell">
      <h4 id="Pause animations">Pause animations<a class="anchor-link" href="#Pause animations"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 182" src={svg_paths.link_svg_path}/></a></h4>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Imagine you have cards with animations; maybe you want the animation to pause when you hover over the card. For this, we can use <code>animation-play-state: paused</code>.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">.card:hover &#123;<br>animation-play-state: paused;&#125;</code></pre></div>
            </section>
      </section>
      
      <section class="section-block-markdown-cell">
      <h4 id="CSS nesting">CSS nesting<a class="anchor-link" href="#CSS nesting"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 183" src={svg_paths.link_svg_path}/></a></h4>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>We have declared in the CSS the properties of the pulser and the properties when it is hovered, but everything can be done together.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">.wristband &#123;<br>width: 30px;<br>height: 30px;<br>background-color: blue;<br>border-radius: 50%;<br>position: relative;<br>    <br>&amp;::after &#123;<br>content: &#39;&#39;;<br>position: absolute;<br>width: 100%;<br>height: 100%;<br>top: 0;<br>left: 0;<br>background-color: blue;<br>border-radius: 50%;<br>z-index: -1;<br>        <br>animation-name: move;<br>animation-duration: 2s;<br>animation-iteration-count: infinite;<br>animation-timing-function: linear;<br>animation-direction: alternate;<br>&#125;<br>    <br>&amp;:hover::after &#123;<br>animation-play-state: paused;<br>&#125;<br>It seems like you might have intended to provide a Markdown text for translation but didn&#39;t include it. Please provide the Markdown text you want translated to English, and I&#39;ll handle it for you!</code></pre></div>
            </section>
      </section>
      
      <section class="section-block-markdown-cell">
      <h4 id="How to End Animations">How to End Animations<a class="anchor-link" href="#How to End Animations"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 184" src={svg_paths.link_svg_path}/></a></h4>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>If we have an animation that only runs once, for example, the blue ball moving to the right, when the animation ends it will suddenly snap back to its initial position. To avoid this, you can use <code>animation-fill-mode: forwards</code></p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">.pulser::after &#123;<br>content: &#39;&#39;;<br>position: absolute;<br>width: 100%;<br>height: 100%;<br>top: 0;<br>left: 0;<br>background-color: blue;<br>border-radius: 50%;<br>z-index: -1;<br>    <br>animation-name: move;<br>animation-duration: 2s;<br>animation-timing-function: linear;<br>animation-direction: alternate;<br>animation-fill-mode: forwards;<br>&#125;</code></pre></div>
            </section>
      <p>This way, when the animation finishes, the blue ball will remain in the final position.</p>
      <p>If we use <code>backwards</code> instead of <code>forwards</code>, the animation will start from the final state.</p>
      <p>If we set it to <code>both</code>, the animation will start from the initial state and end at the final state.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h4 id="Everything in one line">Everything in one line<a class="anchor-link" href="#Everything in one line"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 185" src={svg_paths.link_svg_path}/></a></h4>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>We have a bunch of properties (<code>animation-name</code>, <code>animation-duration</code>, <code>animation-timing-function</code>, <code>animation-direction</code>, <code>animation-fill-mode</code>), but they can all be placed in one line. All of the above could be written like this</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">.pulser::after &#123;<br>content: &#39;&#39;;<br>position: absolute;<br>width: 100%;<br>height: 100%;<br>top: 0;<br>left: 0;background-color: blue;<br>border-radius: 50%;<br>z-index: -1;<br>    <br>animation: move 2s linear alternate forwards;<br>It seems like you&#39;ve provided an incomplete or incorrect Markdown text to translate. Could you please provide the correct Markdown text that needs translation?</code></pre></div>
            </section>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>We can create several animations</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">.pulser::after &#123;<br>content: &#39;&#39;;<br>position: absolute;<br>width: 100%;<br>height: 100%;<br>top: 0;<br>left: 0;<br>background-color: blue;<br>border-radius: 50%;<br>z-index: -1;<br>    <br>animation:<br>move 2s linear alternate forwards,<br>enlarge 1s linear 2s both;<br>&#125;</code></pre></div>
            </section>
      <p>But since the animation <code>agrandar</code> does not exist, we create it with keyframes</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">@keyframes enlarge &#123;<br>0% &#123;<br>transform: scale: 1;<br>It seems like you&#39;ve provided an incomplete or incorrect Markdown text to translate. Could you please provide the full Markdown content for translation?<br>25% &#123;<br>transform: scale: 1.5;<br>&#125;<br>50% &#123;<br>transform: scale: 2;<br>It seems like there might be some missing content in your request. Could you please provide the Markdown text you would like to have translated?<br>75% &#123;<br>transform: scale: 1.6;<br>It seems like you&#39;ve provided an incomplete or incorrect Markdown structure with just "&#125;". Please provide the full Markdown text for translation to English.<br>100% &#123;<br>transform: scale: 2;<br>It seems like there might be some missing context or content in your message. Could you please provide the Markdown text that needs to be translated?<br>It seems like you have not provided any Markdown text to translate. Could you please provide the Markdown content that needs translation?</code></pre></div>
            </section>
      <p>They will play one after the other because <code>enlarge</code> has been given a delay of 2 seconds, which is how long the first animation lasts. But if we want them to play at the same time, we need to remove the delay.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">.pulser::after &#123;<br>content: &#39;&#39;;<br>position: absolute;<br>width: 100%;<br>height: 100%;<br>top: 0;<br>left: 0;<br>background-color: blue;<br>border-radius: 50%;<br>z-index: -1;<br>    <br>animation:<br>move 2s linear alternate forwards,<br>enlarge 1s linear both;<br>&#125;</code></pre></div>
            </section>
      </section>
      
      <section class="section-block-markdown-cell">
      <h4 id="Scroll Animations">Scroll Animations<a class="anchor-link" href="#Scroll Animations"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 186" src={svg_paths.link_svg_path}/></a></h4>
      </section>
      
      <section class="section-block-markdown-cell">
      <h5 id="Example of progress bar">Example of progress bar<a class="anchor-link" href="#Example of progress bar"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 187" src={svg_paths.link_svg_path}/></a></h5>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>For example, if we want to make a bar that increases in size as we scroll down the page</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-html">&lt;section&gt;<br>&lt;div id="bar"&gt;&lt;/div&gt;<br>&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit&lt;/p&gt;<br>&lt;/p&gt;<br>&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit&lt;/p&gt;<br>&lt;/p&gt;<br>&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit&lt;/p&gt;<br>&lt;/p&gt;<br>&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit&lt;/p&gt;<br>&lt;/p&gt;<br>&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit&lt;/p&gt;<br>&lt;/p&gt;<br>&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit&lt;/p&gt;<br>&lt;/p&gt;<br>&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit&lt;/p&gt;<br>&lt;/p&gt;<br>&lt;/section&gt;</code></pre></div>
            </section>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">section &#123;<br>display: flex;<br>flex-direction: column;<br>align-items: center;<br>justify-content: center;<br>height: 100vh;<br>It seems like you might have intended to provide some Markdown text for translation but didn&#39;t include it. Could you please share the Markdown text you want translated?<br><br>#barra &#123;<br>position: fixed;<br>top: 0;<br>width: 0%;<br>background-color: red;<br>height: 1em;<br><br>animation: barra-grow auto linear;<br>animation-timeline: scroll(root block);<br>It seems like you didn&#39;t provide any Markdown text to translate. Please provide the Markdown text you want translated to English.<br><br>@keyframes barra-grow &#123;<br>from &#123;<br>width: 0%;<br>It seems like you&#39;ve provided an incomplete or incorrect Markdown text to translate. Could you please provide the full text? I&#39;ll make sure to translate it accurately while preserving its structure and style.<br>from &#123;<br>width: 100%;<br>&#125;<br>It seems like there might be a missing Markdown text to translate. Could you please provide the Markdown content that needs to be translated?</code></pre></div>
            </section>
      <p>Since we set the duration of the animation to <code>auto</code> in <code>animation</code>, the browser will look at <code>animation-timeline</code>, where we indicate that it should pay attention to the scroll. Inside the <code>scroll</code> function, we specify which element it should focus on; in our case, we've used <code>root</code> because we want the page's scroll, but any other element on the page could be specified. Additionally, we need to tell it whether to pay attention to the vertical or horizontal scroll; in our case, we've set <code>block</code> because we want it to focus on the vertical scroll (<code>block</code> is the default value, so you don't have to specify it if you want).</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h5 id="Example of a header that changes color">Example of a header that changes color<a class="anchor-link" href="#Example of a header that changes color"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 188" src={svg_paths.link_svg_path}/></a></h5>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>If we want the header to change color when we scroll</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-html">&lt;header&gt;<br>&lt;navigation&gt;<br>&lt;ul&gt;<br>&lt;li&gt;Home&lt;/li&gt;<br>&lt;li&gt;About&lt;/li&gt;<br>&lt;li&gt;Contact&lt;/li&gt;<br>&lt;/ul&gt;<br>&lt;/nav&gt;<br>&lt;/header&gt;</code></pre></div>
            </section>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">header &#123;<br>position: sticky;<br>top: 0;<br>width: 100%;<br>background-color: white;<br>box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);<br>z-index: 2;<br>animation: header-color linear both;<br>animation-timeline: scroll(root block);<br>It seems like there might be a missing markdown text to translate. Could you please provide the markdown content that needs translation?<br><br>@keyframes header-color &#123;<br>from &#123;<br>background-color: white;<br>&#125;<br>to &#123;<br>background-color: gray;<br>backdrop-filter: blur(5px);<br>color: white;<br>&#125;<br>It seems like you might have accidentally sent an incomplete request. If you provide me with the Markdown text you want translated to English, I&#39;ll be happy to help!</code></pre></div>
            </section>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>But doing it this way, the header animation only ends when you reach the end of the page, but we want it to end after a bit of scrolling. To achieve this, we remove the <code>both</code> from the <code>animation</code> and set <code>animation-range: 0 200px</code> so that the animation ends after a scroll of 200 px, meaning we are telling it that the animation goes from 0 px to 200 px.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">header &#123;<br>position: sticky;<br>top: 0;<br>width: 100%;<br>background-color: white;<br>box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);<br>z-index: 2;<br><br>animation: header-color linear;<br>animation-timeline: scroll(root);<br>animation-range: 0 200px;<br>It seems like you&#39;ve only provided a closing brace `&#125;` without any Markdown content to translate. Please provide the full text in Markdown format that you would like translated into English.</code></pre></div>
            </section>
      </section>
      
      <section class="section-block-markdown-cell">
      <h5 id="Example of image gallery">Example of image gallery<a class="anchor-link" href="#Example of image gallery"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 189" src={svg_paths.link_svg_path}/></a></h5>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Let's imagine we have a bunch of images and we want them to appear as we scroll.</p>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-html">&lt;section&gt;<br>&lt;img src="img1.jpg" alt="image 1"&gt;<br>&lt;img src="img2.jpg" alt="image 2"&gt;<br>&lt;img src="img3.jpg" alt="image 3"&gt;<br>&lt;img src="img4.jpg" alt="image 4"&gt;<br>&lt;img src="img5.jpg" alt="image 5"&gt;<br>&lt;img src="img6.jpg" alt="image 6"&gt;<br>&lt;img src="img7.jpg" alt="image 7"&gt;<br>&lt;img src="img8.jpg" alt="image 8"&gt;<br>&lt;img src="img9.jpg" alt="image 9"&gt;<br>&lt;img src="img10.jpg" alt="image 10"&gt;<br>&lt;/section&gt;</code></pre></div>
            </section>
      
      <section class="section-block-markdown-cell">
            <div class='highlight'><pre><code class="language-css">section &#123;<br>display: grid;<br>grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));<br>gap: 16px;<br>It seems like you might have intended to provide some Markdown text for translation but didn&#39;t include it. Could you please provide the text you want translated?<br><br>img &#123;<br>width: 100%;<br>height: auto;<br>opacity: 0;<br>animation: appear linear both;<br>animation-timeline: view()<br>animation-range: entry 20% cover 30%;<br>&#125;<br><br>@keyframes appear &#123;<br>from &#123;<br>opacity: 0;<br>&#125;<br>to &#123;<br>opacity: 1;<br>&#125;<br>It seems like there was an issue with your request. Could you please provide the Markdown text you want to be translated?</code></pre></div>
            </section>
      <p>With <code>animation-timeline: view()</code> we are telling it to perform the animation when the image is visible on the screen, and with <code>animation-range: entry 20% cover 30%</code> we are telling it that the animation should start when the image occupies 20% of the screen and end when it occupies 30% of the screen.</p>
      <p>By setting <code>both</code> in <code>animation</code>, we are telling it that the animation should occur both when appearing and disappearing. This means that when the image appears, the animation is visible, but when it disappears, the reverse animation is also visible, gradually changing the opacity from 1 to 0.</p>
      </section>







    </div>

  </section>

</PostLayout>
