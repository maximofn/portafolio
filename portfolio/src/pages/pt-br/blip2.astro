---
import PostLayout from '@layouts/PostLayout.astro';
import CodeBlockInputCell from '@components/CodeBlockInputCell.astro';
import CodeBlockOutputCell from '@components/CodeBlockOutputCell.astro';

const { metadata_page } = await import('@portfolio/consts.json');
const { colors } = await import('@portfolio/consts.json');
const { svg_paths } = await import('@portfolio/consts.json');

const page_title = 'Blip2';
const end_url = 'blip2';
const description = 'ü§Ø J√° imaginou poder adicionar imagens a um chat gpt e fazer perguntas sobre elas? Com o Blip2 voc√™ pode, entre e saiba como';
const keywords = 'multimodal, blip2, meta';
const languaje = 'PT';
const image_path = 'https://pub-fb664c455eca46a2ba762a065ac900f7.r2.dev/Blip2.webp';
const opening_brace = '{';
const closing_brace = '}';
---

<PostLayout 
    title={page_title}
    languaje={languaje}
    description={description}
    keywords={keywords}
    author={metadata_page.author}
    theme_color={colors.background_color}
    end_url={end_url}
    image_path={image_path}
    image_width=435
    image_height=828
    image_extension=webp
    article_date=2023-02-04+T00:00:00Z
>

  <section class="post-body">


    <aside class="post-index">
      <a class="anchor-link" href="#Introdu%C3%A7%C3%A3o"><h2>Introdu√ß√£o</h2></a>
      <a class="anchor-link" href="#Instala%C3%A7%C3%A3o"><h2>Instala√ß√£o</h2></a>
      <a class="anchor-link" href="#Uso"><h2>Uso</h2></a>
      <a class="anchor-link" href="#Analisamos-a-imagem-sem-fazer-nenhuma-pergunta"><h3>Analisamos a imagem sem fazer nenhuma pergunta</h3></a>
      <a class="anchor-link" href="#Analisamos-a-imagem-perguntando"><h3>Analisamos a imagem perguntando</h3></a>
    </aside>


    <div class="post-body-content">
      
      <section class="section-block-markdown-cell">
      <h1 id="Blip-2">Blip 2<a class="anchor-link" href="#Blip-2"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 12" src={svg_paths.link_svg_path}/></a></h1>
      </section>
      
      <section class="section-block-markdown-cell">
      <h2 id="Introdu%C3%A7%C3%A3o">Introdu√ß√£o<a class="anchor-link" href="#Introdu%C3%A7%C3%A3o"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 13" src={svg_paths.link_svg_path}/></a></h2>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Este caderno foi traduzido automaticamente para torn√°-lo acess√≠vel a mais pessoas, por favor me avise se voc√™ vir algum erro de digita√ß√£o..</p>
      <p>Blip2 √© uma intelig√™ncia artificial capaz de pegar uma imagem ou v√≠deo como entrada e ter uma conversa e responder perguntas ou fornecer contexto ao que essa entrada mostra de uma maneira muito precisa ü§Ø</p>
      <p><a href="https://github.com/salesforce/LAVIS/tree/main/projects/blip2" target="_blank" rel="nofollow noreferrer">GitHub</a></p>
      <p><a href="https://arxiv.org/abs/2301.12597" target="_blank" rel="nofollow noreferrer">Papel</a></p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h2 id="Instala%C3%A7%C3%A3o">Instala√ß√£o<a class="anchor-link" href="#Instala%C3%A7%C3%A3o"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 14" src={svg_paths.link_svg_path}/></a></h2>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>A fim de instalar esta ferramenta √© melhor criar um novo ambiente anaconda.</p>
      </section>
      
      <CodeBlockInputCell
        text={[
      '<span></span><span class="o">!</span>$<span class="w"> </span>conda<span class="w"> </span>create<span class="w"> </span>-n<span class="w"> </span>blip2<span class="w"> </span><span class="nv">python</span><span class="o">=</span><span class="m">3</span>.9',
        ]}
        languaje='python'
      ></CodeBlockInputCell>






      
      <section class="section-block-markdown-cell">
      <p>Agora vamos para o meio ambiente</p>
      </section>
      
      <CodeBlockInputCell
        text={[
      '<span></span><span class="o">!</span>$<span class="w"> </span>conda<span class="w"> </span>create<span class="w"> </span>-n<span class="w"> </span>blip2<span class="w"> </span><span class="nv">python</span><span class="o">=</span><span class="m">3</span>.9',
      '<span></span><span class="o">!</span>$<span class="w"> </span>conda<span class="w"> </span>activate<span class="w"> </span>blip2',
        ]}
        languaje='python'
      ></CodeBlockInputCell>






      
      <section class="section-block-markdown-cell">
      <p>Instalamos todos os m√≥dulos necess√°rios</p>
      </section>
      
      <CodeBlockInputCell
        text={[
      '<span></span><span class="o">!</span>$<span class="w"> </span>conda<span class="w"> </span>create<span class="w"> </span>-n<span class="w"> </span>blip2<span class="w"> </span><span class="nv">python</span><span class="o">=</span><span class="m">3</span>.9',
      '<span></span><span class="o">!</span>$<span class="w"> </span>conda<span class="w"> </span>activate<span class="w"> </span>blip2',
      '<span></span><span class="o">!</span>$<span class="w"> </span>conda<span class="w"> </span>install<span class="w"> </span>pytorch<span class="w"> </span>torchvision<span class="w"> </span>torchaudio<span class="w"> </span>pytorch-cuda<span class="o">=</span><span class="m">11</span>.7<span class="w"> </span>-c<span class="w"> </span>pytorch<span class="w"> </span>-c<span class="w"> </span>nvidia',
        ]}
        languaje='python'
      ></CodeBlockInputCell>






      
      <CodeBlockInputCell
        text={[
      '<span></span><span class="o">!</span>$<span class="w"> </span>conda<span class="w"> </span>create<span class="w"> </span>-n<span class="w"> </span>blip2<span class="w"> </span><span class="nv">python</span><span class="o">=</span><span class="m">3</span>.9',
      '<span></span><span class="o">!</span>$<span class="w"> </span>conda<span class="w"> </span>activate<span class="w"> </span>blip2',
      '<span></span><span class="o">!</span>$<span class="w"> </span>conda<span class="w"> </span>install<span class="w"> </span>pytorch<span class="w"> </span>torchvision<span class="w"> </span>torchaudio<span class="w"> </span>pytorch-cuda<span class="o">=</span><span class="m">11</span>.7<span class="w"> </span>-c<span class="w"> </span>pytorch<span class="w"> </span>-c<span class="w"> </span>nvidia',
      '<span></span><span class="o">!</span>$<span class="w"> </span>conda<span class="w"> </span>install<span class="w"> </span>-c<span class="w"> </span>anaconda<span class="w"> </span>pillow',
        ]}
        languaje='python'
      ></CodeBlockInputCell>






      
      <CodeBlockInputCell
        text={[
      '<span></span><span class="o">!</span>$<span class="w"> </span>conda<span class="w"> </span>create<span class="w"> </span>-n<span class="w"> </span>blip2<span class="w"> </span><span class="nv">python</span><span class="o">=</span><span class="m">3</span>.9',
      '<span></span><span class="o">!</span>$<span class="w"> </span>conda<span class="w"> </span>activate<span class="w"> </span>blip2',
      '<span></span><span class="o">!</span>$<span class="w"> </span>conda<span class="w"> </span>install<span class="w"> </span>pytorch<span class="w"> </span>torchvision<span class="w"> </span>torchaudio<span class="w"> </span>pytorch-cuda<span class="o">=</span><span class="m">11</span>.7<span class="w"> </span>-c<span class="w"> </span>pytorch<span class="w"> </span>-c<span class="w"> </span>nvidia',
      '<span></span><span class="o">!</span>$<span class="w"> </span>conda<span class="w"> </span>install<span class="w"> </span>-c<span class="w"> </span>anaconda<span class="w"> </span>pillow',
      '<span></span><span class="o">!</span>$<span class="w"> </span>conda<span class="w"> </span>install<span class="w"> </span>-y<span class="w"> </span>-c<span class="w"> </span>anaconda<span class="w"> </span>requests',
        ]}
        languaje='python'
      ></CodeBlockInputCell>






      
      <CodeBlockInputCell
        text={[
      '<span></span><span class="o">!</span>$<span class="w"> </span>conda<span class="w"> </span>create<span class="w"> </span>-n<span class="w"> </span>blip2<span class="w"> </span><span class="nv">python</span><span class="o">=</span><span class="m">3</span>.9',
      '<span></span><span class="o">!</span>$<span class="w"> </span>conda<span class="w"> </span>activate<span class="w"> </span>blip2',
      '<span></span><span class="o">!</span>$<span class="w"> </span>conda<span class="w"> </span>install<span class="w"> </span>pytorch<span class="w"> </span>torchvision<span class="w"> </span>torchaudio<span class="w"> </span>pytorch-cuda<span class="o">=</span><span class="m">11</span>.7<span class="w"> </span>-c<span class="w"> </span>pytorch<span class="w"> </span>-c<span class="w"> </span>nvidia',
      '<span></span><span class="o">!</span>$<span class="w"> </span>conda<span class="w"> </span>install<span class="w"> </span>-c<span class="w"> </span>anaconda<span class="w"> </span>pillow',
      '<span></span><span class="o">!</span>$<span class="w"> </span>conda<span class="w"> </span>install<span class="w"> </span>-y<span class="w"> </span>-c<span class="w"> </span>anaconda<span class="w"> </span>requests',
      '<span></span><span class="o">!</span>$<span class="w"> </span>conda<span class="w"> </span>install<span class="w"> </span>-y<span class="w"> </span>-c<span class="w"> </span>anaconda<span class="w"> </span>jupyter',
        ]}
        languaje='python'
      ></CodeBlockInputCell>






      
      <section class="section-block-markdown-cell">
      <p>Finalmente instalamos o blip2</p>
      </section>
      
      <CodeBlockInputCell
        text={[
      '<span></span><span class="o">!</span>$<span class="w"> </span>conda<span class="w"> </span>create<span class="w"> </span>-n<span class="w"> </span>blip2<span class="w"> </span><span class="nv">python</span><span class="o">=</span><span class="m">3</span>.9',
      '<span></span><span class="o">!</span>$<span class="w"> </span>conda<span class="w"> </span>activate<span class="w"> </span>blip2',
      '<span></span><span class="o">!</span>$<span class="w"> </span>conda<span class="w"> </span>install<span class="w"> </span>pytorch<span class="w"> </span>torchvision<span class="w"> </span>torchaudio<span class="w"> </span>pytorch-cuda<span class="o">=</span><span class="m">11</span>.7<span class="w"> </span>-c<span class="w"> </span>pytorch<span class="w"> </span>-c<span class="w"> </span>nvidia',
      '<span></span><span class="o">!</span>$<span class="w"> </span>conda<span class="w"> </span>install<span class="w"> </span>-c<span class="w"> </span>anaconda<span class="w"> </span>pillow',
      '<span></span><span class="o">!</span>$<span class="w"> </span>conda<span class="w"> </span>install<span class="w"> </span>-y<span class="w"> </span>-c<span class="w"> </span>anaconda<span class="w"> </span>requests',
      '<span></span><span class="o">!</span>$<span class="w"> </span>conda<span class="w"> </span>install<span class="w"> </span>-y<span class="w"> </span>-c<span class="w"> </span>anaconda<span class="w"> </span>jupyter',
      '<span></span><span class="o">!</span>$<span class="w"> </span>pip<span class="w"> </span>install<span class="w"> </span>salesforce-lavis',
        ]}
        languaje='python'
      ></CodeBlockInputCell>






      
      <section class="section-block-markdown-cell">
      <h2 id="Uso">Uso<a class="anchor-link" href="#Uso"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 15" src={svg_paths.link_svg_path}/></a></h2>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Carregamos as bibliotecas necess√°rias</p>
      </section>
      
      <CodeBlockInputCell
        text={[
      '<span></span><span class="o">!</span>$<span class="w"> </span>conda<span class="w"> </span>create<span class="w"> </span>-n<span class="w"> </span>blip2<span class="w"> </span><span class="nv">python</span><span class="o">=</span><span class="m">3</span>.9',
      '<span></span><span class="o">!</span>$<span class="w"> </span>conda<span class="w"> </span>activate<span class="w"> </span>blip2',
      '<span></span><span class="o">!</span>$<span class="w"> </span>conda<span class="w"> </span>install<span class="w"> </span>pytorch<span class="w"> </span>torchvision<span class="w"> </span>torchaudio<span class="w"> </span>pytorch-cuda<span class="o">=</span><span class="m">11</span>.7<span class="w"> </span>-c<span class="w"> </span>pytorch<span class="w"> </span>-c<span class="w"> </span>nvidia',
      '<span></span><span class="o">!</span>$<span class="w"> </span>conda<span class="w"> </span>install<span class="w"> </span>-c<span class="w"> </span>anaconda<span class="w"> </span>pillow',
      '<span></span><span class="o">!</span>$<span class="w"> </span>conda<span class="w"> </span>install<span class="w"> </span>-y<span class="w"> </span>-c<span class="w"> </span>anaconda<span class="w"> </span>requests',
      '<span></span><span class="o">!</span>$<span class="w"> </span>conda<span class="w"> </span>install<span class="w"> </span>-y<span class="w"> </span>-c<span class="w"> </span>anaconda<span class="w"> </span>jupyter',
      '<span></span><span class="o">!</span>$<span class="w"> </span>pip<span class="w"> </span>install<span class="w"> </span>salesforce-lavis',
      '<span></span><span class="kn">import</span> <span class="nn">torch</span>',
      '      <span class="kn">from</span> <span class="nn">PIL</span> <span class="kn">import</span> <span class="n">Image</span>',
      '      <span class="kn">import</span> <span class="nn">requests</span>',
      '      <span class="kn">from</span> <span class="nn">lavis.models</span> <span class="kn">import</span> <span class="n">load_model_and_preprocess</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>









      
      <section class="section-block-markdown-cell">
      <p>N√≥s carregamos uma imagem de exemplo</p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">img_url</span> <span class="o">=</span> <span class="s1">'https://upload.wikimedia.org/wikipedia/commons/thumb/4/4d/12_-_The_Mystical_King_Cobra_and_Coffee_Forests.jpg/800px-12_-_The_Mystical_King_Cobra_and_Coffee_Forests.jpg'</span>
      <span class="n">raw_image</span> <span class="o">=</span> <span class="n">Image</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">img_url</span><span class="p">,</span> <span class="n">stream</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span><span class="o">.</span><span class="n">raw</span><span class="p">)</span><span class="o">.</span><span class="n">convert</span><span class="p">(</span><span class="s1">'RGB'</span><span class="p">)</span>   
      <span class="n">display</span><span class="p">(</span><span class="n">raw_image</span><span class="o">.</span><span class="n">resize</span><span class="p">((</span><span class="mi">500</span><span class="p">,</span> <span class="mi">500</span><span class="p">)))</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt"></div>
      <div class="output-png-output-subarea">
      <img src="https://pub-fb664c455eca46a2ba762a065ac900f7.r2.dev/blip20.webp" width="500" height="500" alt="image blip2 1" loading="lazy">
      </div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Configuramos a GPU, se houver</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="o">!</span>$<span class="w"> </span>conda<span class="w"> </span>create<span class="w"> </span>-n<span class="w"> </span>blip2<span class="w"> </span><span class="nv">python</span><span class="o">=</span><span class="m">3</span>.9',
          '</span><span class="o">!</span>$<span class="w"> </span>conda<span class="w"> </span>activate<span class="w"> </span>blip2',
          '</span><span class="o">!</span>$<span class="w"> </span>conda<span class="w"> </span>install<span class="w"> </span>pytorch<span class="w"> </span>torchvision<span class="w"> </span>torchaudio<span class="w"> </span>pytorch-cuda<span class="o">=</span><span class="m">11</span>.7<span class="w"> </span>-c<span class="w"> </span>pytorch<span class="w"> </span>-c<span class="w"> </span>nvidia',
          '</span><span class="o">!</span>$<span class="w"> </span>conda<span class="w"> </span>install<span class="w"> </span>-c<span class="w"> </span>anaconda<span class="w"> </span>pillow',
          '</span><span class="o">!</span>$<span class="w"> </span>conda<span class="w"> </span>install<span class="w"> </span>-y<span class="w"> </span>-c<span class="w"> </span>anaconda<span class="w"> </span>requests',
          '</span><span class="o">!</span>$<span class="w"> </span>conda<span class="w"> </span>install<span class="w"> </span>-y<span class="w"> </span>-c<span class="w"> </span>anaconda<span class="w"> </span>jupyter',
          '</span><span class="o">!</span>$<span class="w"> </span>pip<span class="w"> </span>install<span class="w"> </span>salesforce-lavis',
          '</span><span class="kn">import</span> <span class="nn">torch</span>',
          '<span class="kn">from</span> <span class="nn">PIL</span> <span class="kn">import</span> <span class="n">Image</span>',
          '<span class="kn">import</span> <span class="nn">requests</span>',
          '<span class="kn">from</span> <span class="nn">lavis.models</span> <span class="kn">import</span> <span class="n">load_model_and_preprocess</span>',
          '</span><span class="n">img_url</span> <span class="o">=</span> <span class="s1">\'https://upload.wikimedia.org/wikipedia/commons/thumb/4/4d/12_-_The_Mystical_King_Cobra_and_Coffee_Forests.jpg/800px-12_-_The_Mystical_King_Cobra_and_Coffee_Forests.jpg\'</span>',
          '<span class="n">raw_image</span> <span class="o">=</span> <span class="n">Image</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">img_url</span><span class="p">,</span> <span class="n">stream</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span><span class="o">.</span><span class="n">raw</span><span class="p">)</span><span class="o">.</span><span class="n">convert</span><span class="p">(</span><span class="s1">\'RGB\'</span><span class="p">)</span>   ',
          '<span class="n">display</span><span class="p">(</span><span class="n">raw_image</span><span class="o">.</span><span class="n">resize</span><span class="p">((</span><span class="mi">500</span><span class="p">,</span> <span class="mi">500</span><span class="p">)))</span>',
          '</span><span class="n">device</span> <span class="o">=</span> <span class="n">torch</span><span class="o">.</span><span class="n">device</span><span class="p">(</span><span class="s2">"cuda"</span> <span class="k">if</span> <span class="n">torch</span><span class="o">.</span><span class="n">cuda</span><span class="o">.</span><span class="n">is_available</span><span class="p">()</span> <span class="k">else</span> <span class="s1">\'cpu\'</span><span class="p">)</span>',
          '<span class="n">device</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'device(type=\'cuda\')',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>N√≥s designamos um modelo. No meu caso, tenho um computador com 32 GB de RAM e uma GPU 3060 com 12 GB de VRAM que n√£o posso utilizar todos eles, por isso coloquei ao lado de um coment√°rio <code>ok</code> com os modelos que pude utilizar, e aqueles que n√£o pude utilizar, o erro que me deu. Se voc√™ tem um computador com a mesma RAM e VRAM, voc√™ j√° sabe quais voc√™ pode utilizar, se n√£o tiver que tentar</p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="c1"># name = "blip2_opt"; model_type = "pretrain_opt2.7b"           # ok</span>
      <span class="c1"># name = "blip2_opt"; model_type = "caption_coco_opt2.7b"       # FAIL VRAM</span>
      <span class="c1"># name = "blip2_opt"; model_type = "pretrain_opt6.7b"           # FAIL RAM</span>
      <span class="c1"># name = "blip2_opt"; model_type = "caption_coco_opt6.7b"       # FAIL RAM</span>
      
      <span class="c1"># name = "blip2"; model_type = "pretrain"                       # FAIL type error</span>
      <span class="c1"># name = "blip2"; model_type = "coco"                           # ok</span>
      
      <span class="n">name</span> <span class="o">=</span> <span class="s2">"blip2_t5"</span><span class="p">;</span> <span class="n">model_type</span> <span class="o">=</span> <span class="s2">"pretrain_flant5xl"</span>           <span class="c1"># ok</span>
      <span class="c1"># name = "blip2_t5"; model_type = "caption_coco_flant5xl"       # FAIL VRAM</span>
      <span class="c1"># name = "blip2_t5"; model_type = "pretrain_flant5xxl"          # FAIL</span>
      
      <span class="n">model</span><span class="p">,</span> <span class="n">vis_processors</span><span class="p">,</span> <span class="n">_</span> <span class="o">=</span> <span class="n">load_model_and_preprocess</span><span class="p">(</span>
          <span class="n">name</span><span class="o">=</span><span class="n">name</span><span class="p">,</span> <span class="n">model_type</span><span class="o">=</span><span class="n">model_type</span><span class="p">,</span> <span class="n">is_eval</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span> <span class="n">device</span><span class="o">=</span><span class="n">device</span>
      <span class="p">)</span>
      
      <span class="n">vis_processors</span><span class="o">.</span><span class="n">keys</span><span class="p">()</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt"></div>
      <div class="output-text-output-subarea">
      <pre>Loading checkpoint shards:   0%|          | 0/2 [00:00&lt;?, ?it/s]</pre>
      </div>
      </div>
      <div class="output-area">
      <div class="prompt-output-prompt">Out[4]:</div>
      <div class="output-text-output-subareaoutput_execute_result">
      <pre>dict_keys(['train', 'eval'])</pre>
      </div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>N√≥s preparamos a imagem para inser√ß√£o no modelo.</p>
      </section>
      
      <CodeBlockInputCell
        text={[
      '<span></span><span class="c1"># name = "blip2_opt"; model_type = "pretrain_opt2.7b"           # ok</span>',
      '      <span class="c1"># name = "blip2_opt"; model_type = "caption_coco_opt2.7b"       # FAIL VRAM</span>',
      '      <span class="c1"># name = "blip2_opt"; model_type = "pretrain_opt6.7b"           # FAIL RAM</span>',
      '      <span class="c1"># name = "blip2_opt"; model_type = "caption_coco_opt6.7b"       # FAIL RAM</span>',
      '      ',
      '      <span class="c1"># name = "blip2"; model_type = "pretrain"                       # FAIL type error</span>',
      '      <span class="c1"># name = "blip2"; model_type = "coco"                           # ok</span>',
      '      ',
      '      <span class="n">name</span> <span class="o">=</span> <span class="s2">"blip2_t5"</span><span class="p">;</span> <span class="n">model_type</span> <span class="o">=</span> <span class="s2">"pretrain_flant5xl"</span>           <span class="c1"># ok</span>',
      '      <span class="c1"># name = "blip2_t5"; model_type = "caption_coco_flant5xl"       # FAIL VRAM</span>',
      '      <span class="c1"># name = "blip2_t5"; model_type = "pretrain_flant5xxl"          # FAIL</span>',
      '      ',
      '      <span class="n">model</span><span class="p">,</span> <span class="n">vis_processors</span><span class="p">,</span> <span class="n">_</span> <span class="o">=</span> <span class="n">load_model_and_preprocess</span><span class="p">(</span>',
      '          <span class="n">name</span><span class="o">=</span><span class="n">name</span><span class="p">,</span> <span class="n">model_type</span><span class="o">=</span><span class="n">model_type</span><span class="p">,</span> <span class="n">is_eval</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span> <span class="n">device</span><span class="o">=</span><span class="n">device</span>',
      '      <span class="p">)</span>',
      '      ',
      '      <span class="n">vis_processors</span><span class="o">.</span><span class="n">keys</span><span class="p">()</span>',
      '<span></span><span class="n">image</span> <span class="o">=</span> <span class="n">vis_processors</span><span class="p">[</span><span class="s2">"eval"</span><span class="p">](</span><span class="n">raw_image</span><span class="p">)</span><span class="o">.</span><span class="n">unsqueeze</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span><span class="o">.</span><span class="n">to</span><span class="p">(</span><span class="n">device</span><span class="p">)</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>






      
      <section class="section-block-markdown-cell">
      <h3 id="Analisamos-a-imagem-sem-fazer-nenhuma-pergunta">Analisamos a imagem sem fazer nenhuma pergunta<a class="anchor-link" href="#Analisamos-a-imagem-sem-fazer-nenhuma-pergunta"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 16" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="c1"># name = "blip2_opt"; model_type = "pretrain_opt2.7b"           # ok</span>',
          '<span class="c1"># name = "blip2_opt"; model_type = "caption_coco_opt2.7b"       # FAIL VRAM</span>',
          '<span class="c1"># name = "blip2_opt"; model_type = "pretrain_opt6.7b"           # FAIL RAM</span>',
          '<span class="c1"># name = "blip2_opt"; model_type = "caption_coco_opt6.7b"       # FAIL RAM</span>',
          '',
          '<span class="c1"># name = "blip2"; model_type = "pretrain"                       # FAIL type error</span>',
          '<span class="c1"># name = "blip2"; model_type = "coco"                           # ok</span>',
          '',
          '<span class="n">name</span> <span class="o">=</span> <span class="s2">"blip2_t5"</span><span class="p">;</span> <span class="n">model_type</span> <span class="o">=</span> <span class="s2">"pretrain_flant5xl"</span>           <span class="c1"># ok</span>',
          '<span class="c1"># name = "blip2_t5"; model_type = "caption_coco_flant5xl"       # FAIL VRAM</span>',
          '<span class="c1"># name = "blip2_t5"; model_type = "pretrain_flant5xxl"          # FAIL</span>',
          '',
          '<span class="n">model</span><span class="p">,</span> <span class="n">vis_processors</span><span class="p">,</span> <span class="n">_</span> <span class="o">=</span> <span class="n">load_model_and_preprocess</span><span class="p">(</span>',
          '    <span class="n">name</span><span class="o">=</span><span class="n">name</span><span class="p">,</span> <span class="n">model_type</span><span class="o">=</span><span class="n">model_type</span><span class="p">,</span> <span class="n">is_eval</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span> <span class="n">device</span><span class="o">=</span><span class="n">device</span>',
          '<span class="p">)</span>',
          '',
          '<span class="n">vis_processors</span><span class="o">.</span><span class="n">keys</span><span class="p">()</span>',
          '</span><span class="n">image</span> <span class="o">=</span> <span class="n">vis_processors</span><span class="p">[</span><span class="s2">"eval"</span><span class="p">](</span><span class="n">raw_image</span><span class="p">)</span><span class="o">.</span><span class="n">unsqueeze</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span><span class="o">.</span><span class="n">to</span><span class="p">(</span><span class="n">device</span><span class="p">)</span>',
          '</span><span class="n">model</span><span class="o">.</span><span class="n">generate</span><span class="p">({</span><span class="s2">"image"</span><span class="p">:</span> <span class="n">image</span><span class="p">})</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'Loading checkpoint shards:   0%|          | 0/2 [00:00&lt;?, ?it/s]',
          '[\'a black and white snake\']',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <h3 id="Analisamos-a-imagem-perguntando">Analisamos a imagem perguntando<a class="anchor-link" href="#Analisamos-a-imagem-perguntando"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 17" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <CodeBlockInputCell
        text={[
      '<span></span><span class="n">prompt</span> <span class="o">=</span> <span class="kc">None</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>






      
      <CodeBlockInputCell
        text={[
      '<span></span><span class="n">prompt</span> <span class="o">=</span> <span class="kc">None</span>',
      '<span></span><span class="k">def</span> <span class="nf">prepare_prompt</span><span class="p">(</span><span class="n">prompt</span><span class="p">,</span> <span class="n">question</span><span class="p">):</span>',
      '          <span class="k">if</span> <span class="n">prompt</span> <span class="ow">is</span> <span class="kc">None</span><span class="p">:</span>',
      '              <span class="n">prompt</span> <span class="o">=</span> <span class="n">question</span> <span class="o">+</span> <span class="s2">" Answer:"</span>',
      '          <span class="k">else</span><span class="p">:</span>',
      '              <span class="n">prompt</span> <span class="o">=</span> <span class="n">prompt</span> <span class="o">+</span> <span class="s2">" "</span> <span class="o">+</span> <span class="n">question</span> <span class="o">+</span> <span class="s2">" Answer:"</span>',
      '          <span class="k">return</span> <span class="n">prompt</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>











      
      <CodeBlockInputCell
        text={[
      '<span></span><span class="n">prompt</span> <span class="o">=</span> <span class="kc">None</span>',
      '<span></span><span class="k">def</span> <span class="nf">prepare_prompt</span><span class="p">(</span><span class="n">prompt</span><span class="p">,</span> <span class="n">question</span><span class="p">):</span>',
      '          <span class="k">if</span> <span class="n">prompt</span> <span class="ow">is</span> <span class="kc">None</span><span class="p">:</span>',
      '              <span class="n">prompt</span> <span class="o">=</span> <span class="n">question</span> <span class="o">+</span> <span class="s2">" Answer:"</span>',
      '          <span class="k">else</span><span class="p">:</span>',
      '              <span class="n">prompt</span> <span class="o">=</span> <span class="n">prompt</span> <span class="o">+</span> <span class="s2">" "</span> <span class="o">+</span> <span class="n">question</span> <span class="o">+</span> <span class="s2">" Answer:"</span>',
      '          <span class="k">return</span> <span class="n">prompt</span>',
      '<span></span><span class="k">def</span> <span class="nf">get_answer</span><span class="p">(</span><span class="n">prompt</span><span class="p">,</span> <span class="n">question</span><span class="p">,</span> <span class="n">model</span><span class="p">):</span>',
      '          <span class="n">prompt</span> <span class="o">=</span> <span class="n">prepare_prompt</span><span class="p">(</span><span class="n">prompt</span><span class="p">,</span> <span class="n">question</span><span class="p">)</span>',
      '          <span class="n">answer</span> <span class="o">=</span> <span class="n">model</span><span class="o">.</span><span class="n">generate</span><span class="p">(</span>',
      '              <span class="p">{</span>',
      '                  <span class="s2">"image"</span><span class="p">:</span> <span class="n">image</span><span class="p">,</span>',
      '                  <span class="s2">"prompt"</span><span class="p">:</span> <span class="n">prompt</span>',
      '              <span class="p">}</span>',
      '          <span class="p">)</span>',
      '          <span class="n">answer</span> <span class="o">=</span> <span class="n">answer</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>',
      '          <span class="n">prompt</span> <span class="o">=</span> <span class="n">prompt</span> <span class="o">+</span> <span class="s2">" "</span> <span class="o">+</span> <span class="n">answer</span> <span class="o">+</span> <span class="s2">"."</span>',
      '          <span class="k">return</span> <span class="n">prompt</span><span class="p">,</span> <span class="n">answer</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
















      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="n">prompt</span> <span class="o">=</span> <span class="kc">None</span>',
          '</span><span class="k">def</span> <span class="nf">prepare_prompt</span><span class="p">(</span><span class="n">prompt</span><span class="p">,</span> <span class="n">question</span><span class="p">):</span>',
          '    <span class="k">if</span> <span class="n">prompt</span> <span class="ow">is</span> <span class="kc">None</span><span class="p">:</span>',
          '        <span class="n">prompt</span> <span class="o">=</span> <span class="n">question</span> <span class="o">+</span> <span class="s2">" Answer:"</span>',
          '    <span class="k">else</span><span class="p">:</span>',
          '        <span class="n">prompt</span> <span class="o">=</span> <span class="n">prompt</span> <span class="o">+</span> <span class="s2">" "</span> <span class="o">+</span> <span class="n">question</span> <span class="o">+</span> <span class="s2">" Answer:"</span>',
          '    <span class="k">return</span> <span class="n">prompt</span>',
          '</span><span class="k">def</span> <span class="nf">get_answer</span><span class="p">(</span><span class="n">prompt</span><span class="p">,</span> <span class="n">question</span><span class="p">,</span> <span class="n">model</span><span class="p">):</span>',
          '    <span class="n">prompt</span> <span class="o">=</span> <span class="n">prepare_prompt</span><span class="p">(</span><span class="n">prompt</span><span class="p">,</span> <span class="n">question</span><span class="p">)</span>',
          '    <span class="n">answer</span> <span class="o">=</span> <span class="n">model</span><span class="o">.</span><span class="n">generate</span><span class="p">(</span>',
          '        <span class="p">{</span>',
          '            <span class="s2">"image"</span><span class="p">:</span> <span class="n">image</span><span class="p">,</span>',
          '            <span class="s2">"prompt"</span><span class="p">:</span> <span class="n">prompt</span>',
          '        <span class="p">}</span>',
          '    <span class="p">)</span>',
          '    <span class="n">answer</span> <span class="o">=</span> <span class="n">answer</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>',
          '    <span class="n">prompt</span> <span class="o">=</span> <span class="n">prompt</span> <span class="o">+</span> <span class="s2">" "</span> <span class="o">+</span> <span class="n">answer</span> <span class="o">+</span> <span class="s2">"."</span>',
          '    <span class="k">return</span> <span class="n">prompt</span><span class="p">,</span> <span class="n">answer</span>',
          '</span><span class="n">question</span> <span class="o">=</span> <span class="s2">"What\'s in the picture?"</span>',
          '<span class="n">prompt</span><span class="p">,</span> <span class="n">answer</span> <span class="o">=</span> <span class="n">get_answer</span><span class="p">(</span><span class="n">prompt</span><span class="p">,</span> <span class="n">question</span><span class="p">,</span> <span class="n">model</span><span class="p">)</span>',
          '<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"Question: </span><span class="si">{</span><span class="n">question</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>',
          '<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"Answer: </span><span class="si">{</span><span class="n">answer</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'Question: What\'s in the picture?',
          'Answer: a snake',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="n">question</span> <span class="o">=</span> <span class="s2">"What kind of snake?"</span>',
          '<span class="n">prompt</span><span class="p">,</span> <span class="n">answer</span> <span class="o">=</span> <span class="n">get_answer</span><span class="p">(</span><span class="n">prompt</span><span class="p">,</span> <span class="n">question</span><span class="p">,</span> <span class="n">model</span><span class="p">)</span>',
          '<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"Question: </span><span class="si">{</span><span class="n">question</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>',
          '<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"Answer: </span><span class="si">{</span><span class="n">answer</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'Question: What kind of snake?',
          'Answer: cobra',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="n">question</span> <span class="o">=</span> <span class="s2">"Is it poisonous?"</span>',
          '<span class="n">prompt</span><span class="p">,</span> <span class="n">answer</span> <span class="o">=</span> <span class="n">get_answer</span><span class="p">(</span><span class="n">prompt</span><span class="p">,</span> <span class="n">question</span><span class="p">,</span> <span class="n">model</span><span class="p">)</span>',
          '<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"Question: </span><span class="si">{</span><span class="n">question</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>',
          '<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"Answer: </span><span class="si">{</span><span class="n">answer</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'Question: Is it poisonous?',
          'Answer: yes',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="n">question</span> <span class="o">=</span> <span class="s2">"If it bites me, can I die?"</span>',
          '<span class="n">prompt</span><span class="p">,</span> <span class="n">answer</span> <span class="o">=</span> <span class="n">get_answer</span><span class="p">(</span><span class="n">prompt</span><span class="p">,</span> <span class="n">question</span><span class="p">,</span> <span class="n">model</span><span class="p">)</span>',
          '<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"Question: </span><span class="si">{</span><span class="n">question</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>',
          '<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"Answer: </span><span class="si">{</span><span class="n">answer</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'Question: If it bites me, can I die?',
          'Answer: yes',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      






    </div>

  </section>

</PostLayout>
