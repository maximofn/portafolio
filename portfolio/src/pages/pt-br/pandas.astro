---
import PostLayout from '@layouts/PostLayout.astro';
import CodeBlockInputCell from '@components/CodeBlockInputCell.astro';
import CodeBlockOutputCell from '@components/CodeBlockOutputCell.astro';

const { metadata_page } = await import('@portfolio/consts.json');
const { colors } = await import('@portfolio/consts.json');
const { svg_paths } = await import('@portfolio/consts.json');

const page_title = 'Gerenciamento de dados com Pandas';
const end_url = 'pandas';
const description = 'üìä Gerenciar dados üìù facilmente com Pandas üìñ';
const keywords = 'pandas, dados, an√°lise de dados, manipula√ß√£o de dados, limpeza de dados, visualiza√ß√£o de dados';
const languaje = 'PT';
const image_path = 'https://pub-fb664c455eca46a2ba762a065ac900f7.r2.dev/pandas-icon.webp';
const opening_brace = '{';
const closing_brace = '}';
---

<PostLayout 
    title={page_title}
    languaje={languaje}
    description={description}
    keywords={keywords}
    author={metadata_page.author}
    theme_color={colors.background_color}
    end_url={end_url}
    image_path={image_path}
    image_width=900
    image_height=364
    image_extension=webp
    article_date=2021-06-15+T00:00:00Z
>

  <section class="post-body">


    <aside class="post-index">
      <a class="anchor-link" href="#1.-Resumo"><h2>1. Resumo</h2></a>
      <a class="anchor-link" href="#2.-O-que-%C3%A9-o-Pandas?"><h2>2. O que √© o Pandas?</h2></a>
      <a class="anchor-link" href="#2.1.-Pandas-como-pd"><h3>2.1. Pandas como <code>pd</code></h3></a>
      <a class="anchor-link" href="#3.-Estruturas-de-dados-do-Pandas"><h2>3. Estruturas de dados do Pandas</h2></a>
      <a class="anchor-link" href="#3.1.-S%C3%A9ries"><h3>3.1. S√©ries</h3></a>
      <a class="anchor-link" href="#3.1.1.-S%C3%A9ries-a-partir-de-um-dicion%C3%A1rio"><h4>3.1.1. S√©ries a partir de um dicion√°rio</h4></a>
      <a class="anchor-link" href="#3.1.2.-S%C3%A9ries-a-partir-de-uma-lista-ou-tupla"><h4>3.1.2. S√©ries a partir de uma lista ou tupla</h4></a>
      <a class="anchor-link" href="#3.1.3.-S%C3%A9ries-a-partir-de-um-ndarray"><h4>3.1.3. S√©ries a partir de um ndarray</h4></a>
      <a class="anchor-link" href="#3.1.4.-S%C3%A9ries-a-partir-de-um-escalar"><h4>3.1.4. S√©ries a partir de um escalar</h4></a>
      <a class="anchor-link" href="#3.1.5.-Opera%C3%A7%C3%B5es-com-S%C3%A9ries"><h4>3.1.5. Opera√ß√µes com S√©ries</h4></a>
      <a class="anchor-link" href="#3.1.6.-Atributo-nome-das-S%C3%A9ries"><h4>3.1.6. Atributo nome das S√©ries</h4></a>
      <a class="anchor-link" href="#3.2.-DataFrames"><h3>3.2. DataFrames</h3></a>
      <a class="anchor-link" href="#3.2.1.-DataFrames-a-partir-de-um-dicion%C3%A1rio-de-Series"><h4>3.2.1. DataFrames a partir de um dicion√°rio de Series</h4></a>
      <a class="anchor-link" href="#3.2.2.-DataFrames-a-partir-de-um-dicion%C3%A1rio-de-ndarrays-ou-listas"><h4>3.2.2. DataFrames a partir de um dicion√°rio de ndarrays ou listas</h4></a>
      <a class="anchor-link" href="#3.2.3.-DataFrames-a-partir-de-uma-matriz"><h4>3.2.3. DataFrames a partir de uma matriz</h4></a>
      <a class="anchor-link" href="#3.2.4.-DataFrames-a-partir-de-uma-lista-de-dicion%C3%A1rios"><h4>3.2.4. DataFrames a partir de uma lista de dicion√°rios</h4></a>
      <a class="anchor-link" href="#3.2.5.-DataFrames-a-partir-de-um-dicion%C3%A1rio-de-tuplas"><h4>3.2.5. DataFrames a partir de um dicion√°rio de tuplas</h4></a>
      <a class="anchor-link" href="#3.2.6.-DataFrames-a-partir-de-uma-S%C3%A9rie"><h4>3.2.6. DataFrames a partir de uma S√©rie</h4></a>
      <a class="anchor-link" href="#4.-Explora%C3%A7%C3%A3o-de-um-DataFrame"><h2>4. Explora√ß√£o de um DataFrame</h2></a>
      <a class="anchor-link" href="#4.1.-Cabe%C3%A7a-do-DataFrame"><h3>4.1. Cabe√ßa do DataFrame</h3></a>
      <a class="anchor-link" href="#4.2.-Cauda-do-DataFrame"><h3>4.2. Cauda do DataFrame</h3></a>
      <a class="anchor-link" href="#4.3.-Informa%C3%A7%C3%A3o-do-DataFrame"><h3>4.3. Informa√ß√£o do DataFrame</h3></a>
      <a class="anchor-link" href="#4.4.-Linhas-e-Colunas-do-DataFrame"><h3>4.4. Linhas e Colunas do DataFrame</h3></a>
      <a class="anchor-link" href="#4.5.-Descri%C3%A7%C3%A3o-do-DataFrame"><h3>4.5. Descri√ß√£o do DataFrame</h3></a>
      <a class="anchor-link" href="#4.6.-Ordena%C3%A7%C3%A3o-do-DataFrame"><h3>4.6. Ordena√ß√£o do <code>DataFrame</code></h3></a>
      <a class="anchor-link" href="#4.7.-Estat%C3%ADsticas-do-DataFrame"><h3>4.7. Estat√≠sticas do DataFrame</h3></a>
      <a class="anchor-link" href="#4.8.-Mem%C3%B3ria-usada"><h3>4.8. Mem√≥ria usada</h3></a>
      <a class="anchor-link" href="#5.-Adi%C3%A7%C3%A3o-de-dados"><h2>5. Adi√ß√£o de dados</h2></a>
      <a class="anchor-link" href="#5.1.-Adi%C3%A7%C3%A3o-de-colunas"><h3>5.1. Adi√ß√£o de colunas</h3></a>
      <a class="anchor-link" href="#5.2.-Adi%C3%A7%C3%A3o-de-linhas"><h3>5.2. Adi√ß√£o de linhas</h3></a>
      <a class="anchor-link" href="#6.-Elimina%C3%A7ao-de-dados"><h2>6. Elimina√ßao de dados</h2></a>
      <a class="anchor-link" href="#6.1.-Elimina%C3%A7%C3%A3o-de-colunas"><h3>6.1. Elimina√ß√£o de colunas</h3></a>
      <a class="anchor-link" href="#6.1.-Elimina%C3%A7%C3%A3o-de-linhas"><h3>6.1. Elimina√ß√£o de linhas</h3></a>
      <a class="anchor-link" href="#7.-Opera%C3%A7%C3%B5es-sobre-DataFrames"><h2>7. Opera√ß√µes sobre DataFrames</h2></a>
      <a class="anchor-link" href="#8.-Transposta"><h2>8. Transposta</h2></a>
      <a class="anchor-link" href="#9.-Convers%C3%A3o-para-Numpy"><h2>9. Convers√£o para Numpy</h2></a>
      <a class="anchor-link" href="#10.-Leitura-de-dados-de-fontes-externas"><h2>10. Leitura de dados de fontes externas</h2></a>
      <a class="anchor-link" href="#11.-Indexa%C3%A7%C3%A3o-em-DataFrames"><h2>11. Indexa√ß√£o em DataFrames</h2></a>
      <a class="anchor-link" href="#11.1.-Indexa%C3%A7%C3%A3o-de-colunas"><h3>11.1. Indexa√ß√£o de colunas</h3></a>
      <a class="anchor-link" href="#11.2.-Indexa%C3%A7%C3%A3o-de-linhas-por-posi%C3%A7%C3%B5es"><h3>11.2. Indexa√ß√£o de linhas por posi√ß√µes</h3></a>
      <a class="anchor-link" href="#11.3.-Indexa%C3%A7%C3%A3o-de-linhas-por-r%C3%B3tulos"><h3>11.3. Indexa√ß√£o de linhas por r√≥tulos</h3></a>
      <a class="anchor-link" href="#11.4.-Sele%C3%A7%C3%A3o-de-uma-por%C3%A7%C3%A3o-do-DataFrame-por-posi%C3%A7%C3%B5es"><h3>11.4. Sele√ß√£o de uma por√ß√£o do DataFrame por posi√ß√µes</h3></a>
      <a class="anchor-link" href="#11.5.-Sele%C3%A7%C3%A3o-de-uma-por%C3%A7%C3%A3o-do-DataFrame-por-meio-de-r%C3%B3tulos"><h3>11.5. Sele√ß√£o de uma por√ß√£o do DataFrame por meio de r√≥tulos</h3></a>
      <a class="anchor-link" href="#11.6.-Indexa%C3%A7%C3%A3o-por-fun%C3%A7%C3%A3o-lambda"><h3>11.6. Indexa√ß√£o por fun√ß√£o lambda</h3></a>
      <a class="anchor-link" href="#11.7.-Indexa%C3%A7%C3%A3o-condicional"><h3>11.7. Indexa√ß√£o condicional</h3></a>
      <a class="anchor-link" href="#11.8.-Indexa%C3%A7%C3%A3o-aleat%C3%B3ria"><h3>11.8. Indexa√ß√£o aleat√≥ria</h3></a>
      <a class="anchor-link" href="#12.-Jun%C3%A7%C3%A3o-de-DataFrames"><h2>12. Jun√ß√£o de DataFrames</h2></a>
      <a class="anchor-link" href="#12.1.-Concatena%C3%A7%C3%A3o-de-DataFrames"><h3>12.1. Concatena√ß√£o de DataFrames</h3></a>
      <a class="anchor-link" href="#12.1.1.-Interse%C3%A7%C3%A3o-de-concatena%C3%A7%C3%A3o"><h4>12.1.1. Interse√ß√£o de concatena√ß√£o</h4></a>
      <a class="anchor-link" href="#12.2.-Merge-de-DataFrames"><h3>12.2. <code>Merge</code> de DataFrames</h3></a>
      <a class="anchor-link" href="#12.3.-Join-de-dataframes"><h3>12.3. <code>Join</code> de dataframes</h3></a>
      <a class="anchor-link" href="#13.-Dados-faltantes-(NaN)"><h2>13. Dados faltantes (<code>NaN</code>)</h2></a>
      <a class="anchor-link" href="#13.1.-Elimina%C3%A7%C3%A3o-das-linhas-com-dados-faltantes"><h3>13.1. Elimina√ß√£o das linhas com dados faltantes</h3></a>
      <a class="anchor-link" href="#13.2.-Elimina%C3%A7%C3%A3o-das-colunas-com-dados-faltantes"><h3>13.2. Elimina√ß√£o das colunas com dados faltantes</h3></a>
      <a class="anchor-link" href="#13.3.-M%C3%A1scara-booleana-com-as-posi%C3%A7%C3%B5es-faltantes"><h3>13.3. M√°scara booleana com as posi√ß√µes faltantes</h3></a>
      <a class="anchor-link" href="#13.4.-Preenchimento-dos-dados-ausentes"><h3>13.4. Preenchimento dos dados ausentes</h3></a>
      <a class="anchor-link" href="#14.-S%C3%A9ries-Temporais"><h2>14. S√©ries Temporais</h2></a>
      <a class="anchor-link" href="#15.-Dados-categ%C3%B3ricos"><h2>15. Dados categ√≥ricos</h2></a>
      <a class="anchor-link" href="#16.-Groupby"><h2>16. Groupby</h2></a>
      <a class="anchor-link" href="#17.-Gr%C3%A1ficos"><h2>17. Gr√°ficos</h2></a>
      <a class="anchor-link" href="#17.1.-Gr%C3%A1fico-b%C3%A1sico"><h3>17.1. Gr√°fico b√°sico</h3></a>
      <a class="anchor-link" href="#17.2.-Diagrama-de-barras-verticais"><h3>17.2. Diagrama de barras verticais</h3></a>
      <a class="anchor-link" href="#17.3.-Diagrama-de-barras-horizontal"><h3>17.3. Diagrama de barras horizontal</h3></a>
      <a class="anchor-link" href="#17.4.-Histograma"><h3>17.4. Histograma</h3></a>
      <a class="anchor-link" href="#17.5.-Diagramas-de-Velas"><h3>17.5. Diagramas de Velas</h3></a>
      <a class="anchor-link" href="#17.6.-Gr%C3%A1ficos-de-%C3%A1reas"><h3>17.6. Gr√°ficos de √°reas</h3></a>
      <a class="anchor-link" href="#17.7.-Diagrama-de-dispers%C3%A3o"><h3>17.7. Diagrama de dispers√£o</h3></a>
      <a class="anchor-link" href="#17.8.-Gr%C3%A1fico-de-cont%C3%AAiner-hexagonal"><h3>17.8. Gr√°fico de cont√™iner hexagonal</h3></a>
    </aside>


    <div class="post-body-content">
      
      <section class="section-block-markdown-cell">
      <h1 id="Manipula%C3%A7%C3%A3o-de-dados-com-Pandas">Manipula√ß√£o de dados com Pandas<a class="anchor-link" href="#Manipula%C3%A7%C3%A3o-de-dados-com-Pandas"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 138" src={svg_paths.link_svg_path}/></a></h1>
      </section>
      
      <section class="section-block-markdown-cell">
      <blockquote>
      <p>Aviso: Este post foi traduzido para o portugu√™s usando um modelo de tradu√ß√£o autom√°tica. Por favor, me avise se encontrar algum erro.</p>
      </blockquote>
      </section>
      
      <section class="section-block-markdown-cell">
      <h2 id="1.-Resumo">1. Resumo<a class="anchor-link" href="#1.-Resumo"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 139" src={svg_paths.link_svg_path}/></a></h2>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Vamos dar uma pequena introdu√ß√£o √† biblioteca de manipula√ß√£o e an√°lise de dados <code>Pandas</code>. Com ela, poderemos manipular e processar dados tabulares que nos ajudar√° a operar com eles e obter informa√ß√µes de maneira muito valiosa.</p>
      <p align="center">
      <img decoding="async" onerror="this.parentNode.removeChild(this)" alt="No description has been provided for this image" src="https://pub-fb664c455eca46a2ba762a065ac900f7.r2.dev/pandas-icon.webp" width="900" height="364"/>
      </p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h2 id="2.-O-que-%C3%A9-o-Pandas?">2. O que √© o Pandas?<a class="anchor-link" href="#2.-O-que-%C3%A9-o-Pandas?"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 140" src={svg_paths.link_svg_path}/></a></h2>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Pandas √© uma biblioteca de <strong>Python</strong> projetada para tornar o trabalho com dados <em>relacionais</em> ou <em>rotulados</em> f√°cil e intuitivo.</p>
      <p>Pandas est√° projetado para muitos tipos diferentes de dados:</p>
      <ul>
      <li>Dados tabulares com colunas de tipos heterog√™neos, como em uma tabela SQL ou uma planilha do Excel</li>
      <li>Dados de s√©ries temporais ordenados e desordenados (n√£o necessariamente de frequ√™ncia fixa).</li>
      <li>Dados matriciais arbitr√°rios (homog√™neos ou heterog√™neos) com r√≥tulos de linha e coluna</li>
      <li>Qualquer outra forma de conjuntos de dados observacionais/estat√≠sticos. N√£o √© necess√°rio rotular os dados em absoluto para coloc√°-los em uma estrutura de dados do Pandas.</li>
      </ul>
      <p>As duas estruturas de dados principais do Pandas s√£o as <code>Serie</code>s (unidimensionais) e os <code>DataFrame</code>s (bidimensionais). O Pandas √© constru√≠do sobre o NumPy e √© destinado a se integrar bem em um ambiente computacional cient√≠fico com muitas outras bibliotecas de terceiros.</p>
      <p>Para os cientistas de dados, o trabalho com dados geralmente se divide em v√°rias etapas: coletar e limpar dados, analis√°-los/model√°-los e, em seguida, organizar os resultados da an√°lise de uma forma adequada para plot√°-los ou exibi-los em formato de tabela. pandas √© a ferramenta ideal para todas essas tarefas.</p>
      <p>Outra caracter√≠stica √© que o pandas √© r√°pido, muitos dos algoritmos de baixo n√≠vel foram constru√≠dos em <code>C</code>.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="2.1.-Pandas-como-pd">2.1. Pandas como <code>pd</code><a class="anchor-link" href="#2.1.-Pandas-como-pd"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 141" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Geralmente na hora de importar pandas costuma-se importar com o alias de <code>pd</code></p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>',
          '',
          '<span class="nb">print</span><span class="p">(</span><span class="n">pd</span><span class="o">.</span><span class="n">__version__</span><span class="p">)</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          '1.0.1',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <h2 id="3.-Estruturas-de-dados-do-Pandas">3. Estruturas de dados do Pandas<a class="anchor-link" href="#3.-Estruturas-de-dados-do-Pandas"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 142" src={svg_paths.link_svg_path}/></a></h2>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Em Pandas existem dois tipos de estruturas de dados: as <code>Serie</code>s e os <code>DataFrame</code>s</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="3.1.-S%C3%A9ries">3.1. S√©ries<a class="anchor-link" href="#3.1.-S%C3%A9ries"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 143" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>O tipo de dado <code>Serie</code> √© uma matriz unidimensional rotulada capaz de conter qualquer tipo de dados (inteiros, strings, n√∫meros de ponto flutuante, objetos Python, etc.). Ela √© dividida em √≠ndices.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Para criar um tipo de dado <code>Serie</code> a forma mais comum √©</p>
      <div class="highlight"><pre><span></span><span class="n">serie</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="n">index</span><span class="o">=</span><span class="n">index</span><span class="p">)</span>
      </pre></div>
      <p>Onde <code>data</code> pode ser:</p>
      <ul>
      <li>Um dicion√°rio</li>
      <li>Uma lista ou tupla</li>
      <li>Um <code>ndarray</code> do Numpy</li>
      <li>Um valor escalar</li>
      </ul>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Como um dos tipos de dados pode ser um <code>ndarray</code> do NumPy, importamos o NumPy para poder us√°-lo</p>
      </section>
      
      <CodeBlockInputCell
        text={[
      '<span></span><span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="nn">np</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>






      
      <section class="section-block-markdown-cell">
      <h4 id="3.1.1.-S%C3%A9ries-a-partir-de-um-dicion%C3%A1rio">3.1.1. S√©ries a partir de um dicion√°rio<a class="anchor-link" href="#3.1.1.-S%C3%A9ries-a-partir-de-um-dicion%C3%A1rio"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 144" src={svg_paths.link_svg_path}/></a></h4>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="n">diccionario</span> <span class="o">=</span> <span class="p">{</span><span class="s2">"b"</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s2">"a"</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="s2">"c"</span><span class="p">:</span> <span class="mi">2</span><span class="p">}</span>',
          '',
          '<span class="n">serie</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">(</span><span class="n">diccionario</span><span class="p">)</span>',
          '<span class="n">serie</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'b    1',
          'a    0',
          'c    2',
          'dtype: int64',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Se passar um √≠ndice, ser√£o extra√≠dos os valores dos dados correspondentes √†s tags do √≠ndice. Se n√£o existirem, s√£o criados como <code>NaN</code> (not a number).</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="n">diccionario</span> <span class="o">=</span> <span class="p">{</span><span class="s2">"b"</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s2">"a"</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="s2">"c"</span><span class="p">:</span> <span class="mi">2</span><span class="p">}</span>',
          '',
          '<span class="n">serie</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">(</span><span class="n">diccionario</span><span class="p">,</span> <span class="n">index</span><span class="o">=</span><span class="p">[</span><span class="s2">"b"</span><span class="p">,</span> <span class="s2">"c"</span><span class="p">,</span> <span class="s2">"d"</span><span class="p">,</span> <span class="s2">"a"</span><span class="p">])</span>',
          '<span class="n">serie</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'b    1.0',
          'c    2.0',
          'd    NaN',
          'a    0.0',
          'dtype: float64',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <h4 id="3.1.2.-S%C3%A9ries-a-partir-de-uma-lista-ou-tupla">3.1.2. S√©ries a partir de uma lista ou tupla<a class="anchor-link" href="#3.1.2.-S%C3%A9ries-a-partir-de-uma-lista-ou-tupla"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 145" src={svg_paths.link_svg_path}/></a></h4>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Se os dados v√™m de uma lista ou tupla e nenhum √≠ndice √© passado, um ser√° criado com valores [0, ..., len(dados)-1]</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="n">serie</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">])</span>',
          '<span class="n">serie</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          '0    1',
          '1    2',
          '2    3',
          '3    4',
          'dtype: int64',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Se um √≠ndice for passado, ele deve ter o mesmo comprimento que os dados</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="n">serie</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">],</span> <span class="n">index</span><span class="o">=</span><span class="p">[</span><span class="s2">"a"</span><span class="p">,</span> <span class="s2">"b"</span><span class="p">,</span> <span class="s2">"c"</span><span class="p">,</span> <span class="s2">"d"</span><span class="p">])</span>',
          '<span class="n">serie</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'a    1',
          'b    2',
          'c    3',
          'd    4',
          'dtype: int64',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <h4 id="3.1.3.-S%C3%A9ries-a-partir-de-um-ndarray">3.1.3. S√©ries a partir de um ndarray<a class="anchor-link" href="#3.1.3.-S%C3%A9ries-a-partir-de-um-ndarray"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 146" src={svg_paths.link_svg_path}/></a></h4>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Se os dados v√™m de um <code>ndarray</code> e nenhum √≠ndice √© passado, ser√° criado um com valores <code>[0, ..., len(data)-1]</code>.</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="n">serie</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">randn</span><span class="p">(</span><span class="mi">5</span><span class="p">))</span>',
          '<span class="n">serie</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          '0    1.267865',
          '1   -0.877857',
          '2   -0.138556',
          '3   -0.132987',
          '4   -0.827295',
          'dtype: float64',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Se um √≠ndice for passado, ele deve ter o mesmo comprimento que os dados</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="n">serie</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">randn</span><span class="p">(</span><span class="mi">5</span><span class="p">),</span> <span class="n">index</span><span class="o">=</span><span class="p">[</span><span class="s2">"a"</span><span class="p">,</span> <span class="s2">"b"</span><span class="p">,</span> <span class="s2">"c"</span><span class="p">,</span> <span class="s2">"d"</span><span class="p">,</span> <span class="s2">"e"</span><span class="p">])</span>',
          '<span class="n">serie</span> ',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'a   -1.091828',
          'b   -0.584243',
          'c    0.220398',
          'd    1.248923',
          'e    1.652351',
          'dtype: float64',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <h4 id="3.1.4.-S%C3%A9ries-a-partir-de-um-escalar">3.1.4. S√©ries a partir de um escalar<a class="anchor-link" href="#3.1.4.-S%C3%A9ries-a-partir-de-um-escalar"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 147" src={svg_paths.link_svg_path}/></a></h4>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Se a s√©rie for criada a partir de um escalar, ela ser√° criada com um √∫nico item</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="n">serie</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">(</span><span class="mf">5.0</span><span class="p">)</span>',
          '<span class="n">serie</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          '0    5.0',
          'dtype: float64',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Se quiser criar mais itens na s√©rie, √© necess√°rio passar o √≠ndice com o n√∫mero de itens desejados, desta forma todos os itens ter√£o o valor do escalar</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="n">serie</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">(</span><span class="mf">5.0</span><span class="p">,</span> <span class="n">index</span><span class="o">=</span><span class="p">[</span><span class="s2">"a"</span><span class="p">,</span> <span class="s2">"b"</span><span class="p">,</span> <span class="s2">"c"</span><span class="p">,</span> <span class="s2">"d"</span><span class="p">,</span> <span class="s2">"e"</span><span class="p">])</span>',
          '<span class="n">serie</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'a    5.0',
          'b    5.0',
          'c    5.0',
          'd    5.0',
          'e    5.0',
          'dtype: float64',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <h4 id="3.1.5.-Opera%C3%A7%C3%B5es-com-S%C3%A9ries">3.1.5. Opera√ß√µes com S√©ries<a class="anchor-link" href="#3.1.5.-Opera%C3%A7%C3%B5es-com-S%C3%A9ries"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 148" src={svg_paths.link_svg_path}/></a></h4>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Assim como com o Numpy, podemos realizar opera√ß√µes com todos os elementos de uma s√©rie, sem ter que fazer uma itera√ß√£o para cada um deles.</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="n">serie</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">(</span><span class="mf">5.0</span><span class="p">,</span> <span class="n">index</span><span class="o">=</span><span class="p">[</span><span class="s2">"a"</span><span class="p">,</span> <span class="s2">"b"</span><span class="p">,</span> <span class="s2">"c"</span><span class="p">,</span> <span class="s2">"d"</span><span class="p">,</span> <span class="s2">"e"</span><span class="p">])</span>',
          '<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"serie:</span><span class="se">\\n</span><span class="si">{</span><span class="n">serie</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>',
          '',
          '<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"</span><span class="se">\\n</span><span class="s2">serie + serie =</span><span class="se">\\n</span><span class="si">{</span><span class="n">serie</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">serie</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'serie:',
          'a    5.0',
          'b    5.0',
          'c    5.0',
          'd    5.0',
          'e    5.0',
          'dtype: float64',
          'serie + serie =',
          'a    10.0',
          'b    10.0',
          'c    10.0',
          'd    10.0',
          'e    10.0',
          'dtype: float64',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="n">serie</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">(</span><span class="mf">5.0</span><span class="p">,</span> <span class="n">index</span><span class="o">=</span><span class="p">[</span><span class="s2">"a"</span><span class="p">,</span> <span class="s2">"b"</span><span class="p">,</span> <span class="s2">"c"</span><span class="p">,</span> <span class="s2">"d"</span><span class="p">,</span> <span class="s2">"e"</span><span class="p">])</span>',
          '<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"serie:</span><span class="se">\\n</span><span class="si">{</span><span class="n">serie</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>',
          '',
          '<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"</span><span class="se">\\n</span><span class="s2">exp(serie) =</span><span class="se">\\n</span><span class="si">{</span><span class="n">np</span><span class="o">.</span><span class="n">exp</span><span class="p">(</span><span class="n">serie</span><span class="p">)</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'serie:',
          'a    5.0',
          'b    5.0',
          'c    5.0',
          'd    5.0',
          'e    5.0',
          'dtype: float64',
          'exp(serie) =',
          'a    148.413159',
          'b    148.413159',
          'c    148.413159',
          'd    148.413159',
          'e    148.413159',
          'dtype: float64',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Uma diferen√ßa entre <code>Serie</code>s e ndarrays √© que as opera√ß√µes entre <code>Serie</code>s alinham automaticamente os dados de acordo com suas etiquetas. Portanto, c√°lculos podem ser escritos sem considerar se as <code>Serie</code>s envolvidas t√™m as mesmas etiquetas. Se uma etiqueta n√£o for encontrada em uma <code>Serie</code> ou outra, o resultado ser√° marcado como faltante (NaN).</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="n">serie</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">(</span><span class="mf">5.0</span><span class="p">,</span> <span class="n">index</span><span class="o">=</span><span class="p">[</span><span class="s2">"a"</span><span class="p">,</span> <span class="s2">"b"</span><span class="p">,</span> <span class="s2">"c"</span><span class="p">,</span> <span class="s2">"d"</span><span class="p">,</span> <span class="s2">"e"</span><span class="p">])</span>',
          '<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"serie:</span><span class="se">\\n</span><span class="si">{</span><span class="n">serie</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>',
          '',
          '<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"</span><span class="se">\\n</span><span class="s2">serie[1:] + serie[:-1] =</span><span class="se">\\n</span><span class="si">{</span><span class="n">serie</span><span class="p">[</span><span class="mi">1</span><span class="p">:]</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">serie</span><span class="p">[:</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'serie:',
          'a    5.0',
          'b    5.0',
          'c    5.0',
          'd    5.0',
          'e    5.0',
          'dtype: float64',
          'serie[1:] + serie[:-1] =',
          'a     NaN',
          'b    10.0',
          'c    10.0',
          'd    10.0',
          'e     NaN',
          'dtype: float64',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <h4 id="3.1.6.-Atributo-nome-das-S%C3%A9ries">3.1.6. Atributo nome das S√©ries<a class="anchor-link" href="#3.1.6.-Atributo-nome-das-S%C3%A9ries"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 149" src={svg_paths.link_svg_path}/></a></h4>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Um dos atributos das <code>Serie</code>s √© <code>name</code>, o qual corresponde ao nome que ter√£o quando forem adicionadas a um DataFrame. No sentido contr√°rio, quando se obt√©m uma s√©rie de um DataFrame, essa s√©rie ter√° como nome o que tinha no DataFrame.</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="n">serie</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">randn</span><span class="p">(</span><span class="mi">5</span><span class="p">),</span> <span class="n">name</span><span class="o">=</span><span class="s2">"aleatorio"</span><span class="p">)</span>',
          '<span class="n">serie</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          '0   -0.191009',
          '1   -0.793151',
          '2   -0.907747',
          '3   -1.440508',
          '4   -0.676419',
          'Name: aleatorio, dtype: float64',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Pode-se alterar o nome de uma s√©rie por meio do m√©todo <code>rename()</code></p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="n">serie</span> <span class="o">=</span> <span class="n">serie</span><span class="o">.</span><span class="n">rename</span><span class="p">(</span><span class="s2">"random"</span><span class="p">)</span>',
          '<span class="n">serie</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          '0   -0.191009',
          '1   -0.793151',
          '2   -0.907747',
          '3   -1.440508',
          '4   -0.676419',
          'Name: random, dtype: float64',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <h3 id="3.2.-DataFrames">3.2. DataFrames<a class="anchor-link" href="#3.2.-DataFrames"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 150" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Um <code>DataFrame</code> √© uma estrutura de dados rotulada e bidimensional, com colunas de tipos potencialmente diferentes, ou seja, em uma coluna pode haver dados do tipo inteiro, em outra coluna dados do tipo string, etc. Pode pensar nisso como uma planilha ou uma tabela SQL, ou um dicion√°rio de objetos <code>Serie</code>s.</p>
      <p>√â o objeto pandas mais utilizado. Assim como as <code>Serie</code>s, os <code>DataFrame</code>s aceitam muitos tipos diferentes de entrada:</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Junto com os dados, opcionalmente voc√™ pode passar argumentos de √≠ndice (r√≥tulos de linha) e colunas (r√≥tulos de coluna). Se voc√™ passar um √≠ndice e/ou colunas, est√° garantindo o √≠ndice e/ou colunas do <code>DataFrame</code> resultante. Portanto, um dicion√°rio de <code>Serie</code>s mais um √≠ndice espec√≠fico descartar√° todos os dados que n√£o coincidam com o √≠ndice passado</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Se n√£o forem passadas as etiquetas dos eixos, elas ser√£o constru√≠das a partir dos dados de entrada com base em regras de bom senso.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h4 id="3.2.1.-DataFrames-a-partir-de-um-dicion%C3%A1rio-de-Series">3.2.1. DataFrames a partir de um dicion√°rio de Series<a class="anchor-link" href="#3.2.1.-DataFrames-a-partir-de-um-dicion%C3%A1rio-de-Series"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 151" src={svg_paths.link_svg_path}/></a></h4>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Se um dicion√°rio com <code>Series</code> for passado, o <code>DataFrame</code> ser√° criado com tantas colunas quantas <code>Series</code> o dicion√°rio possuir.</p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">diccionario</span> <span class="o">=</span> <span class="p">{opening_brace}</span>
          <span class="s2">"uno"</span><span class="p">:</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">([</span><span class="mf">1.0</span><span class="p">,</span> <span class="mf">2.0</span><span class="p">,</span> <span class="mf">3.0</span><span class="p">]),</span>
          <span class="s2">"dos"</span><span class="p">:</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">([</span><span class="mf">4.0</span><span class="p">,</span> <span class="mf">5.0</span><span class="p">,</span> <span class="mf">6.0</span><span class="p">,</span> <span class="mf">7.0</span><span class="p">])</span>
          <span class="p">{closing_brace}</span>
      
      <span class="n">dataframe</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">diccionario</span><span class="p">)</span>
      <span class="n">dataframe</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[87]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>uno</th>
      <th>dos</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>0</th>
      <td>1.0</td>
      <td>4.0</td>
      </tr>
      <tr>
      <th>1</th>
      <td>2.0</td>
      <td>5.0</td>
      </tr>
      <tr>
      <th>2</th>
      <td>3.0</td>
      <td>6.0</td>
      </tr>
      <tr>
      <th>3</th>
      <td>NaN</td>
      <td>7.0</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Se cada uma das <code>Serie</code>s tiver √≠ndices definidos, o <code>DataFrame</code> resultante ser√° a uni√£o desses √≠ndices.</p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">diccionario</span> <span class="o">=</span> <span class="p">{opening_brace}</span>
          <span class="s2">"uno"</span><span class="p">:</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">([</span><span class="mf">1.0</span><span class="p">,</span> <span class="mf">2.0</span><span class="p">,</span> <span class="mf">3.0</span><span class="p">],</span> <span class="n">index</span><span class="o">=</span><span class="p">[</span><span class="s2">"a"</span><span class="p">,</span> <span class="s2">"b"</span><span class="p">,</span> <span class="s2">"c"</span><span class="p">]),</span>
          <span class="s2">"dos"</span><span class="p">:</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">([</span><span class="mf">4.0</span><span class="p">,</span> <span class="mf">5.0</span><span class="p">,</span> <span class="mf">6.0</span><span class="p">,</span> <span class="mf">7.0</span><span class="p">],</span> <span class="n">index</span><span class="o">=</span><span class="p">[</span><span class="s2">"a"</span><span class="p">,</span> <span class="s2">"b"</span><span class="p">,</span> <span class="s2">"c"</span><span class="p">,</span> <span class="s2">"d"</span><span class="p">])</span>
          <span class="p">{closing_brace}</span>
      
      <span class="n">dataframe</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">diccionario</span><span class="p">)</span>
      <span class="n">dataframe</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[88]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>uno</th>
      <th>dos</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>a</th>
      <td>1.0</td>
      <td>4.0</td>
      </tr>
      <tr>
      <th>b</th>
      <td>2.0</td>
      <td>5.0</td>
      </tr>
      <tr>
      <th>c</th>
      <td>3.0</td>
      <td>6.0</td>
      </tr>
      <tr>
      <th>d</th>
      <td>NaN</td>
      <td>7.0</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">dataframe</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">diccionario</span><span class="p">,</span> <span class="n">index</span><span class="o">=</span><span class="p">[</span><span class="s2">"d"</span><span class="p">,</span> <span class="s2">"b"</span><span class="p">,</span> <span class="s2">"a"</span><span class="p">])</span>
      <span class="n">dataframe</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[89]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>uno</th>
      <th>dos</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>d</th>
      <td>NaN</td>
      <td>7.0</td>
      </tr>
      <tr>
      <th>b</th>
      <td>2.0</td>
      <td>5.0</td>
      </tr>
      <tr>
      <th>a</th>
      <td>1.0</td>
      <td>4.0</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Se as colunas forem passadas, elas aparecer√£o na ordem passada.</p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">dataframe</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">diccionario</span><span class="p">,</span> <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s2">"dos"</span><span class="p">,</span> <span class="s2">"tres"</span><span class="p">])</span>
      <span class="n">dataframe</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[90]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>dos</th>
      <th>tres</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>a</th>
      <td>4.0</td>
      <td>NaN</td>
      </tr>
      <tr>
      <th>b</th>
      <td>5.0</td>
      <td>NaN</td>
      </tr>
      <tr>
      <th>c</th>
      <td>6.0</td>
      <td>NaN</td>
      </tr>
      <tr>
      <th>d</th>
      <td>7.0</td>
      <td>NaN</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <h4 id="3.2.2.-DataFrames-a-partir-de-um-dicion%C3%A1rio-de-ndarrays-ou-listas">3.2.2. DataFrames a partir de um dicion√°rio de ndarrays ou listas<a class="anchor-link" href="#3.2.2.-DataFrames-a-partir-de-um-dicion%C3%A1rio-de-ndarrays-ou-listas"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 152" src={svg_paths.link_svg_path}/></a></h4>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Todos os ndarrays ou listas devem ter o mesmo comprimento. Se um √≠ndice for passado, tamb√©m deve ter o mesmo comprimento que os ndarrays ou listas.</p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">diccionario</span> <span class="o">=</span> <span class="p">{opening_brace}</span>
          <span class="s2">"uno"</span><span class="p">:</span> <span class="p">[</span><span class="mf">1.0</span><span class="p">,</span> <span class="mf">2.0</span><span class="p">,</span> <span class="mf">3.0</span><span class="p">,</span> <span class="mf">4.0</span><span class="p">],</span>
          <span class="s2">"dos"</span><span class="p">:</span> <span class="p">[</span><span class="mf">4.0</span><span class="p">,</span> <span class="mf">3.0</span><span class="p">,</span> <span class="mf">2.0</span><span class="p">,</span> <span class="mf">1.0</span><span class="p">]</span>
          <span class="p">{closing_brace}</span>
      
      <span class="n">dataframe</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">diccionario</span><span class="p">)</span>
      <span class="n">dataframe</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[91]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>uno</th>
      <th>dos</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>0</th>
      <td>1.0</td>
      <td>4.0</td>
      </tr>
      <tr>
      <th>1</th>
      <td>2.0</td>
      <td>3.0</td>
      </tr>
      <tr>
      <th>2</th>
      <td>3.0</td>
      <td>2.0</td>
      </tr>
      <tr>
      <th>3</th>
      <td>4.0</td>
      <td>1.0</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <h4 id="3.2.3.-DataFrames-a-partir-de-uma-matriz">3.2.3. DataFrames a partir de uma matriz<a class="anchor-link" href="#3.2.3.-DataFrames-a-partir-de-uma-matriz"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 153" src={svg_paths.link_svg_path}/></a></h4>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Se um √≠ndice for passado, ele deve ter o mesmo comprimento que o n√∫mero de linhas da matriz e, se forem passadas as colunas, elas devem ter o mesmo comprimento que as colunas da matriz.</p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">matriz</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">([[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span> <span class="p">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">],</span> <span class="p">[</span><span class="mi">3</span><span class="p">,</span> <span class="mi">1</span><span class="p">]])</span>
      
      <span class="n">dataframe</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">matriz</span><span class="p">,</span> <span class="n">index</span><span class="o">=</span><span class="p">[</span><span class="s2">"a"</span><span class="p">,</span> <span class="s2">"b"</span><span class="p">,</span> <span class="s2">"c"</span><span class="p">],</span> <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s2">"columna1"</span><span class="p">,</span> <span class="s2">"columna2"</span><span class="p">])</span>
      <span class="n">dataframe</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[92]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>columna1</th>
      <th>columna2</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>a</th>
      <td>1</td>
      <td>3</td>
      </tr>
      <tr>
      <th>b</th>
      <td>2</td>
      <td>2</td>
      </tr>
      <tr>
      <th>c</th>
      <td>3</td>
      <td>1</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <h4 id="3.2.4.-DataFrames-a-partir-de-uma-lista-de-dicion%C3%A1rios">3.2.4. DataFrames a partir de uma lista de dicion√°rios<a class="anchor-link" href="#3.2.4.-DataFrames-a-partir-de-uma-lista-de-dicion%C3%A1rios"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 154" src={svg_paths.link_svg_path}/></a></h4>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">lista</span> <span class="o">=</span> <span class="p">[{opening_brace}</span><span class="s2">"a"</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s2">"b"</span><span class="p">:</span> <span class="mi">2</span><span class="p">{closing_brace},</span> <span class="p">{opening_brace}</span><span class="s2">"a"</span><span class="p">:</span> <span class="mi">5</span><span class="p">,</span> <span class="s2">"b"</span><span class="p">:</span> <span class="mi">10</span><span class="p">,</span> <span class="s2">"c"</span><span class="p">:</span> <span class="mi">20</span><span class="p">{closing_brace}]</span>
      
      <span class="n">dataframe</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">lista</span><span class="p">)</span>
      <span class="n">dataframe</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[93]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>a</th>
      <th>b</th>
      <th>c</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>0</th>
      <td>1</td>
      <td>2</td>
      <td>NaN</td>
      </tr>
      <tr>
      <th>1</th>
      <td>5</td>
      <td>10</td>
      <td>20.0</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <h4 id="3.2.5.-DataFrames-a-partir-de-um-dicion%C3%A1rio-de-tuplas">3.2.5. DataFrames a partir de um dicion√°rio de tuplas<a class="anchor-link" href="#3.2.5.-DataFrames-a-partir-de-um-dicion%C3%A1rio-de-tuplas"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 155" src={svg_paths.link_svg_path}/></a></h4>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">diccionario</span> <span class="o">=</span> <span class="p">{opening_brace}</span>
          <span class="p">(</span><span class="s2">"a"</span><span class="p">,</span> <span class="s2">"b"</span><span class="p">):</span> <span class="p">{opening_brace}(</span><span class="s2">"A"</span><span class="p">,</span> <span class="s2">"B"</span><span class="p">):</span> <span class="mi">1</span><span class="p">,</span> <span class="p">(</span><span class="s2">"A"</span><span class="p">,</span> <span class="s2">"C"</span><span class="p">):</span> <span class="mi">2</span><span class="p">{closing_brace},</span>
          <span class="p">(</span><span class="s2">"a"</span><span class="p">,</span> <span class="s2">"a"</span><span class="p">):</span> <span class="p">{opening_brace}(</span><span class="s2">"A"</span><span class="p">,</span> <span class="s2">"C"</span><span class="p">):</span> <span class="mi">3</span><span class="p">,</span> <span class="p">(</span><span class="s2">"A"</span><span class="p">,</span> <span class="s2">"B"</span><span class="p">):</span> <span class="mi">4</span><span class="p">{closing_brace},</span>
          <span class="p">(</span><span class="s2">"a"</span><span class="p">,</span> <span class="s2">"c"</span><span class="p">):</span> <span class="p">{opening_brace}(</span><span class="s2">"A"</span><span class="p">,</span> <span class="s2">"B"</span><span class="p">):</span> <span class="mi">5</span><span class="p">,</span> <span class="p">(</span><span class="s2">"A"</span><span class="p">,</span> <span class="s2">"C"</span><span class="p">):</span> <span class="mi">6</span><span class="p">{closing_brace},</span>
          <span class="p">(</span><span class="s2">"b"</span><span class="p">,</span> <span class="s2">"a"</span><span class="p">):</span> <span class="p">{opening_brace}(</span><span class="s2">"A"</span><span class="p">,</span> <span class="s2">"C"</span><span class="p">):</span> <span class="mi">7</span><span class="p">,</span> <span class="p">(</span><span class="s2">"A"</span><span class="p">,</span> <span class="s2">"B"</span><span class="p">):</span> <span class="mi">8</span><span class="p">{closing_brace},</span>
          <span class="p">(</span><span class="s2">"b"</span><span class="p">,</span> <span class="s2">"b"</span><span class="p">):</span> <span class="p">{opening_brace}(</span><span class="s2">"A"</span><span class="p">,</span> <span class="s2">"D"</span><span class="p">):</span> <span class="mi">9</span><span class="p">,</span> <span class="p">(</span><span class="s2">"A"</span><span class="p">,</span> <span class="s2">"B"</span><span class="p">):</span> <span class="mi">10</span><span class="p">{closing_brace},</span>
          <span class="p">{closing_brace}</span>
      
      <span class="n">dataframe</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">diccionario</span><span class="p">)</span>
      <span class="n">dataframe</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[94]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead tr th {
              text-align: left;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr>
      <th></th>
      <th></th>
      <th colspan="3" halign="left">a</th>
      <th colspan="2" halign="left">b</th>
      </tr>
      <tr>
      <th></th>
      <th></th>
      <th>b</th>
      <th>a</th>
      <th>c</th>
      <th>a</th>
      <th>b</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th rowspan="3" valign="top">A</th>
      <th>B</th>
      <td>1.0</td>
      <td>4.0</td>
      <td>5.0</td>
      <td>8.0</td>
      <td>10.0</td>
      </tr>
      <tr>
      <th>C</th>
      <td>2.0</td>
      <td>3.0</td>
      <td>6.0</td>
      <td>7.0</td>
      <td>NaN</td>
      </tr>
      <tr>
      <th>D</th>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>9.0</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <h4 id="3.2.6.-DataFrames-a-partir-de-uma-S%C3%A9rie">3.2.6. DataFrames a partir de uma S√©rie<a class="anchor-link" href="#3.2.6.-DataFrames-a-partir-de-uma-S%C3%A9rie"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 156" src={svg_paths.link_svg_path}/></a></h4>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>O resultado ser√° um <code>DataFrame</code> com o mesmo √≠ndice que a S√©rie de entrada, e com uma coluna cujo nome √© o nome original da S√©rie (apenas se n√£o for fornecido outro nome de coluna).</p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">diccionario</span> <span class="o">=</span> <span class="p">{opening_brace}</span><span class="s2">"b"</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s2">"a"</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="s2">"c"</span><span class="p">:</span> <span class="mi">2</span><span class="p">{closing_brace}</span>
      
      <span class="n">serie</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">(</span><span class="n">diccionario</span><span class="p">)</span>
      
      <span class="n">dataframe</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">serie</span><span class="p">)</span>
      <span class="n">dataframe</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[95]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>0</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>b</th>
      <td>1</td>
      </tr>
      <tr>
      <th>a</th>
      <td>0</td>
      </tr>
      <tr>
      <th>c</th>
      <td>2</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <h2 id="4.-Explora%C3%A7%C3%A3o-de-um-DataFrame">4. Explora√ß√£o de um DataFrame<a class="anchor-link" href="#4.-Explora%C3%A7%C3%A3o-de-um-DataFrame"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 157" src={svg_paths.link_svg_path}/></a></h2>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Quando um <code>DataFrame</code> √© muito grande, n√£o pode ser representado inteiro</p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">california_housing_train</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s2">"https://raw.githubusercontent.com/maximofn/portafolio/main/posts/california_housing_train.csv"</span><span class="p">)</span>
      <span class="n">california_housing_train</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[102]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>longitude</th>
      <th>latitude</th>
      <th>housing_median_age</th>
      <th>total_rooms</th>
      <th>total_bedrooms</th>
      <th>population</th>
      <th>households</th>
      <th>median_income</th>
      <th>median_house_value</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>0</th>
      <td>-114.31</td>
      <td>34.19</td>
      <td>15.0</td>
      <td>5612.0</td>
      <td>1283.0</td>
      <td>1015.0</td>
      <td>472.0</td>
      <td>1.4936</td>
      <td>66900.0</td>
      </tr>
      <tr>
      <th>1</th>
      <td>-114.47</td>
      <td>34.40</td>
      <td>19.0</td>
      <td>7650.0</td>
      <td>1901.0</td>
      <td>1129.0</td>
      <td>463.0</td>
      <td>1.8200</td>
      <td>80100.0</td>
      </tr>
      <tr>
      <th>2</th>
      <td>-114.56</td>
      <td>33.69</td>
      <td>17.0</td>
      <td>720.0</td>
      <td>174.0</td>
      <td>333.0</td>
      <td>117.0</td>
      <td>1.6509</td>
      <td>85700.0</td>
      </tr>
      <tr>
      <th>3</th>
      <td>-114.57</td>
      <td>33.64</td>
      <td>14.0</td>
      <td>1501.0</td>
      <td>337.0</td>
      <td>515.0</td>
      <td>226.0</td>
      <td>3.1917</td>
      <td>73400.0</td>
      </tr>
      <tr>
      <th>4</th>
      <td>-114.57</td>
      <td>33.57</td>
      <td>20.0</td>
      <td>1454.0</td>
      <td>326.0</td>
      <td>624.0</td>
      <td>262.0</td>
      <td>1.9250</td>
      <td>65500.0</td>
      </tr>
      <tr>
      <th>...</th>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      </tr>
      <tr>
      <th>16995</th>
      <td>-124.26</td>
      <td>40.58</td>
      <td>52.0</td>
      <td>2217.0</td>
      <td>394.0</td>
      <td>907.0</td>
      <td>369.0</td>
      <td>2.3571</td>
      <td>111400.0</td>
      </tr>
      <tr>
      <th>16996</th>
      <td>-124.27</td>
      <td>40.69</td>
      <td>36.0</td>
      <td>2349.0</td>
      <td>528.0</td>
      <td>1194.0</td>
      <td>465.0</td>
      <td>2.5179</td>
      <td>79000.0</td>
      </tr>
      <tr>
      <th>16997</th>
      <td>-124.30</td>
      <td>41.84</td>
      <td>17.0</td>
      <td>2677.0</td>
      <td>531.0</td>
      <td>1244.0</td>
      <td>456.0</td>
      <td>3.0313</td>
      <td>103600.0</td>
      </tr>
      <tr>
      <th>16998</th>
      <td>-124.30</td>
      <td>41.80</td>
      <td>19.0</td>
      <td>2672.0</td>
      <td>552.0</td>
      <td>1298.0</td>
      <td>478.0</td>
      <td>1.9797</td>
      <td>85800.0</td>
      </tr>
      <tr>
      <th>16999</th>
      <td>-124.35</td>
      <td>40.54</td>
      <td>52.0</td>
      <td>1820.0</td>
      <td>300.0</td>
      <td>806.0</td>
      <td>270.0</td>
      <td>3.0147</td>
      <td>94600.0</td>
      </tr>
      </tbody>
      </table>
      <p>17000 rows √ó 9 columns</p>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Portanto, √© muito √∫til ter m√©todos para explor√°-lo e obter informa√ß√µes de maneira r√°pida.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="4.1.-Cabe%C3%A7a-do-DataFrame">4.1. Cabe√ßa do DataFrame<a class="anchor-link" href="#4.1.-Cabe%C3%A7a-do-DataFrame"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 158" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Para ver as primeiras linhas e ter uma ideia de como √© o <code>DataFrame</code> existe o m√©todo <code>head()</code>, que por padr√£o mostra as primeiras 5 linhas do <code>DataFrame</code>. Se quiser ver um n√∫mero diferente de linhas, introduzi-lo atrav√©s do atributo <code>n</code></p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">california_housing_train</span><span class="o">.</span><span class="n">head</span><span class="p">(</span><span class="n">n</span><span class="o">=</span><span class="mi">10</span><span class="p">)</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[103]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>longitude</th>
      <th>latitude</th>
      <th>housing_median_age</th>
      <th>total_rooms</th>
      <th>total_bedrooms</th>
      <th>population</th>
      <th>households</th>
      <th>median_income</th>
      <th>median_house_value</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>0</th>
      <td>-114.31</td>
      <td>34.19</td>
      <td>15.0</td>
      <td>5612.0</td>
      <td>1283.0</td>
      <td>1015.0</td>
      <td>472.0</td>
      <td>1.4936</td>
      <td>66900.0</td>
      </tr>
      <tr>
      <th>1</th>
      <td>-114.47</td>
      <td>34.40</td>
      <td>19.0</td>
      <td>7650.0</td>
      <td>1901.0</td>
      <td>1129.0</td>
      <td>463.0</td>
      <td>1.8200</td>
      <td>80100.0</td>
      </tr>
      <tr>
      <th>2</th>
      <td>-114.56</td>
      <td>33.69</td>
      <td>17.0</td>
      <td>720.0</td>
      <td>174.0</td>
      <td>333.0</td>
      <td>117.0</td>
      <td>1.6509</td>
      <td>85700.0</td>
      </tr>
      <tr>
      <th>3</th>
      <td>-114.57</td>
      <td>33.64</td>
      <td>14.0</td>
      <td>1501.0</td>
      <td>337.0</td>
      <td>515.0</td>
      <td>226.0</td>
      <td>3.1917</td>
      <td>73400.0</td>
      </tr>
      <tr>
      <th>4</th>
      <td>-114.57</td>
      <td>33.57</td>
      <td>20.0</td>
      <td>1454.0</td>
      <td>326.0</td>
      <td>624.0</td>
      <td>262.0</td>
      <td>1.9250</td>
      <td>65500.0</td>
      </tr>
      <tr>
      <th>5</th>
      <td>-114.58</td>
      <td>33.63</td>
      <td>29.0</td>
      <td>1387.0</td>
      <td>236.0</td>
      <td>671.0</td>
      <td>239.0</td>
      <td>3.3438</td>
      <td>74000.0</td>
      </tr>
      <tr>
      <th>6</th>
      <td>-114.58</td>
      <td>33.61</td>
      <td>25.0</td>
      <td>2907.0</td>
      <td>680.0</td>
      <td>1841.0</td>
      <td>633.0</td>
      <td>2.6768</td>
      <td>82400.0</td>
      </tr>
      <tr>
      <th>7</th>
      <td>-114.59</td>
      <td>34.83</td>
      <td>41.0</td>
      <td>812.0</td>
      <td>168.0</td>
      <td>375.0</td>
      <td>158.0</td>
      <td>1.7083</td>
      <td>48500.0</td>
      </tr>
      <tr>
      <th>8</th>
      <td>-114.59</td>
      <td>33.61</td>
      <td>34.0</td>
      <td>4789.0</td>
      <td>1175.0</td>
      <td>3134.0</td>
      <td>1056.0</td>
      <td>2.1782</td>
      <td>58400.0</td>
      </tr>
      <tr>
      <th>9</th>
      <td>-114.60</td>
      <td>34.83</td>
      <td>46.0</td>
      <td>1497.0</td>
      <td>309.0</td>
      <td>787.0</td>
      <td>271.0</td>
      <td>2.1908</td>
      <td>48100.0</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="4.2.-Cauda-do-DataFrame">4.2. Cauda do DataFrame<a class="anchor-link" href="#4.2.-Cauda-do-DataFrame"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 159" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Se o que se quer for visualizar as √∫ltimas linhas, pode-se usar o m√©todo <code>tail()</code>, atrav√©s do par√¢metro <code>n</code> escolhe-se quantas linhas exibir.</p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">california_housing_train</span><span class="o">.</span><span class="n">tail</span><span class="p">()</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[104]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>longitude</th>
      <th>latitude</th>
      <th>housing_median_age</th>
      <th>total_rooms</th>
      <th>total_bedrooms</th>
      <th>population</th>
      <th>households</th>
      <th>median_income</th>
      <th>median_house_value</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>16995</th>
      <td>-124.26</td>
      <td>40.58</td>
      <td>52.0</td>
      <td>2217.0</td>
      <td>394.0</td>
      <td>907.0</td>
      <td>369.0</td>
      <td>2.3571</td>
      <td>111400.0</td>
      </tr>
      <tr>
      <th>16996</th>
      <td>-124.27</td>
      <td>40.69</td>
      <td>36.0</td>
      <td>2349.0</td>
      <td>528.0</td>
      <td>1194.0</td>
      <td>465.0</td>
      <td>2.5179</td>
      <td>79000.0</td>
      </tr>
      <tr>
      <th>16997</th>
      <td>-124.30</td>
      <td>41.84</td>
      <td>17.0</td>
      <td>2677.0</td>
      <td>531.0</td>
      <td>1244.0</td>
      <td>456.0</td>
      <td>3.0313</td>
      <td>103600.0</td>
      </tr>
      <tr>
      <th>16998</th>
      <td>-124.30</td>
      <td>41.80</td>
      <td>19.0</td>
      <td>2672.0</td>
      <td>552.0</td>
      <td>1298.0</td>
      <td>478.0</td>
      <td>1.9797</td>
      <td>85800.0</td>
      </tr>
      <tr>
      <th>16999</th>
      <td>-124.35</td>
      <td>40.54</td>
      <td>52.0</td>
      <td>1820.0</td>
      <td>300.0</td>
      <td>806.0</td>
      <td>270.0</td>
      <td>3.0147</td>
      <td>94600.0</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="4.3.-Informa%C3%A7%C3%A3o-do-DataFrame">4.3. Informa√ß√£o do DataFrame<a class="anchor-link" href="#4.3.-Informa%C3%A7%C3%A3o-do-DataFrame"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 160" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Outro m√©todo muito √∫til √© <code>info()</code> que nos d√° informa√ß√µes sobre o <code>DataFrame</code></p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="n">california_housing_train</span><span class="o">.</span><span class="n">info</span><span class="p">()</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          '&lt;class \'pandas.core.frame.DataFrame\'&gt;',
          'RangeIndex: 17000 entries, 0 to 16999',
          'Data columns (total 9 columns):',
          ' #   Column              Non-Null Count  Dtype  ',
          '---  ------              --------------  -----  ',
          ' 0   longitude           17000 non-null  float64',
          ' 1   latitude            17000 non-null  float64',
          ' 2   housing_median_age  17000 non-null  float64',
          ' 3   total_rooms         17000 non-null  float64',
          ' 4   total_bedrooms      17000 non-null  float64',
          ' 5   population          17000 non-null  float64',
          ' 6   households          17000 non-null  float64',
          ' 7   median_income       17000 non-null  float64',
          ' 8   median_house_value  17000 non-null  float64',
          'dtypes: float64(9)',
          'memory usage: 1.2 MB',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <h3 id="4.4.-Linhas-e-Colunas-do-DataFrame">4.4. Linhas e Colunas do DataFrame<a class="anchor-link" href="#4.4.-Linhas-e-Colunas-do-DataFrame"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 161" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Os √≠ndices e as colunas de um <code>DataFrame</code> podem ser obtidos atrav√©s dos m√©todos <code>index</code> e <code>columns</code></p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="n">diccionario</span> <span class="o">=</span> <span class="p">{</span>',
          '    <span class="s2">"uno"</span><span class="p">:</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">([</span><span class="mf">1.0</span><span class="p">,</span> <span class="mf">2.0</span><span class="p">,</span> <span class="mf">3.0</span><span class="p">],</span> <span class="n">index</span><span class="o">=</span><span class="p">[</span><span class="s2">"a"</span><span class="p">,</span> <span class="s2">"b"</span><span class="p">,</span> <span class="s2">"c"</span><span class="p">]),</span>',
          '    <span class="s2">"dos"</span><span class="p">:</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">([</span><span class="mf">4.0</span><span class="p">,</span> <span class="mf">5.0</span><span class="p">,</span> <span class="mf">6.0</span><span class="p">,</span> <span class="mf">7.0</span><span class="p">],</span> <span class="n">index</span><span class="o">=</span><span class="p">[</span><span class="s2">"a"</span><span class="p">,</span> <span class="s2">"b"</span><span class="p">,</span> <span class="s2">"c"</span><span class="p">,</span> <span class="s2">"d"</span><span class="p">])</span>',
          '    <span class="p">}</span>',
          '',
          '<span class="n">dataframe</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">diccionario</span><span class="p">)</span>',
          '',
          '<span class="n">indices</span> <span class="o">=</span> <span class="n">dataframe</span><span class="o">.</span><span class="n">index</span>',
          '<span class="n">columnas</span> <span class="o">=</span> <span class="n">dataframe</span><span class="o">.</span><span class="n">columns</span>',
          '<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"El DataFrame tiene los √≠ndices</span><span class="se">\\n\t</span><span class="si">{</span><span class="n">indices</span><span class="si">}</span><span class="se">\\n</span><span class="s2">"</span><span class="p">)</span>',
          '<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"El DataFrame tiene las columnas</span><span class="se">\\n\t</span><span class="si">{</span><span class="n">columnas</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'El DataFrame tiene los √≠ndices',
          '	Index([\'a\', \'b\', \'c\', \'d\'], dtype=\'object\')',
          'El DataFrame tiene las columnas',
          '	Index([\'uno\', \'dos\'], dtype=\'object\')',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <h3 id="4.5.-Descri%C3%A7%C3%A3o-do-DataFrame">4.5. Descri√ß√£o do DataFrame<a class="anchor-link" href="#4.5.-Descri%C3%A7%C3%A3o-do-DataFrame"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 162" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>O m√©todo <code>describe()</code> mostra um resumo estat√≠stico r√°pido dos dados do <code>DataFrame</code></p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">california_housing_train</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s2">"https://raw.githubusercontent.com/maximofn/portafolio/main/posts/california_housing_train.csv"</span><span class="p">)</span>
      <span class="n">california_housing_train</span><span class="o">.</span><span class="n">describe</span><span class="p">()</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[107]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>longitude</th>
      <th>latitude</th>
      <th>housing_median_age</th>
      <th>total_rooms</th>
      <th>total_bedrooms</th>
      <th>population</th>
      <th>households</th>
      <th>median_income</th>
      <th>median_house_value</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>count</th>
      <td>17000.000000</td>
      <td>17000.000000</td>
      <td>17000.000000</td>
      <td>17000.000000</td>
      <td>17000.000000</td>
      <td>17000.000000</td>
      <td>17000.000000</td>
      <td>17000.000000</td>
      <td>17000.000000</td>
      </tr>
      <tr>
      <th>mean</th>
      <td>-119.562108</td>
      <td>35.625225</td>
      <td>28.589353</td>
      <td>2643.664412</td>
      <td>539.410824</td>
      <td>1429.573941</td>
      <td>501.221941</td>
      <td>3.883578</td>
      <td>207300.912353</td>
      </tr>
      <tr>
      <th>std</th>
      <td>2.005166</td>
      <td>2.137340</td>
      <td>12.586937</td>
      <td>2179.947071</td>
      <td>421.499452</td>
      <td>1147.852959</td>
      <td>384.520841</td>
      <td>1.908157</td>
      <td>115983.764387</td>
      </tr>
      <tr>
      <th>min</th>
      <td>-124.350000</td>
      <td>32.540000</td>
      <td>1.000000</td>
      <td>2.000000</td>
      <td>1.000000</td>
      <td>3.000000</td>
      <td>1.000000</td>
      <td>0.499900</td>
      <td>14999.000000</td>
      </tr>
      <tr>
      <th>25%</th>
      <td>-121.790000</td>
      <td>33.930000</td>
      <td>18.000000</td>
      <td>1462.000000</td>
      <td>297.000000</td>
      <td>790.000000</td>
      <td>282.000000</td>
      <td>2.566375</td>
      <td>119400.000000</td>
      </tr>
      <tr>
      <th>50%</th>
      <td>-118.490000</td>
      <td>34.250000</td>
      <td>29.000000</td>
      <td>2127.000000</td>
      <td>434.000000</td>
      <td>1167.000000</td>
      <td>409.000000</td>
      <td>3.544600</td>
      <td>180400.000000</td>
      </tr>
      <tr>
      <th>75%</th>
      <td>-118.000000</td>
      <td>37.720000</td>
      <td>37.000000</td>
      <td>3151.250000</td>
      <td>648.250000</td>
      <td>1721.000000</td>
      <td>605.250000</td>
      <td>4.767000</td>
      <td>265000.000000</td>
      </tr>
      <tr>
      <th>max</th>
      <td>-114.310000</td>
      <td>41.950000</td>
      <td>52.000000</td>
      <td>37937.000000</td>
      <td>6445.000000</td>
      <td>35682.000000</td>
      <td>6082.000000</td>
      <td>15.000100</td>
      <td>500001.000000</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="4.6.-Ordena%C3%A7%C3%A3o-do-DataFrame">4.6. Ordena√ß√£o do <code>DataFrame</code><a class="anchor-link" href="#4.6.-Ordena%C3%A7%C3%A3o-do-DataFrame"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 163" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>As linhas de um <code>DataFrame</code> podem ser ordenadas alfabeticamente atrav√©s do m√©todo <code>sort_index()</code>.</p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">california_housing_train</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s2">"https://raw.githubusercontent.com/maximofn/portafolio/main/posts/california_housing_train.csv"</span><span class="p">)</span>
      <span class="n">california_housing_train</span><span class="o">.</span><span class="n">sort_index</span><span class="p">()</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[108]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>longitude</th>
      <th>latitude</th>
      <th>housing_median_age</th>
      <th>total_rooms</th>
      <th>total_bedrooms</th>
      <th>population</th>
      <th>households</th>
      <th>median_income</th>
      <th>median_house_value</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>0</th>
      <td>-114.31</td>
      <td>34.19</td>
      <td>15.0</td>
      <td>5612.0</td>
      <td>1283.0</td>
      <td>1015.0</td>
      <td>472.0</td>
      <td>1.4936</td>
      <td>66900.0</td>
      </tr>
      <tr>
      <th>1</th>
      <td>-114.47</td>
      <td>34.40</td>
      <td>19.0</td>
      <td>7650.0</td>
      <td>1901.0</td>
      <td>1129.0</td>
      <td>463.0</td>
      <td>1.8200</td>
      <td>80100.0</td>
      </tr>
      <tr>
      <th>2</th>
      <td>-114.56</td>
      <td>33.69</td>
      <td>17.0</td>
      <td>720.0</td>
      <td>174.0</td>
      <td>333.0</td>
      <td>117.0</td>
      <td>1.6509</td>
      <td>85700.0</td>
      </tr>
      <tr>
      <th>3</th>
      <td>-114.57</td>
      <td>33.64</td>
      <td>14.0</td>
      <td>1501.0</td>
      <td>337.0</td>
      <td>515.0</td>
      <td>226.0</td>
      <td>3.1917</td>
      <td>73400.0</td>
      </tr>
      <tr>
      <th>4</th>
      <td>-114.57</td>
      <td>33.57</td>
      <td>20.0</td>
      <td>1454.0</td>
      <td>326.0</td>
      <td>624.0</td>
      <td>262.0</td>
      <td>1.9250</td>
      <td>65500.0</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Como neste caso as linhas j√° estavam ordenadas, definimos <code>ascending=False</code> para que a ordem seja inversa.</p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">california_housing_train</span><span class="o">.</span><span class="n">sort_index</span><span class="p">(</span><span class="n">ascending</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[109]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>longitude</th>
      <th>latitude</th>
      <th>housing_median_age</th>
      <th>total_rooms</th>
      <th>total_bedrooms</th>
      <th>population</th>
      <th>households</th>
      <th>median_income</th>
      <th>median_house_value</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>16999</th>
      <td>-124.35</td>
      <td>40.54</td>
      <td>52.0</td>
      <td>1820.0</td>
      <td>300.0</td>
      <td>806.0</td>
      <td>270.0</td>
      <td>3.0147</td>
      <td>94600.0</td>
      </tr>
      <tr>
      <th>16998</th>
      <td>-124.30</td>
      <td>41.80</td>
      <td>19.0</td>
      <td>2672.0</td>
      <td>552.0</td>
      <td>1298.0</td>
      <td>478.0</td>
      <td>1.9797</td>
      <td>85800.0</td>
      </tr>
      <tr>
      <th>16997</th>
      <td>-124.30</td>
      <td>41.84</td>
      <td>17.0</td>
      <td>2677.0</td>
      <td>531.0</td>
      <td>1244.0</td>
      <td>456.0</td>
      <td>3.0313</td>
      <td>103600.0</td>
      </tr>
      <tr>
      <th>16996</th>
      <td>-124.27</td>
      <td>40.69</td>
      <td>36.0</td>
      <td>2349.0</td>
      <td>528.0</td>
      <td>1194.0</td>
      <td>465.0</td>
      <td>2.5179</td>
      <td>79000.0</td>
      </tr>
      <tr>
      <th>16995</th>
      <td>-124.26</td>
      <td>40.58</td>
      <td>52.0</td>
      <td>2217.0</td>
      <td>394.0</td>
      <td>907.0</td>
      <td>369.0</td>
      <td>2.3571</td>
      <td>111400.0</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Se <code>axis=1</code> deve ser inserido quando o objetivo √© ordenar as colunas, pois por padr√£o √© <code>0</code>.</p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">california_housing_train</span><span class="o">.</span><span class="n">sort_index</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[110]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>households</th>
      <th>housing_median_age</th>
      <th>latitude</th>
      <th>longitude</th>
      <th>median_house_value</th>
      <th>median_income</th>
      <th>population</th>
      <th>total_bedrooms</th>
      <th>total_rooms</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>0</th>
      <td>472.0</td>
      <td>15.0</td>
      <td>34.19</td>
      <td>-114.31</td>
      <td>66900.0</td>
      <td>1.4936</td>
      <td>1015.0</td>
      <td>1283.0</td>
      <td>5612.0</td>
      </tr>
      <tr>
      <th>1</th>
      <td>463.0</td>
      <td>19.0</td>
      <td>34.40</td>
      <td>-114.47</td>
      <td>80100.0</td>
      <td>1.8200</td>
      <td>1129.0</td>
      <td>1901.0</td>
      <td>7650.0</td>
      </tr>
      <tr>
      <th>2</th>
      <td>117.0</td>
      <td>17.0</td>
      <td>33.69</td>
      <td>-114.56</td>
      <td>85700.0</td>
      <td>1.6509</td>
      <td>333.0</td>
      <td>174.0</td>
      <td>720.0</td>
      </tr>
      <tr>
      <th>3</th>
      <td>226.0</td>
      <td>14.0</td>
      <td>33.64</td>
      <td>-114.57</td>
      <td>73400.0</td>
      <td>3.1917</td>
      <td>515.0</td>
      <td>337.0</td>
      <td>1501.0</td>
      </tr>
      <tr>
      <th>4</th>
      <td>262.0</td>
      <td>20.0</td>
      <td>33.57</td>
      <td>-114.57</td>
      <td>65500.0</td>
      <td>1.9250</td>
      <td>624.0</td>
      <td>326.0</td>
      <td>1454.0</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Se quisermos ordenar o <code>DataFrame</code> atrav√©s de uma coluna espec√≠fica, temos que usar o m√©todo <code>sort_values()</code> e indicar a label da coluna pela qual queremos ordenar.</p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">california_housing_train</span><span class="o">.</span><span class="n">sort_values</span><span class="p">(</span><span class="s1">'median_house_value'</span><span class="p">)</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[111]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>longitude</th>
      <th>latitude</th>
      <th>housing_median_age</th>
      <th>total_rooms</th>
      <th>total_bedrooms</th>
      <th>population</th>
      <th>households</th>
      <th>median_income</th>
      <th>median_house_value</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>568</th>
      <td>-117.02</td>
      <td>36.40</td>
      <td>19.0</td>
      <td>619.0</td>
      <td>239.0</td>
      <td>490.0</td>
      <td>164.0</td>
      <td>2.1000</td>
      <td>14999.0</td>
      </tr>
      <tr>
      <th>16643</th>
      <td>-122.74</td>
      <td>39.71</td>
      <td>16.0</td>
      <td>255.0</td>
      <td>73.0</td>
      <td>85.0</td>
      <td>38.0</td>
      <td>1.6607</td>
      <td>14999.0</td>
      </tr>
      <tr>
      <th>16801</th>
      <td>-123.17</td>
      <td>40.31</td>
      <td>36.0</td>
      <td>98.0</td>
      <td>28.0</td>
      <td>18.0</td>
      <td>8.0</td>
      <td>0.5360</td>
      <td>14999.0</td>
      </tr>
      <tr>
      <th>3226</th>
      <td>-117.86</td>
      <td>34.24</td>
      <td>52.0</td>
      <td>803.0</td>
      <td>267.0</td>
      <td>628.0</td>
      <td>225.0</td>
      <td>4.1932</td>
      <td>14999.0</td>
      </tr>
      <tr>
      <th>7182</th>
      <td>-118.33</td>
      <td>34.15</td>
      <td>39.0</td>
      <td>493.0</td>
      <td>168.0</td>
      <td>259.0</td>
      <td>138.0</td>
      <td>2.3667</td>
      <td>17500.0</td>
      </tr>
      <tr>
      <th>...</th>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      </tr>
      <tr>
      <th>15834</th>
      <td>-122.42</td>
      <td>37.81</td>
      <td>52.0</td>
      <td>1314.0</td>
      <td>317.0</td>
      <td>473.0</td>
      <td>250.0</td>
      <td>4.3472</td>
      <td>500001.0</td>
      </tr>
      <tr>
      <th>7927</th>
      <td>-118.40</td>
      <td>33.87</td>
      <td>38.0</td>
      <td>2398.0</td>
      <td>431.0</td>
      <td>911.0</td>
      <td>392.0</td>
      <td>5.2319</td>
      <td>500001.0</td>
      </tr>
      <tr>
      <th>3546</th>
      <td>-117.90</td>
      <td>33.63</td>
      <td>28.0</td>
      <td>2370.0</td>
      <td>352.0</td>
      <td>832.0</td>
      <td>347.0</td>
      <td>7.1148</td>
      <td>500001.0</td>
      </tr>
      <tr>
      <th>7924</th>
      <td>-118.40</td>
      <td>33.88</td>
      <td>35.0</td>
      <td>1060.0</td>
      <td>191.0</td>
      <td>444.0</td>
      <td>196.0</td>
      <td>8.0015</td>
      <td>500001.0</td>
      </tr>
      <tr>
      <th>14011</th>
      <td>-122.04</td>
      <td>37.26</td>
      <td>24.0</td>
      <td>4973.0</td>
      <td>709.0</td>
      <td>1692.0</td>
      <td>696.0</td>
      <td>7.8627</td>
      <td>500001.0</td>
      </tr>
      </tbody>
      </table>
      <p>17000 rows √ó 9 columns</p>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="4.7.-Estat%C3%ADsticas-do-DataFrame">4.7. Estat√≠sticas do DataFrame<a class="anchor-link" href="#4.7.-Estat%C3%ADsticas-do-DataFrame"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 164" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Estat√≠sticas do <code>DataFrame</code> podem ser obtidas, como a m√©dia, a moda e o desvio padr√£o.</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="n">california_housing_train</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s2">"https://raw.githubusercontent.com/maximofn/portafolio/main/posts/california_housing_train.csv"</span><span class="p">)</span>',
          '',
          '<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"media:</span><span class="se">\\n</span><span class="si">{</span><span class="n">california_housing_train</span><span class="o">.</span><span class="n">mean</span><span class="p">()</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>',
          '<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"</span><span class="se">\\n\\n</span><span class="s2">desviaci√≥n estandar:</span><span class="se">\\n</span><span class="si">{</span><span class="n">california_housing_train</span><span class="o">.</span><span class="n">std</span><span class="p">()</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'media:',
          'longitude               -119.562108',
          'latitude                  35.625225',
          'housing_median_age        28.589353',
          'total_rooms             2643.664412',
          'total_bedrooms           539.410824',
          'population              1429.573941',
          'households               501.221941',
          'median_income              3.883578',
          'median_house_value    207300.912353',
          'dtype: float64',
          'desviaci√≥n estandar:',
          'longitude                  2.005166',
          'latitude                   2.137340',
          'housing_median_age        12.586937',
          'total_rooms             2179.947071',
          'total_bedrooms           421.499452',
          'population              1147.852959',
          'households               384.520841',
          'median_income              1.908157',
          'median_house_value    115983.764387',
          'dtype: float64',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Se querem obter as estat√≠sticas sobre as linhas e n√£o sobre as colunas, √© necess√°rio indic√°-lo atrav√©s de <code>axis=1</code></p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="n">california_housing_train</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s2">"https://raw.githubusercontent.com/maximofn/portafolio/main/posts/california_housing_train.csv"</span><span class="p">)</span>',
          '',
          '<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"media:</span><span class="se">\\n</span><span class="si">{</span><span class="n">california_housing_train</span><span class="o">.</span><span class="n">mean</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>',
          '<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"</span><span class="se">\\n\\n</span><span class="s2">desviaci√≥n estandar:</span><span class="se">\\n</span><span class="si">{</span><span class="n">california_housing_train</span><span class="o">.</span><span class="n">std</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'media:',
          '0         8357.597067',
          '1        10131.527778',
          '2         9664.642322',
          '3         8435.029078',
          '4         7567.436111',
          '             ...     ',
          '16995    12806.408567',
          '16996     9276.770878',
          '16997    12049.507922',
          '16998    10082.053300',
          '16999    10863.022744',
          'Length: 17000, dtype: float64',
          'desviaci√≥n estandar:',
          '0        22026.612445',
          '1        26352.939272',
          '2        28514.316588',
          '3        24366.754747',
          '4        21730.014569',
          '             ...     ',
          '16995    36979.676899',
          '16996    26158.006771',
          '16997    34342.876792',
          '16998    28408.152329',
          '16999    31407.119788',
          'Length: 17000, dtype: float64',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Outra coisa √∫til que se pode obter dos <code>DataFrame</code>s √©, por exemplo, o n√∫mero de vezes que cada item de uma coluna se repete.</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="n">california_housing_train</span><span class="p">[</span><span class="s2">"total_rooms"</span><span class="p">]</span><span class="o">.</span><span class="n">value_counts</span><span class="p">()</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          '1582.0     16',
          '1527.0     15',
          '1717.0     14',
          '1471.0     14',
          '1703.0     14',
          '           ..',
          '157.0       1',
          '2760.0      1',
          '458.0       1',
          '10239.0     1',
          '4068.0      1',
          'Name: total_rooms, Length: 5533, dtype: int64',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Por exemplo, podemos ver que h√° um total de 16 casas com 1582 quartos.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="4.8.-Mem%C3%B3ria-usada">4.8. Mem√≥ria usada<a class="anchor-link" href="#4.8.-Mem%C3%B3ria-usada"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 165" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Podemos ver a mem√≥ria que o DataFrame utiliza</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="n">california_housing_train</span><span class="o">.</span><span class="n">memory_usage</span><span class="p">(</span><span class="n">deep</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'Index                    128',
          'longitude             136000',
          'latitude              136000',
          'housing_median_age    136000',
          'total_rooms           136000',
          'total_bedrooms        136000',
          'population            136000',
          'households            136000',
          'median_income         136000',
          'median_house_value    136000',
          'dtype: int64',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <h2 id="5.-Adi%C3%A7%C3%A3o-de-dados">5. Adi√ß√£o de dados<a class="anchor-link" href="#5.-Adi%C3%A7%C3%A3o-de-dados"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 166" src={svg_paths.link_svg_path}/></a></h2>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="5.1.-Adi%C3%A7%C3%A3o-de-colunas">5.1. Adi√ß√£o de colunas<a class="anchor-link" href="#5.1.-Adi%C3%A7%C3%A3o-de-colunas"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 167" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Colunas podem ser adicionadas facilmente como opera√ß√µes de outras colunas</p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">diccionario</span> <span class="o">=</span> <span class="p">{opening_brace}</span>
          <span class="s2">"uno"</span><span class="p">:</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">([</span><span class="mf">1.0</span><span class="p">,</span> <span class="mf">2.0</span><span class="p">,</span> <span class="mf">3.0</span><span class="p">]),</span>
          <span class="s2">"dos"</span><span class="p">:</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">([</span><span class="mf">4.0</span><span class="p">,</span> <span class="mf">5.0</span><span class="p">,</span> <span class="mf">6.0</span><span class="p">,</span> <span class="mf">7.0</span><span class="p">])</span>
          <span class="p">{closing_brace}</span>
      
      <span class="n">dataframe</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">diccionario</span><span class="p">)</span>
      
      <span class="n">dataframe</span><span class="p">[</span><span class="s2">"tres"</span><span class="p">]</span> <span class="o">=</span> <span class="n">dataframe</span><span class="p">[</span><span class="s2">"uno"</span><span class="p">]</span> <span class="o">+</span> <span class="n">dataframe</span><span class="p">[</span><span class="s2">"dos"</span><span class="p">]</span>
      <span class="n">dataframe</span><span class="p">[</span><span class="s2">"flag"</span><span class="p">]</span> <span class="o">=</span> <span class="n">dataframe</span><span class="p">[</span><span class="s2">"tres"</span><span class="p">]</span> <span class="o">&gt;</span> <span class="mf">7.0</span>
      
      <span class="n">dataframe</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[¬†]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>uno</th>
      <th>dos</th>
      <th>tres</th>
      <th>flag</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>0</th>
      <td>1.0</td>
      <td>4.0</td>
      <td>5.0</td>
      <td>False</td>
      </tr>
      <tr>
      <th>1</th>
      <td>2.0</td>
      <td>5.0</td>
      <td>7.0</td>
      <td>False</td>
      </tr>
      <tr>
      <th>2</th>
      <td>3.0</td>
      <td>6.0</td>
      <td>9.0</td>
      <td>True</td>
      </tr>
      <tr>
      <th>3</th>
      <td>NaN</td>
      <td>7.0</td>
      <td>NaN</td>
      <td>False</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Tamb√©m √© poss√≠vel adicionar colunas indicando qual valor todos os seus itens ter√£o</p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">dataframe</span><span class="p">[</span><span class="s2">"constante"</span><span class="p">]</span> <span class="o">=</span> <span class="mf">8.0</span>
      <span class="n">dataframe</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[¬†]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>uno</th>
      <th>dos</th>
      <th>tres</th>
      <th>flag</th>
      <th>constante</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>0</th>
      <td>1.0</td>
      <td>4.0</td>
      <td>5.0</td>
      <td>False</td>
      <td>8.0</td>
      </tr>
      <tr>
      <th>1</th>
      <td>2.0</td>
      <td>5.0</td>
      <td>7.0</td>
      <td>False</td>
      <td>8.0</td>
      </tr>
      <tr>
      <th>2</th>
      <td>3.0</td>
      <td>6.0</td>
      <td>9.0</td>
      <td>True</td>
      <td>8.0</td>
      </tr>
      <tr>
      <th>3</th>
      <td>NaN</td>
      <td>7.0</td>
      <td>NaN</td>
      <td>False</td>
      <td>8.0</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Se uma <code>Serie</code> for adicionada e n√£o tiver o mesmo n√∫mero de √≠ndices que o <code>DataFrame</code>, ela ser√° ajustada ao n√∫mero de √≠ndices do <code>DataFrame</code>.</p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">dataframe</span><span class="p">[</span><span class="s2">"Menos indices"</span><span class="p">]</span> <span class="o">=</span> <span class="n">dataframe</span><span class="p">[</span><span class="s2">"uno"</span><span class="p">][:</span><span class="mi">2</span><span class="p">]</span>
      <span class="n">dataframe</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[¬†]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>uno</th>
      <th>dos</th>
      <th>tres</th>
      <th>flag</th>
      <th>constante</th>
      <th>Menos indices</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>0</th>
      <td>1.0</td>
      <td>4.0</td>
      <td>5.0</td>
      <td>False</td>
      <td>8.0</td>
      <td>1.0</td>
      </tr>
      <tr>
      <th>1</th>
      <td>2.0</td>
      <td>5.0</td>
      <td>7.0</td>
      <td>False</td>
      <td>8.0</td>
      <td>2.0</td>
      </tr>
      <tr>
      <th>2</th>
      <td>3.0</td>
      <td>6.0</td>
      <td>9.0</td>
      <td>True</td>
      <td>8.0</td>
      <td>NaN</td>
      </tr>
      <tr>
      <th>3</th>
      <td>NaN</td>
      <td>7.0</td>
      <td>NaN</td>
      <td>False</td>
      <td>8.0</td>
      <td>NaN</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Com os m√©todos anteriores a coluna era adicionada no final, mas se quiser adicionar a coluna em uma posi√ß√£o espec√≠fica, pode-se utilizar o m√©todo <code>insert()</code>.</p>
      <p>Por exemplo, se quiser adicionar uma coluna na posi√ß√£o 3 (considerando que a contagem come√ßa na posi√ß√£o 0), que o nome da coluna seja <em>coluna inserida</em> e que seu valor seja o dobro do da coluna <em>tres</em>, faria-se da seguinte maneira</p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">dataframe</span><span class="o">.</span><span class="n">insert</span><span class="p">(</span><span class="n">loc</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span> <span class="n">column</span><span class="o">=</span><span class="s2">"columna insertada"</span><span class="p">,</span> <span class="n">value</span><span class="o">=</span><span class="n">dataframe</span><span class="p">[</span><span class="s2">"tres"</span><span class="p">]</span><span class="o">*</span><span class="mi">2</span><span class="p">)</span>
      <span class="n">dataframe</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[¬†]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>uno</th>
      <th>dos</th>
      <th>tres</th>
      <th>columna insertada</th>
      <th>flag</th>
      <th>constante</th>
      <th>Menos indices</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>0</th>
      <td>1.0</td>
      <td>4.0</td>
      <td>5.0</td>
      <td>10.0</td>
      <td>False</td>
      <td>8.0</td>
      <td>1.0</td>
      </tr>
      <tr>
      <th>1</th>
      <td>2.0</td>
      <td>5.0</td>
      <td>7.0</td>
      <td>14.0</td>
      <td>False</td>
      <td>8.0</td>
      <td>2.0</td>
      </tr>
      <tr>
      <th>2</th>
      <td>3.0</td>
      <td>6.0</td>
      <td>9.0</td>
      <td>18.0</td>
      <td>True</td>
      <td>8.0</td>
      <td>NaN</td>
      </tr>
      <tr>
      <th>3</th>
      <td>NaN</td>
      <td>7.0</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>False</td>
      <td>8.0</td>
      <td>NaN</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Se quiser adicionar mais de uma coluna por comando, pode-se usar o m√©todo <code>assign()</code></p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">dataframe</span> <span class="o">=</span> <span class="n">dataframe</span><span class="o">.</span><span class="n">assign</span><span class="p">(</span>
          <span class="n">columna_asignada1</span> <span class="o">=</span> <span class="n">dataframe</span><span class="p">[</span><span class="s2">"uno"</span><span class="p">]</span> <span class="o">*</span> <span class="n">dataframe</span><span class="p">[</span><span class="s2">"tres"</span><span class="p">],</span>
          <span class="n">columna_asignada2</span> <span class="o">=</span> <span class="n">dataframe</span><span class="p">[</span><span class="s2">"dos"</span><span class="p">]</span> <span class="o">*</span> <span class="n">dataframe</span><span class="p">[</span><span class="s2">"tres"</span><span class="p">],</span>
          <span class="p">)</span>
      <span class="n">dataframe</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[¬†]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>uno</th>
      <th>dos</th>
      <th>tres</th>
      <th>columna insertada</th>
      <th>flag</th>
      <th>constante</th>
      <th>Menos indices</th>
      <th>columna_asignada1</th>
      <th>columna_asignada2</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>0</th>
      <td>1.0</td>
      <td>4.0</td>
      <td>5.0</td>
      <td>10.0</td>
      <td>False</td>
      <td>8.0</td>
      <td>1.0</td>
      <td>5.0</td>
      <td>20.0</td>
      </tr>
      <tr>
      <th>1</th>
      <td>2.0</td>
      <td>5.0</td>
      <td>7.0</td>
      <td>14.0</td>
      <td>False</td>
      <td>8.0</td>
      <td>2.0</td>
      <td>14.0</td>
      <td>35.0</td>
      </tr>
      <tr>
      <th>2</th>
      <td>3.0</td>
      <td>6.0</td>
      <td>9.0</td>
      <td>18.0</td>
      <td>True</td>
      <td>8.0</td>
      <td>NaN</td>
      <td>27.0</td>
      <td>54.0</td>
      </tr>
      <tr>
      <th>3</th>
      <td>NaN</td>
      <td>7.0</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>False</td>
      <td>8.0</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="5.2.-Adi%C3%A7%C3%A3o-de-linhas">5.2. Adi√ß√£o de linhas<a class="anchor-link" href="#5.2.-Adi%C3%A7%C3%A3o-de-linhas"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 168" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">diccionario</span> <span class="o">=</span> <span class="p">{opening_brace}</span>
          <span class="s2">"uno"</span><span class="p">:</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">([</span><span class="mf">1.0</span><span class="p">,</span> <span class="mf">2.0</span><span class="p">,</span> <span class="mf">3.0</span><span class="p">]),</span>
          <span class="s2">"dos"</span><span class="p">:</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">([</span><span class="mf">4.0</span><span class="p">,</span> <span class="mf">5.0</span><span class="p">,</span> <span class="mf">6.0</span><span class="p">,</span> <span class="mf">7.0</span><span class="p">])</span>
          <span class="p">{closing_brace}</span>
      
      <span class="n">dataframe</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">diccionario</span><span class="p">)</span>
      
      <span class="n">dataframe</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[20]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>uno</th>
      <th>dos</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>0</th>
      <td>1.0</td>
      <td>4.0</td>
      </tr>
      <tr>
      <th>1</th>
      <td>2.0</td>
      <td>5.0</td>
      </tr>
      <tr>
      <th>2</th>
      <td>3.0</td>
      <td>6.0</td>
      </tr>
      <tr>
      <th>3</th>
      <td>NaN</td>
      <td>7.0</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Podemos adicionar uma linha no final com o m√©todo <code>concat</code> (que veremos com mais detalhes depois)</p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">diccionario</span> <span class="o">=</span> <span class="p">{opening_brace}</span>
          <span class="s2">"uno"</span><span class="p">:</span> <span class="p">[</span><span class="mf">10.0</span><span class="p">],</span>
          <span class="s2">"dos"</span><span class="p">:</span> <span class="p">[</span><span class="mf">20.0</span><span class="p">]</span>
          <span class="p">{closing_brace}</span>
      
      <span class="n">dataframe</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">concat</span><span class="p">([</span><span class="n">dataframe</span><span class="p">,</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">diccionario</span><span class="p">)])</span>
      <span class="n">dataframe</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[21]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>uno</th>
      <th>dos</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>0</th>
      <td>1.0</td>
      <td>4.0</td>
      </tr>
      <tr>
      <th>1</th>
      <td>2.0</td>
      <td>5.0</td>
      </tr>
      <tr>
      <th>2</th>
      <td>3.0</td>
      <td>6.0</td>
      </tr>
      <tr>
      <th>3</th>
      <td>NaN</td>
      <td>7.0</td>
      </tr>
      <tr>
      <th>0</th>
      <td>10.0</td>
      <td>20.0</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Vemos que a coluna foi adicionada no final, mas possui o √≠ndice zero, ent√£o reorganizamos os √≠ndices atrav√©s do m√©todo <code>reset_index(drop=True)</code></p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">dataframe</span> <span class="o">=</span> <span class="n">dataframe</span><span class="o">.</span><span class="n">reset_index</span><span class="p">(</span><span class="n">drop</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
      <span class="n">dataframe</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[23]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>index</th>
      <th>uno</th>
      <th>dos</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>0</th>
      <td>0</td>
      <td>1.0</td>
      <td>4.0</td>
      </tr>
      <tr>
      <th>1</th>
      <td>1</td>
      <td>2.0</td>
      <td>5.0</td>
      </tr>
      <tr>
      <th>2</th>
      <td>2</td>
      <td>3.0</td>
      <td>6.0</td>
      </tr>
      <tr>
      <th>3</th>
      <td>3</td>
      <td>NaN</td>
      <td>7.0</td>
      </tr>
      <tr>
      <th>4</th>
      <td>0</td>
      <td>10.0</td>
      <td>20.0</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <h2 id="6.-Elimina%C3%A7ao-de-dados">6. Elimina√ßao de dados<a class="anchor-link" href="#6.-Elimina%C3%A7ao-de-dados"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 169" src={svg_paths.link_svg_path}/></a></h2>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="6.1.-Elimina%C3%A7%C3%A3o-de-colunas">6.1. Elimina√ß√£o de colunas<a class="anchor-link" href="#6.1.-Elimina%C3%A7%C3%A3o-de-colunas"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 170" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Pode-se eliminar uma coluna espec√≠fica utilizando o m√©todo <code>pop()</code></p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">dataframe</span><span class="o">.</span><span class="n">pop</span><span class="p">(</span><span class="s2">"constante"</span><span class="p">)</span>
      <span class="n">dataframe</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[¬†]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>uno</th>
      <th>dos</th>
      <th>tres</th>
      <th>columna insertada</th>
      <th>flag</th>
      <th>Menos indices</th>
      <th>columna_asignada1</th>
      <th>columna_asignada2</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>0</th>
      <td>1.0</td>
      <td>4.0</td>
      <td>5.0</td>
      <td>10.0</td>
      <td>False</td>
      <td>1.0</td>
      <td>5.0</td>
      <td>20.0</td>
      </tr>
      <tr>
      <th>1</th>
      <td>2.0</td>
      <td>5.0</td>
      <td>7.0</td>
      <td>14.0</td>
      <td>False</td>
      <td>2.0</td>
      <td>14.0</td>
      <td>35.0</td>
      </tr>
      <tr>
      <th>2</th>
      <td>3.0</td>
      <td>6.0</td>
      <td>9.0</td>
      <td>18.0</td>
      <td>True</td>
      <td>NaN</td>
      <td>27.0</td>
      <td>54.0</td>
      </tr>
      <tr>
      <th>3</th>
      <td>NaN</td>
      <td>7.0</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>False</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>O mediante <code>del</code></p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="k">del</span> <span class="n">dataframe</span><span class="p">[</span><span class="s2">"flag"</span><span class="p">]</span>
      <span class="n">dataframe</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[¬†]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>uno</th>
      <th>dos</th>
      <th>tres</th>
      <th>columna insertada</th>
      <th>Menos indices</th>
      <th>columna_asignada1</th>
      <th>columna_asignada2</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>0</th>
      <td>1.0</td>
      <td>4.0</td>
      <td>5.0</td>
      <td>10.0</td>
      <td>1.0</td>
      <td>5.0</td>
      <td>20.0</td>
      </tr>
      <tr>
      <th>1</th>
      <td>2.0</td>
      <td>5.0</td>
      <td>7.0</td>
      <td>14.0</td>
      <td>2.0</td>
      <td>14.0</td>
      <td>35.0</td>
      </tr>
      <tr>
      <th>2</th>
      <td>3.0</td>
      <td>6.0</td>
      <td>9.0</td>
      <td>18.0</td>
      <td>NaN</td>
      <td>27.0</td>
      <td>54.0</td>
      </tr>
      <tr>
      <th>3</th>
      <td>NaN</td>
      <td>7.0</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="6.1.-Elimina%C3%A7%C3%A3o-de-linhas">6.1. Elimina√ß√£o de linhas<a class="anchor-link" href="#6.1.-Elimina%C3%A7%C3%A3o-de-linhas"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 171" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">diccionario</span> <span class="o">=</span> <span class="p">{opening_brace}</span>
          <span class="s2">"uno"</span><span class="p">:</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">([</span><span class="mf">1.0</span><span class="p">,</span> <span class="mf">2.0</span><span class="p">,</span> <span class="mf">3.0</span><span class="p">,</span> <span class="mf">4.0</span><span class="p">,</span> <span class="mf">5.0</span><span class="p">,</span> <span class="mf">6.0</span><span class="p">,</span> <span class="mf">7.0</span><span class="p">,</span> <span class="mf">8.0</span><span class="p">,</span> <span class="mf">9.0</span><span class="p">,</span> <span class="mf">10.0</span><span class="p">]),</span>
          <span class="s2">"dos"</span><span class="p">:</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">([</span><span class="mf">11.0</span><span class="p">,</span> <span class="mf">12.0</span><span class="p">,</span> <span class="mf">13.0</span><span class="p">,</span> <span class="mf">14.0</span><span class="p">,</span> <span class="mf">15.0</span><span class="p">,</span> <span class="mf">16.0</span><span class="p">,</span> <span class="mf">17.0</span><span class="p">,</span> <span class="mf">18.0</span><span class="p">,</span> <span class="mf">19.0</span><span class="p">,</span> <span class="mf">20.0</span><span class="p">]),</span>
          <span class="s2">"tres"</span><span class="p">:</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">([</span><span class="mf">21.0</span><span class="p">,</span> <span class="mf">22.0</span><span class="p">,</span> <span class="mf">23.0</span><span class="p">,</span> <span class="mf">24.0</span><span class="p">,</span> <span class="mf">25.0</span><span class="p">,</span> <span class="mf">26.0</span><span class="p">,</span> <span class="mf">27.0</span><span class="p">,</span> <span class="mf">28.0</span><span class="p">,</span> <span class="mf">29.0</span><span class="p">,</span> <span class="mf">30.0</span><span class="p">])</span>
          <span class="p">{closing_brace}</span>
      
      <span class="n">dataframe</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">diccionario</span><span class="p">)</span>
      
      <span class="n">dataframe</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[49]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>uno</th>
      <th>dos</th>
      <th>tres</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>0</th>
      <td>1.0</td>
      <td>11.0</td>
      <td>21.0</td>
      </tr>
      <tr>
      <th>1</th>
      <td>2.0</td>
      <td>12.0</td>
      <td>22.0</td>
      </tr>
      <tr>
      <th>2</th>
      <td>3.0</td>
      <td>13.0</td>
      <td>23.0</td>
      </tr>
      <tr>
      <th>3</th>
      <td>4.0</td>
      <td>14.0</td>
      <td>24.0</td>
      </tr>
      <tr>
      <th>4</th>
      <td>5.0</td>
      <td>15.0</td>
      <td>25.0</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Se quisermos remover uma linha, podemos usar o m√©todo <code>drop</code>, especificando sua posi√ß√£o. Por exemplo, se quisermos remover a linha da posi√ß√£o 1</p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">dataframe</span> <span class="o">=</span> <span class="n">dataframe</span><span class="o">.</span><span class="n">drop</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
      <span class="n">dataframe</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[50]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>uno</th>
      <th>dos</th>
      <th>tres</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>0</th>
      <td>1.0</td>
      <td>11.0</td>
      <td>21.0</td>
      </tr>
      <tr>
      <th>2</th>
      <td>3.0</td>
      <td>13.0</td>
      <td>23.0</td>
      </tr>
      <tr>
      <th>3</th>
      <td>4.0</td>
      <td>14.0</td>
      <td>24.0</td>
      </tr>
      <tr>
      <th>4</th>
      <td>5.0</td>
      <td>15.0</td>
      <td>25.0</td>
      </tr>
      <tr>
      <th>5</th>
      <td>6.0</td>
      <td>16.0</td>
      <td>26.0</td>
      </tr>
      <tr>
      <th>6</th>
      <td>7.0</td>
      <td>17.0</td>
      <td>27.0</td>
      </tr>
      <tr>
      <th>7</th>
      <td>8.0</td>
      <td>18.0</td>
      <td>28.0</td>
      </tr>
      <tr>
      <th>8</th>
      <td>9.0</td>
      <td>19.0</td>
      <td>29.0</td>
      </tr>
      <tr>
      <th>9</th>
      <td>10.0</td>
      <td>20.0</td>
      <td>30.0</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Se quisermos eliminar a √∫ltima linha</p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">dataframe</span> <span class="o">=</span> <span class="n">dataframe</span><span class="o">.</span><span class="n">drop</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">dataframe</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
      <span class="n">dataframe</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[51]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>uno</th>
      <th>dos</th>
      <th>tres</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>0</th>
      <td>1.0</td>
      <td>11.0</td>
      <td>21.0</td>
      </tr>
      <tr>
      <th>2</th>
      <td>3.0</td>
      <td>13.0</td>
      <td>23.0</td>
      </tr>
      <tr>
      <th>3</th>
      <td>4.0</td>
      <td>14.0</td>
      <td>24.0</td>
      </tr>
      <tr>
      <th>4</th>
      <td>5.0</td>
      <td>15.0</td>
      <td>25.0</td>
      </tr>
      <tr>
      <th>5</th>
      <td>6.0</td>
      <td>16.0</td>
      <td>26.0</td>
      </tr>
      <tr>
      <th>6</th>
      <td>7.0</td>
      <td>17.0</td>
      <td>27.0</td>
      </tr>
      <tr>
      <th>7</th>
      <td>8.0</td>
      <td>18.0</td>
      <td>28.0</td>
      </tr>
      <tr>
      <th>9</th>
      <td>10.0</td>
      <td>20.0</td>
      <td>30.0</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Se quisermos remover um intervalo de linhas</p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">dataframe</span> <span class="o">=</span> <span class="n">dataframe</span><span class="o">.</span><span class="n">drop</span><span class="p">(</span><span class="nb">range</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">5</span><span class="p">))</span>
      <span class="n">dataframe</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[52]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>uno</th>
      <th>dos</th>
      <th>tres</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>0</th>
      <td>1.0</td>
      <td>11.0</td>
      <td>21.0</td>
      </tr>
      <tr>
      <th>5</th>
      <td>6.0</td>
      <td>16.0</td>
      <td>26.0</td>
      </tr>
      <tr>
      <th>6</th>
      <td>7.0</td>
      <td>17.0</td>
      <td>27.0</td>
      </tr>
      <tr>
      <th>7</th>
      <td>8.0</td>
      <td>18.0</td>
      <td>28.0</td>
      </tr>
      <tr>
      <th>9</th>
      <td>10.0</td>
      <td>20.0</td>
      <td>30.0</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Se quisermos remover um conjunto de linhas determinado</p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">dataframe</span> <span class="o">=</span> <span class="n">dataframe</span><span class="o">.</span><span class="n">drop</span><span class="p">([</span><span class="mi">5</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">9</span><span class="p">])</span>
      <span class="n">dataframe</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[53]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>uno</th>
      <th>dos</th>
      <th>tres</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>0</th>
      <td>1.0</td>
      <td>11.0</td>
      <td>21.0</td>
      </tr>
      <tr>
      <th>6</th>
      <td>7.0</td>
      <td>17.0</td>
      <td>27.0</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Assim como quando adicionamos linhas, vemos que alguns √≠ndices foram removidos, ent√£o reorganizamos os √≠ndices usando o m√©todo <code>reset_index(drop=True)</code></p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">dataframe</span> <span class="o">=</span> <span class="n">dataframe</span><span class="o">.</span><span class="n">reset_index</span><span class="p">(</span><span class="n">drop</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
      <span class="n">dataframe</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[54]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>uno</th>
      <th>dos</th>
      <th>tres</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>0</th>
      <td>1.0</td>
      <td>11.0</td>
      <td>21.0</td>
      </tr>
      <tr>
      <th>1</th>
      <td>7.0</td>
      <td>17.0</td>
      <td>27.0</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <h2 id="7.-Opera%C3%A7%C3%B5es-sobre-DataFrames">7. Opera√ß√µes sobre DataFrames<a class="anchor-link" href="#7.-Opera%C3%A7%C3%B5es-sobre-DataFrames"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 172" src={svg_paths.link_svg_path}/></a></h2>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Opera√ß√µes podem ser realizadas em <code>DataFrame</code>s da mesma forma que podem ser feitas com Numpy.</p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">diccionario</span> <span class="o">=</span> <span class="p">{opening_brace}</span>
          <span class="s2">"uno"</span><span class="p">:</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">([</span><span class="mf">1.0</span><span class="p">,</span> <span class="mf">2.0</span><span class="p">,</span> <span class="mf">3.0</span><span class="p">,</span> <span class="mf">4.0</span><span class="p">,</span> <span class="mf">5.0</span><span class="p">,</span> <span class="mf">6.0</span><span class="p">,</span> <span class="mf">7.0</span><span class="p">,</span> <span class="mf">8.0</span><span class="p">,</span> <span class="mf">9.0</span><span class="p">,</span> <span class="mf">10.0</span><span class="p">]),</span>
          <span class="s2">"dos"</span><span class="p">:</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">([</span><span class="mf">11.0</span><span class="p">,</span> <span class="mf">12.0</span><span class="p">,</span> <span class="mf">13.0</span><span class="p">,</span> <span class="mf">14.0</span><span class="p">,</span> <span class="mf">15.0</span><span class="p">,</span> <span class="mf">16.0</span><span class="p">,</span> <span class="mf">17.0</span><span class="p">,</span> <span class="mf">18.0</span><span class="p">,</span> <span class="mf">19.0</span><span class="p">,</span> <span class="mf">20.0</span><span class="p">]),</span>
          <span class="s2">"tres"</span><span class="p">:</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">([</span><span class="mf">21.0</span><span class="p">,</span> <span class="mf">22.0</span><span class="p">,</span> <span class="mf">23.0</span><span class="p">,</span> <span class="mf">24.0</span><span class="p">,</span> <span class="mf">25.0</span><span class="p">,</span> <span class="mf">26.0</span><span class="p">,</span> <span class="mf">27.0</span><span class="p">,</span> <span class="mf">28.0</span><span class="p">,</span> <span class="mf">29.0</span><span class="p">,</span> <span class="mf">30.0</span><span class="p">])</span>
          <span class="p">{closing_brace}</span>
      
      <span class="n">dataframe</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">diccionario</span><span class="p">)</span>
      
      <span class="n">dataframe</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[58]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>uno</th>
      <th>dos</th>
      <th>tres</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>0</th>
      <td>1.0</td>
      <td>11.0</td>
      <td>21.0</td>
      </tr>
      <tr>
      <th>1</th>
      <td>2.0</td>
      <td>12.0</td>
      <td>22.0</td>
      </tr>
      <tr>
      <th>2</th>
      <td>3.0</td>
      <td>13.0</td>
      <td>23.0</td>
      </tr>
      <tr>
      <th>3</th>
      <td>4.0</td>
      <td>14.0</td>
      <td>24.0</td>
      </tr>
      <tr>
      <th>4</th>
      <td>5.0</td>
      <td>15.0</td>
      <td>25.0</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">dataframe</span><span class="p">[</span> <span class="p">[</span><span class="s2">"uno"</span><span class="p">,</span> <span class="s2">"dos"</span><span class="p">,</span> <span class="s2">"tres"</span><span class="p">]</span> <span class="p">]</span> <span class="o">*</span> <span class="mi">2</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[59]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>uno</th>
      <th>dos</th>
      <th>tres</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>0</th>
      <td>2.0</td>
      <td>22.0</td>
      <td>42.0</td>
      </tr>
      <tr>
      <th>1</th>
      <td>4.0</td>
      <td>24.0</td>
      <td>44.0</td>
      </tr>
      <tr>
      <th>2</th>
      <td>6.0</td>
      <td>26.0</td>
      <td>46.0</td>
      </tr>
      <tr>
      <th>3</th>
      <td>8.0</td>
      <td>28.0</td>
      <td>48.0</td>
      </tr>
      <tr>
      <th>4</th>
      <td>10.0</td>
      <td>30.0</td>
      <td>50.0</td>
      </tr>
      <tr>
      <th>5</th>
      <td>12.0</td>
      <td>32.0</td>
      <td>52.0</td>
      </tr>
      <tr>
      <th>6</th>
      <td>14.0</td>
      <td>34.0</td>
      <td>54.0</td>
      </tr>
      <tr>
      <th>7</th>
      <td>16.0</td>
      <td>36.0</td>
      <td>56.0</td>
      </tr>
      <tr>
      <th>8</th>
      <td>18.0</td>
      <td>38.0</td>
      <td>58.0</td>
      </tr>
      <tr>
      <th>9</th>
      <td>20.0</td>
      <td>40.0</td>
      <td>60.0</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">np</span><span class="o">.</span><span class="n">exp</span><span class="p">(</span><span class="n">dataframe</span><span class="p">[</span> <span class="p">[</span><span class="s2">"uno"</span><span class="p">,</span> <span class="s2">"dos"</span><span class="p">,</span> <span class="s2">"tres"</span><span class="p">]</span> <span class="p">])</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[60]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>uno</th>
      <th>dos</th>
      <th>tres</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>0</th>
      <td>2.718282</td>
      <td>5.987414e+04</td>
      <td>1.318816e+09</td>
      </tr>
      <tr>
      <th>1</th>
      <td>7.389056</td>
      <td>1.627548e+05</td>
      <td>3.584913e+09</td>
      </tr>
      <tr>
      <th>2</th>
      <td>20.085537</td>
      <td>4.424134e+05</td>
      <td>9.744803e+09</td>
      </tr>
      <tr>
      <th>3</th>
      <td>54.598150</td>
      <td>1.202604e+06</td>
      <td>2.648912e+10</td>
      </tr>
      <tr>
      <th>4</th>
      <td>148.413159</td>
      <td>3.269017e+06</td>
      <td>7.200490e+10</td>
      </tr>
      <tr>
      <th>5</th>
      <td>403.428793</td>
      <td>8.886111e+06</td>
      <td>1.957296e+11</td>
      </tr>
      <tr>
      <th>6</th>
      <td>1096.633158</td>
      <td>2.415495e+07</td>
      <td>5.320482e+11</td>
      </tr>
      <tr>
      <th>7</th>
      <td>2980.957987</td>
      <td>6.565997e+07</td>
      <td>1.446257e+12</td>
      </tr>
      <tr>
      <th>8</th>
      <td>8103.083928</td>
      <td>1.784823e+08</td>
      <td>3.931334e+12</td>
      </tr>
      <tr>
      <th>9</th>
      <td>22026.465795</td>
      <td>4.851652e+08</td>
      <td>1.068647e+13</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Se quiser realizar opera√ß√µes mais complexas, pode-se usar o m√©todo <code>apply()</code>.</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="n">dataframe</span> <span class="o">=</span> <span class="n">dataframe</span><span class="o">.</span><span class="n">apply</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">x</span><span class="o">.</span><span class="n">max</span><span class="p">()</span> <span class="o">-</span> <span class="n">x</span><span class="o">.</span><span class="n">min</span><span class="p">())</span>',
          '<span class="n">dataframe</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'uno     9.0',
          'dos     9.0',
          'tres    9.0',
          'dtype: float64',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Foi aplicada uma fun√ß√£o <code>lambda</code> porque √© uma fun√ß√£o simples, mas em caso de querer aplicar fun√ß√µes mais complexas, podemos defini-las e aplic√°-las.</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="k">def</span> <span class="nf">funcion</span><span class="p">(</span><span class="n">x</span><span class="p">):</span>',
          '    <span class="k">if</span> <span class="n">x</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="p">:</span>',
          '        <span class="k">return</span> <span class="n">np</span><span class="o">.</span><span class="n">exp</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="o">-</span> <span class="n">np</span><span class="o">.</span><span class="n">log</span><span class="p">(</span><span class="mi">5</span><span class="o">*</span><span class="n">x</span><span class="p">)</span> <span class="o">+</span> <span class="n">np</span><span class="o">.</span><span class="n">sqrt</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>',
          '    <span class="k">elif</span> <span class="n">x</span> <span class="o">&lt;</span> <span class="mi">20</span><span class="p">:</span>',
          '        <span class="k">return</span> <span class="n">np</span><span class="o">.</span><span class="n">sin</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="o">+</span> <span class="n">np</span><span class="o">.</span><span class="n">cos</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="o">+</span> <span class="n">np</span><span class="o">.</span><span class="n">tan</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>',
          '    <span class="k">else</span><span class="p">:</span>',
          '        <span class="k">return</span> <span class="n">np</span><span class="o">.</span><span class="n">log</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="o">+</span> <span class="n">np</span><span class="o">.</span><span class="n">log10</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="o">+</span> <span class="n">np</span><span class="o">.</span><span class="n">log2</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>',
          '    ',
          '<span class="n">dataframe</span> <span class="o">=</span> <span class="n">dataframe</span><span class="o">.</span><span class="n">apply</span><span class="p">(</span><span class="n">funcion</span><span class="p">)</span>',
          '',
          '<span class="n">dataframe</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'uno     8102.277265',
          'dos     8102.277265',
          'tres    8102.277265',
          'dtype: float64',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Utilizar o m√©todo <code>apply</code> em um DataFrame √© muito mais r√°pido que fazer um <code>for</code> para cada uma das linhas e realizar a opera√ß√£o.</p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">california_housing_train</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s2">"https://raw.githubusercontent.com/maximofn/portafolio/main/posts/california_housing_train.csv"</span><span class="p">)</span>
      <span class="n">california_housing_train</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[64]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>longitude</th>
      <th>latitude</th>
      <th>housing_median_age</th>
      <th>total_rooms</th>
      <th>total_bedrooms</th>
      <th>population</th>
      <th>households</th>
      <th>median_income</th>
      <th>median_house_value</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>0</th>
      <td>-114.31</td>
      <td>34.19</td>
      <td>15.0</td>
      <td>5612.0</td>
      <td>1283.0</td>
      <td>1015.0</td>
      <td>472.0</td>
      <td>1.4936</td>
      <td>66900.0</td>
      </tr>
      <tr>
      <th>1</th>
      <td>-114.47</td>
      <td>34.40</td>
      <td>19.0</td>
      <td>7650.0</td>
      <td>1901.0</td>
      <td>1129.0</td>
      <td>463.0</td>
      <td>1.8200</td>
      <td>80100.0</td>
      </tr>
      <tr>
      <th>2</th>
      <td>-114.56</td>
      <td>33.69</td>
      <td>17.0</td>
      <td>720.0</td>
      <td>174.0</td>
      <td>333.0</td>
      <td>117.0</td>
      <td>1.6509</td>
      <td>85700.0</td>
      </tr>
      <tr>
      <th>3</th>
      <td>-114.57</td>
      <td>33.64</td>
      <td>14.0</td>
      <td>1501.0</td>
      <td>337.0</td>
      <td>515.0</td>
      <td>226.0</td>
      <td>3.1917</td>
      <td>73400.0</td>
      </tr>
      <tr>
      <th>4</th>
      <td>-114.57</td>
      <td>33.57</td>
      <td>20.0</td>
      <td>1454.0</td>
      <td>326.0</td>
      <td>624.0</td>
      <td>262.0</td>
      <td>1.9250</td>
      <td>65500.0</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Vamos a calcular o percentual de quartos em rela√ß√£o ao total de c√¥modos</p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">california_housing_train</span><span class="p">[</span><span class="s2">"percent_bedrooms"</span><span class="p">]</span> <span class="o">=</span> <span class="kc">None</span>
      <span class="o">%</span><span class="k">time</span> california_housing_train["percent_bedrooms"] = california_housing_train.apply(lambda x: x["total_bedrooms"] / x["total_rooms"], axis=1)
      <span class="n">california_housing_train</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt"></div>
      <div class="output-subarea-output-stream-output-stdout-output-text">
      <pre>CPU times: user 309 ms, sys: 86 ¬µs, total: 309 ms
      Wall time: 309 ms
      </pre>
      </div>
      </div>
      <div class="output-area">
      <div class="prompt-output-prompt">Out[74]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>longitude</th>
      <th>latitude</th>
      <th>housing_median_age</th>
      <th>total_rooms</th>
      <th>total_bedrooms</th>
      <th>population</th>
      <th>households</th>
      <th>median_income</th>
      <th>median_house_value</th>
      <th>percent_bedrooms</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>0</th>
      <td>-114.31</td>
      <td>34.19</td>
      <td>15.0</td>
      <td>5612.0</td>
      <td>1283.0</td>
      <td>1015.0</td>
      <td>472.0</td>
      <td>1.4936</td>
      <td>66900.0</td>
      <td>0.228617</td>
      </tr>
      <tr>
      <th>1</th>
      <td>-114.47</td>
      <td>34.40</td>
      <td>19.0</td>
      <td>7650.0</td>
      <td>1901.0</td>
      <td>1129.0</td>
      <td>463.0</td>
      <td>1.8200</td>
      <td>80100.0</td>
      <td>0.248497</td>
      </tr>
      <tr>
      <th>2</th>
      <td>-114.56</td>
      <td>33.69</td>
      <td>17.0</td>
      <td>720.0</td>
      <td>174.0</td>
      <td>333.0</td>
      <td>117.0</td>
      <td>1.6509</td>
      <td>85700.0</td>
      <td>0.241667</td>
      </tr>
      <tr>
      <th>3</th>
      <td>-114.57</td>
      <td>33.64</td>
      <td>14.0</td>
      <td>1501.0</td>
      <td>337.0</td>
      <td>515.0</td>
      <td>226.0</td>
      <td>3.1917</td>
      <td>73400.0</td>
      <td>0.224517</td>
      </tr>
      <tr>
      <th>4</th>
      <td>-114.57</td>
      <td>33.57</td>
      <td>20.0</td>
      <td>1454.0</td>
      <td>326.0</td>
      <td>624.0</td>
      <td>262.0</td>
      <td>1.9250</td>
      <td>65500.0</td>
      <td>0.224209</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">california_housing_train</span><span class="p">[</span><span class="s2">"percent_bedrooms"</span><span class="p">]</span> <span class="o">=</span> <span class="kc">None</span>
      <span class="o">%</span><span class="k">time</span> for i in range(len(california_housing_train)): california_housing_train["percent_bedrooms"][i] = california_housing_train["total_bedrooms"][i] / california_housing_train["total_rooms"][i]
      <span class="n">california_housing_train</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt"></div>
      <div class="output-subarea-output-stream-output-stderr-output-text">
      <pre>/home/wallabot/anaconda3/lib/python3.7/site-packages/ipykernel_launcher.py:1: SettingWithCopyWarning: 
      A value is trying to be set on a copy of a slice from a DataFrame
      
      See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
        """Entry point for launching an IPython kernel.
      </pre>
      </div>
      </div>
      <div class="output-area">
      <div class="prompt"></div>
      <div class="output-subarea-output-stream-output-stdout-output-text">
      <pre>CPU times: user 1.72 s, sys: 12 ms, total: 1.73 s
      Wall time: 1.72 s
      </pre>
      </div>
      </div>
      <div class="output-area">
      <div class="prompt-output-prompt">Out[77]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>longitude</th>
      <th>latitude</th>
      <th>housing_median_age</th>
      <th>total_rooms</th>
      <th>total_bedrooms</th>
      <th>population</th>
      <th>households</th>
      <th>median_income</th>
      <th>median_house_value</th>
      <th>percent_bedrooms</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>0</th>
      <td>-114.31</td>
      <td>34.19</td>
      <td>15.0</td>
      <td>5612.0</td>
      <td>1283.0</td>
      <td>1015.0</td>
      <td>472.0</td>
      <td>1.4936</td>
      <td>66900.0</td>
      <td>0.228617</td>
      </tr>
      <tr>
      <th>1</th>
      <td>-114.47</td>
      <td>34.40</td>
      <td>19.0</td>
      <td>7650.0</td>
      <td>1901.0</td>
      <td>1129.0</td>
      <td>463.0</td>
      <td>1.8200</td>
      <td>80100.0</td>
      <td>0.248497</td>
      </tr>
      <tr>
      <th>2</th>
      <td>-114.56</td>
      <td>33.69</td>
      <td>17.0</td>
      <td>720.0</td>
      <td>174.0</td>
      <td>333.0</td>
      <td>117.0</td>
      <td>1.6509</td>
      <td>85700.0</td>
      <td>0.241667</td>
      </tr>
      <tr>
      <th>3</th>
      <td>-114.57</td>
      <td>33.64</td>
      <td>14.0</td>
      <td>1501.0</td>
      <td>337.0</td>
      <td>515.0</td>
      <td>226.0</td>
      <td>3.1917</td>
      <td>73400.0</td>
      <td>0.224517</td>
      </tr>
      <tr>
      <th>4</th>
      <td>-114.57</td>
      <td>33.57</td>
      <td>20.0</td>
      <td>1454.0</td>
      <td>326.0</td>
      <td>624.0</td>
      <td>262.0</td>
      <td>1.9250</td>
      <td>65500.0</td>
      <td>0.224209</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Com a fun√ß√£o <code>lambda</code> levou cerca de 300 ms, enquanto o loop <code>for</code> levou mais de 1 segundo.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h2 id="8.-Transposta">8. Transposta<a class="anchor-link" href="#8.-Transposta"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 173" src={svg_paths.link_svg_path}/></a></h2>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Pode-se fazer a transposta de um <code>DataFrame</code> atrav√©s do m√©todo <code>T</code></p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">diccionario</span> <span class="o">=</span> <span class="p">{opening_brace}</span>
          <span class="s2">"uno"</span><span class="p">:</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">([</span><span class="mf">1.0</span><span class="p">,</span> <span class="mf">2.0</span><span class="p">,</span> <span class="mf">3.0</span><span class="p">],</span> <span class="n">index</span><span class="o">=</span><span class="p">[</span><span class="s2">"fila a"</span><span class="p">,</span> <span class="s2">"fila b"</span><span class="p">,</span> <span class="s2">"fila c"</span><span class="p">]),</span>
          <span class="s2">"dos"</span><span class="p">:</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">([</span><span class="mf">4.0</span><span class="p">,</span> <span class="mf">5.0</span><span class="p">,</span> <span class="mf">6.0</span><span class="p">],</span> <span class="n">index</span><span class="o">=</span><span class="p">[</span><span class="s2">"fila a"</span><span class="p">,</span> <span class="s2">"fila b"</span><span class="p">,</span> <span class="s2">"fila c"</span><span class="p">])</span>
          <span class="p">{closing_brace}</span>
      
      <span class="n">dataframe</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">diccionario</span><span class="p">)</span>
      
      <span class="n">dataframe</span><span class="p">[</span><span class="s2">"tres"</span><span class="p">]</span> <span class="o">=</span> <span class="n">dataframe</span><span class="p">[</span><span class="s2">"uno"</span><span class="p">]</span> <span class="o">+</span> <span class="n">dataframe</span><span class="p">[</span><span class="s2">"dos"</span><span class="p">]</span>
      <span class="n">dataframe</span><span class="p">[</span><span class="s2">"flag"</span><span class="p">]</span> <span class="o">=</span> <span class="n">dataframe</span><span class="p">[</span><span class="s2">"tres"</span><span class="p">]</span> <span class="o">&gt;</span> <span class="mf">7.0</span>
      
      <span class="n">dataframe</span><span class="o">.</span><span class="n">T</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[¬†]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>fila a</th>
      <th>fila b</th>
      <th>fila c</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>uno</th>
      <td>1</td>
      <td>2</td>
      <td>3</td>
      </tr>
      <tr>
      <th>dos</th>
      <td>4</td>
      <td>5</td>
      <td>6</td>
      </tr>
      <tr>
      <th>tres</th>
      <td>5</td>
      <td>7</td>
      <td>9</td>
      </tr>
      <tr>
      <th>flag</th>
      <td>False</td>
      <td>False</td>
      <td>True</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <h2 id="9.-Convers%C3%A3o-para-Numpy">9. Convers√£o para Numpy<a class="anchor-link" href="#9.-Convers%C3%A3o-para-Numpy"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 174" src={svg_paths.link_svg_path}/></a></h2>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Se quiser converter uma <code>Serie</code> ou <code>DataFrame</code> para NumPy, pode-se usar o m√©todo <code>to_numpy()</code> ou a fun√ß√£o <code>np.asarray()</code>.</p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">diccionario</span> <span class="o">=</span> <span class="p">{opening_brace}</span>
          <span class="s2">"uno"</span><span class="p">:</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">([</span><span class="mf">1.0</span><span class="p">,</span> <span class="mf">2.0</span><span class="p">,</span> <span class="mf">3.0</span><span class="p">],</span> <span class="n">index</span><span class="o">=</span><span class="p">[</span><span class="s2">"fila a"</span><span class="p">,</span> <span class="s2">"fila b"</span><span class="p">,</span> <span class="s2">"fila c"</span><span class="p">]),</span>
          <span class="s2">"dos"</span><span class="p">:</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">([</span><span class="mf">4.0</span><span class="p">,</span> <span class="mf">5.0</span><span class="p">,</span> <span class="mf">6.0</span><span class="p">],</span> <span class="n">index</span><span class="o">=</span><span class="p">[</span><span class="s2">"fila a"</span><span class="p">,</span> <span class="s2">"fila b"</span><span class="p">,</span> <span class="s2">"fila c"</span><span class="p">])</span>
          <span class="p">{closing_brace}</span>
      
      <span class="n">dataframe</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">diccionario</span><span class="p">)</span>
      
      <span class="n">dataframe</span><span class="p">[</span><span class="s2">"tres"</span><span class="p">]</span> <span class="o">=</span> <span class="n">dataframe</span><span class="p">[</span><span class="s2">"uno"</span><span class="p">]</span> <span class="o">+</span> <span class="n">dataframe</span><span class="p">[</span><span class="s2">"dos"</span><span class="p">]</span>
      <span class="n">dataframe</span><span class="p">[</span><span class="s2">"flag"</span><span class="p">]</span> <span class="o">=</span> <span class="n">dataframe</span><span class="p">[</span><span class="s2">"tres"</span><span class="p">]</span> <span class="o">&gt;</span> <span class="mf">7.0</span>
      
      <span class="n">dataframe</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[¬†]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>uno</th>
      <th>dos</th>
      <th>tres</th>
      <th>flag</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>fila a</th>
      <td>1.0</td>
      <td>4.0</td>
      <td>5.0</td>
      <td>False</td>
      </tr>
      <tr>
      <th>fila b</th>
      <td>2.0</td>
      <td>5.0</td>
      <td>7.0</td>
      <td>False</td>
      </tr>
      <tr>
      <th>fila c</th>
      <td>3.0</td>
      <td>6.0</td>
      <td>9.0</td>
      <td>True</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="n">matriz_np</span> <span class="o">=</span> <span class="n">dataframe</span><span class="o">.</span><span class="n">to_numpy</span><span class="p">()</span>',
          '<span class="n">matriz_np</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'array([[1.0, 4.0, 5.0, False],',
          '       [2.0, 5.0, 7.0, False],',
          '       [3.0, 6.0, 9.0, True]], dtype=object)',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="n">matriz_np</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">asarray</span><span class="p">(</span><span class="n">dataframe</span><span class="p">)</span>',
          '<span class="n">matriz_np</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'array([[1.0, 4.0, 5.0, False],',
          '       [2.0, 5.0, 7.0, False],',
          '       [3.0, 6.0, 9.0, True]], dtype=object)',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Este exemplo n√£o √© o mais adequado, pois mistura n√∫meros com booleanos, e como j√° explicamos no post anterior <a href="https://maximofn.com/calculo-matricial-con-numpy/">C√°lculo matricial com NumPy</a>, todos os elementos de um <code>ndarray</code> devem ser do mesmo tipo.</p>
      <p>Neste caso, estamos misturando n√∫meros com booleanos, ent√£o para resolver isso, o NumPy os converte todos para objetos.</p>
      <p>Para resolver isso, ficamos apenas com os n√∫meros e os convertemos para um <code>ndarray</code>.</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="n">matriz_np</span> <span class="o">=</span> <span class="n">dataframe</span><span class="p">[</span> <span class="p">[</span><span class="s2">"uno"</span><span class="p">,</span> <span class="s2">"dos"</span><span class="p">,</span> <span class="s2">"tres"</span><span class="p">]</span> <span class="p">]</span><span class="o">.</span><span class="n">to_numpy</span><span class="p">()</span>',
          '<span class="n">matriz_np</span><span class="p">,</span> <span class="n">matriz_np</span><span class="o">.</span><span class="n">dtype</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          '(array([[1., 4., 5.],',
          '        [2., 5., 7.],',
          '        [3., 6., 9.]]), dtype(\'float64\'))',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Agora pode-se ver que foi criado um <code>ndarray</code> onde todos os dados s√£o do tipo <code>float</code>.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h2 id="10.-Leitura-de-dados-de-fontes-externas">10. Leitura de dados de fontes externas<a class="anchor-link" href="#10.-Leitura-de-dados-de-fontes-externas"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 175" src={svg_paths.link_svg_path}/></a></h2>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Uma das maiores for√ßas do Pandas √© poder ler dados de arquivos, portanto n√£o √© necess√°rio criar um <code>DataFrame</code> com os dados que se quer processar, mas sim ler esses dados de um arquivo.</p>
      <p>Da mesma forma que √© poss√≠vel criar <code>DataFrame</code>s a partir de arquivos externos, tamb√©m √© poss√≠vel salvar <code>DataFrame</code>s em arquivos, para assim criar o seu pr√≥prio conjunto de dados, configur√°-lo da maneira que desejar e salv√°-lo em um arquivo para poder us√°-lo posteriormente.</p>
      <p>Na tabela a seguir, s√£o mostradas as fun√ß√µes para ler e escrever arquivos em diferentes formatos.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <table>
      <thead>
      <tr>
      <th>Formato</th>
      <th>Tipo de arquivo</th>
      <th>Fun√ß√£o de leitura</th>
      <th>Fun√ß√£o de escrita</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <td>texto</td>
      <td>CSV</td>
      <td><a href="https://pandas.pydata.org/pandas-docs/stable/user_guide/io.html#io-read-csv-table" target="_blank" rel="nofollow noreferrer">read_csv</a></td>
      <td><a href="https://pandas.pydata.org/pandas-docs/stable/user_guide/io.html#io-store-in-csv" target="_blank" rel="nofollow noreferrer">to_csv</a></td>
      </tr>
      <tr>
      <td>texto</td>
      <td>Arquivo de texto de largura fixa</td>
      <td><a href="https://pandas.pydata.org/pandas-docs/stable/user_guide/io.html#io-fwf-reader" target="_blank" rel="nofollow noreferrer">read_fwf</a></td>
      <td></td>
      </tr>
      <tr>
      <td>texto</td>
      <td>JSON</td>
      <td><a href="https://pandas.pydata.org/pandas-docs/stable/user_guide/io.html#io-json-reader" target="_blank" rel="nofollow noreferrer">read_json</a></td>
      <td><a href="https://pandas.pydata.org/pandas-docs/stable/user_guide/io.html#io-json-writer" target="_blank" rel="nofollow noreferrer">to_json</a></td>
      </tr>
      <tr>
      <td>texto</td>
      <td>HTML</td>
      <td><a href="https://pandas.pydata.org/pandas-docs/stable/user_guide/io.html#io-read-html" target="_blank" rel="nofollow noreferrer">read_html</a></td>
      <td><a href="https://pandas.pydata.org/pandas-docs/stable/user_guide/io.html#io-html" target="_blank" rel="nofollow noreferrer">to_html</a></td>
      </tr>
      <tr>
      <td>texto</td>
      <td>Clipboard local</td>
      <td><a href="https://pandas.pydata.org/pandas-docs/stable/user_guide/io.html#io-clipboard" target="_blank" rel="nofollow noreferrer">read_clipboard</a></td>
      <td><a href="https://pandas.pydata.org/pandas-docs/stable/user_guide/io.html#io-clipboard" target="_blank" rel="nofollow noreferrer">to_clipboard</a></td>
      </tr>
      <tr>
      <td>bin√°rio</td>
      <td>MS Excel</td>
      <td><a href="https://pandas.pydata.org/pandas-docs/stable/user_guide/io.html#io-excel-reader" target="_blank" rel="nofollow noreferrer">read_excel</a></td>
      <td><a href="https://pandas.pydata.org/pandas-docs/stable/user_guide/io.html#io-excel-writer" target="_blank" rel="nofollow noreferrer">to_excel</a></td>
      </tr>
      <tr>
      <td>bin√°rio</td>
      <td>OpenDocument</td>
      <td><a href="https://pandas.pydata.org/pandas-docs/stable/user_guide/io.html#io-ods" target="_blank" rel="nofollow noreferrer">read_excel</a></td>
      <td></td>
      </tr>
      <tr>
      <td>bin√°rio</td>
      <td>Formato HDF5</td>
      <td><a href="https://pandas.pydata.org/pandas-docs/stable/user_guide/io.html#io-hdf5" target="_blank" rel="nofollow noreferrer">read_hdf</a></td>
      <td><a href="https://pandas.pydata.org/pandas-docs/stable/user_guide/io.html#io-hdf5" target="_blank" rel="nofollow noreferrer">to_hdf</a></td>
      </tr>
      <tr>
      <td>bin√°rio</td>
      <td>Formato Feather</td>
      <td><a href="https://pandas.pydata.org/pandas-docs/stable/user_guide/io.html#io-feather" target="_blank" rel="nofollow noreferrer">read_feather</a></td>
      <td><a href="https://pandas.pydata.org/pandas-docs/stable/user_guide/io.html#io-feather" target="_blank" rel="nofollow noreferrer">to_feather</a></td>
      </tr>
      <tr>
      <td>bin√°rio</td>
      <td>Formato Parquet</td>
      <td><a href="https://pandas.pydata.org/pandas-docs/stable/user_guide/io.html#io-parquet" target="_blank" rel="nofollow noreferrer">read_parquet</a></td>
      <td><a href="https://pandas.pydata.org/pandas-docs/stable/user_guide/io.html#io-parquet" target="_blank" rel="nofollow noreferrer">to_parquet</a></td>
      </tr>
      <tr>
      <td>bin√°rio</td>
      <td>Formato ORC</td>
      <td><a href="https://pandas.pydata.org/pandas-docs/stable/user_guide/io.html#io-orc" target="_blank" rel="nofollow noreferrer">read_orc</a></td>
      <td></td>
      </tr>
      <tr>
      <td>bin√°rio</td>
      <td>Msgpack</td>
      <td><a href="https://pandas.pydata.org/pandas-docs/stable/user_guide/io.html#io-msgpack" target="_blank" rel="nofollow noreferrer">read_msgpack</a></td>
      <td><a href="https://pandas.pydata.org/pandas-docs/stable/user_guide/io.html#io-msgpack" target="_blank" rel="nofollow noreferrer">to_msgpack</a></td>
      </tr>
      <tr>
      <td>bin√°rio</td>
      <td>Stata</td>
      <td><a href="https://pandas.pydata.org/pandas-docs/stable/user_guide/io.html#io-stata-reader" target="_blank" rel="nofollow noreferrer">read_stata</a></td>
      <td><a href="https://pandas.pydata.org/pandas-docs/stable/user_guide/io.html#io-stata-writer" target="_blank" rel="nofollow noreferrer">to_stata</a></td>
      </tr>
      <tr>
      <td>bin√°rio</td>
      <td>SAS</td>
      <td><a href="https://pandas.pydata.org/pandas-docs/stable/user_guide/io.html#io-sas-reader" target="_blank" rel="nofollow noreferrer">read_sas</a></td>
      <td></td>
      </tr>
      <tr>
      <td>bin√°rio</td>
      <td>SPSS</td>
      <td><a href="https://pandas.pydata.org/pandas-docs/stable/user_guide/io.html#io-spss-reader" target="_blank" rel="nofollow noreferrer">read_spss</a></td>
      <td></td>
      </tr>
      <tr>
      <td>bin√°rio</td>
      <td>Formato de Pickle do Python</td>
      <td><a href="https://pandas.pydata.org/pandas-docs/stable/user_guide/io.html#io-pickle" target="_blank" rel="nofollow noreferrer">read_pickle</a></td>
      <td><a href="https://pandas.pydata.org/pandas-docs/stable/user_guide/io.html#io-pickle" target="_blank" rel="nofollow noreferrer">to_pickle</a></td>
      </tr>
      <tr>
      <td>SQL</td>
      <td>SQL</td>
      <td><a href="https://pandas.pydata.org/pandas-docs/stable/user_guide/io.html#io-sql" target="_blank" rel="nofollow noreferrer">read_sql</a></td>
      <td><a href="https://pandas.pydata.org/pandas-docs/stable/user_guide/io.html#io-sql" target="_blank" rel="nofollow noreferrer">to_sql</a></td>
      </tr>
      <tr>
      <td>SQL</td>
      <td>Google BigQuery</td>
      <td><a href="https://pandas.pydata.org/pandas-docs/stable/user_guide/io.html#io-bigquery" target="_blank" rel="nofollow noreferrer">read_gbq</a></td>
      <td><a href="https://pandas.pydata.org/pandas-docs/stable/user_guide/io.html#io-bigquery" target="_blank" rel="nofollow noreferrer">to_gbq</a></td>
      </tr>
      </tbody>
      </table>
      </section>
      
      <section class="section-block-markdown-cell">
      <h2 id="11.-Indexa%C3%A7%C3%A3o-em-DataFrames">11. Indexa√ß√£o em DataFrames<a class="anchor-link" href="#11.-Indexa%C3%A7%C3%A3o-em-DataFrames"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 176" src={svg_paths.link_svg_path}/></a></h2>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>H√° muitas maneiras de indexar em <code>DataFrame</code>s.</p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">fechas</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">date_range</span><span class="p">(</span><span class="s1">'1/1/2000'</span><span class="p">,</span> <span class="n">periods</span><span class="o">=</span><span class="mi">8</span><span class="p">)</span>
      <span class="n">dataframe</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">randn</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span> <span class="mi">4</span><span class="p">),</span> <span class="n">index</span><span class="o">=</span><span class="n">fechas</span><span class="p">,</span> <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s1">'A'</span><span class="p">,</span> <span class="s1">'B'</span><span class="p">,</span> <span class="s1">'C'</span><span class="p">,</span> <span class="s1">'D'</span><span class="p">])</span>
      
      <span class="n">dataframe</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[56]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>A</th>
      <th>B</th>
      <th>C</th>
      <th>D</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>2000-01-01</th>
      <td>-0.869298</td>
      <td>-0.210502</td>
      <td>0.477938</td>
      <td>0.912121</td>
      </tr>
      <tr>
      <th>2000-01-02</th>
      <td>-0.502425</td>
      <td>-1.897287</td>
      <td>-0.084122</td>
      <td>-1.203818</td>
      </tr>
      <tr>
      <th>2000-01-03</th>
      <td>-0.204297</td>
      <td>0.711485</td>
      <td>-1.271802</td>
      <td>-0.138120</td>
      </tr>
      <tr>
      <th>2000-01-04</th>
      <td>1.512985</td>
      <td>0.726718</td>
      <td>0.960902</td>
      <td>0.433124</td>
      </tr>
      <tr>
      <th>2000-01-05</th>
      <td>0.724005</td>
      <td>-2.127668</td>
      <td>0.674417</td>
      <td>-0.297808</td>
      </tr>
      <tr>
      <th>2000-01-06</th>
      <td>-0.217175</td>
      <td>-0.621172</td>
      <td>0.668163</td>
      <td>0.170576</td>
      </tr>
      <tr>
      <th>2000-01-07</th>
      <td>0.352484</td>
      <td>0.260515</td>
      <td>-1.576033</td>
      <td>1.263213</td>
      </tr>
      <tr>
      <th>2000-01-08</th>
      <td>-0.032928</td>
      <td>-0.648313</td>
      <td>-0.622509</td>
      <td>0.231683</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="11.1.-Indexa%C3%A7%C3%A3o-de-colunas">11.1. Indexa√ß√£o de colunas<a class="anchor-link" href="#11.1.-Indexa%C3%A7%C3%A3o-de-colunas"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 177" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Para selecionar colunas dentro de um <code>DataFrame</code>, podemos fazer isso selecionando a coluna entre colchetes <code>[]</code>, ou indicando a coluna como se fosse um atributo do <code>DataFrame</code>.</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="n">dataframe</span><span class="p">[</span><span class="s1">\'A\'</span><span class="p">]</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          '2000-01-01    0.813153',
          '2000-01-02   -0.244584',
          '2000-01-03    0.125729',
          '2000-01-04    0.352275',
          '2000-01-05   -2.050976',
          '2000-01-06   -0.312296',
          '2000-01-07    0.897837',
          '2000-01-08    0.271403',
          'Freq: D, Name: A, dtype: float64',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="n">dataframe</span><span class="o">.</span><span class="n">A</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          '2000-01-01    0.813153',
          '2000-01-02   -0.244584',
          '2000-01-03    0.125729',
          '2000-01-04    0.352275',
          '2000-01-05   -2.050976',
          '2000-01-06   -0.312296',
          '2000-01-07    0.897837',
          '2000-01-08    0.271403',
          'Freq: D, Name: A, dtype: float64',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Se algumas linhas espec√≠ficas forem desejadas, elas s√£o passadas por meio de uma lista.</p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">dataframe</span><span class="p">[</span> <span class="p">[</span><span class="s1">'A'</span><span class="p">,</span> <span class="s1">'B'</span><span class="p">]</span> <span class="p">]</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[¬†]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>A</th>
      <th>B</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>2000-01-01</th>
      <td>-0.341962</td>
      <td>0.639913</td>
      </tr>
      <tr>
      <th>2000-01-02</th>
      <td>0.507258</td>
      <td>-0.942036</td>
      </tr>
      <tr>
      <th>2000-01-03</th>
      <td>-1.463557</td>
      <td>1.041023</td>
      </tr>
      <tr>
      <th>2000-01-04</th>
      <td>1.781058</td>
      <td>-1.849352</td>
      </tr>
      <tr>
      <th>2000-01-05</th>
      <td>0.318897</td>
      <td>-0.229218</td>
      </tr>
      <tr>
      <th>2000-01-06</th>
      <td>0.362064</td>
      <td>-0.193479</td>
      </tr>
      <tr>
      <th>2000-01-07</th>
      <td>-0.084632</td>
      <td>-0.112474</td>
      </tr>
      <tr>
      <th>2000-01-08</th>
      <td>0.739424</td>
      <td>0.253191</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="11.2.-Indexa%C3%A7%C3%A3o-de-linhas-por-posi%C3%A7%C3%B5es">11.2. Indexa√ß√£o de linhas por posi√ß√µes<a class="anchor-link" href="#11.2.-Indexa%C3%A7%C3%A3o-de-linhas-por-posi%C3%A7%C3%B5es"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 178" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Pode-se selecionar um intervalo de linhas de um <code>DataFrame</code> da seguinte maneira</p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">dataframe</span><span class="p">[</span><span class="mi">0</span><span class="p">:</span><span class="mi">3</span><span class="p">]</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[¬†]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>A</th>
      <th>B</th>
      <th>C</th>
      <th>D</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>2000-01-01</th>
      <td>0.813153</td>
      <td>-0.869356</td>
      <td>0.934293</td>
      <td>0.338644</td>
      </tr>
      <tr>
      <th>2000-01-02</th>
      <td>-0.244584</td>
      <td>0.536352</td>
      <td>0.322248</td>
      <td>0.238903</td>
      </tr>
      <tr>
      <th>2000-01-03</th>
      <td>0.125729</td>
      <td>2.046910</td>
      <td>-0.877466</td>
      <td>-0.710034</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Se quiser selecionar apenas uma linha, √© necess√°rio indicar um intervalo de linhas que inclua apenas essa. Se, por exemplo, quiser selecionar a linha n√∫mero 1</p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">dataframe</span><span class="p">[</span><span class="mi">1</span><span class="p">:</span><span class="mi">2</span><span class="p">]</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[¬†]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>A</th>
      <th>B</th>
      <th>C</th>
      <th>D</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>2000-01-02</th>
      <td>-0.244584</td>
      <td>0.536352</td>
      <td>0.322248</td>
      <td>0.238903</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Outro m√©todo para selecionar uma linha pela sua posi√ß√£o √© o m√©todo <code>iloc[]</code></p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">dataframe</span><span class="o">.</span><span class="n">iloc</span><span class="p">[</span><span class="mi">0</span><span class="p">:</span><span class="mi">3</span><span class="p">]</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[¬†]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>A</th>
      <th>B</th>
      <th>C</th>
      <th>D</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>2000-01-01</th>
      <td>0.813153</td>
      <td>-0.869356</td>
      <td>0.934293</td>
      <td>0.338644</td>
      </tr>
      <tr>
      <th>2000-01-02</th>
      <td>-0.244584</td>
      <td>0.536352</td>
      <td>0.322248</td>
      <td>0.238903</td>
      </tr>
      <tr>
      <th>2000-01-03</th>
      <td>0.125729</td>
      <td>2.046910</td>
      <td>-0.877466</td>
      <td>-0.710034</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Se quisiser algumas linhas espec√≠ficas, passa-se uma lista com suas posi√ß√µes.</p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">dataframe</span><span class="o">.</span><span class="n">iloc</span><span class="p">[</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">]</span> <span class="p">]</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[¬†]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>A</th>
      <th>B</th>
      <th>C</th>
      <th>D</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>2000-01-01</th>
      <td>-0.341962</td>
      <td>0.639913</td>
      <td>0.765817</td>
      <td>0.056692</td>
      </tr>
      <tr>
      <th>2000-01-03</th>
      <td>-1.463557</td>
      <td>1.041023</td>
      <td>-1.321715</td>
      <td>2.822735</td>
      </tr>
      <tr>
      <th>2000-01-05</th>
      <td>0.318897</td>
      <td>-0.229218</td>
      <td>-1.095593</td>
      <td>-0.186248</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="11.3.-Indexa%C3%A7%C3%A3o-de-linhas-por-r%C3%B3tulos">11.3. Indexa√ß√£o de linhas por r√≥tulos<a class="anchor-link" href="#11.3.-Indexa%C3%A7%C3%A3o-de-linhas-por-r%C3%B3tulos"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 179" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Para selecionar uma linha pelas suas etiquetas podemos usar o m√©todo <code>loc[]</code></p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="n">dataframe</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="s1">\'2000-01-01\'</span><span class="p">]</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'A    0.813153',
          'B   -0.869356',
          'C    0.934293',
          'D    0.338644',
          'Name: 2000-01-01 00:00:00, dtype: float64',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Se quiser selecionar um intervalo de linhas, podemos index√°-las usando os dois pontos <code>:</code></p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">dataframe</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="s1">'2000-01-01'</span><span class="p">:</span><span class="s1">'2000-01-03'</span><span class="p">]</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[¬†]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>A</th>
      <th>B</th>
      <th>C</th>
      <th>D</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>2000-01-01</th>
      <td>0.813153</td>
      <td>-0.869356</td>
      <td>0.934293</td>
      <td>0.338644</td>
      </tr>
      <tr>
      <th>2000-01-02</th>
      <td>-0.244584</td>
      <td>0.536352</td>
      <td>0.322248</td>
      <td>0.238903</td>
      </tr>
      <tr>
      <th>2000-01-03</th>
      <td>0.125729</td>
      <td>2.046910</td>
      <td>-0.877466</td>
      <td>-0.710034</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Se querem algumas linhas espec√≠ficas, elas s√£o passadas por meio de uma lista.</p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">dataframe</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span> <span class="p">[</span><span class="s1">'2000-01-01'</span><span class="p">,</span> <span class="s1">'2000-01-03'</span><span class="p">,</span> <span class="s1">'2000-01-05'</span><span class="p">]</span> <span class="p">]</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[¬†]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>A</th>
      <th>B</th>
      <th>C</th>
      <th>D</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>2000-01-01</th>
      <td>-0.341962</td>
      <td>0.639913</td>
      <td>0.765817</td>
      <td>0.056692</td>
      </tr>
      <tr>
      <th>2000-01-03</th>
      <td>-1.463557</td>
      <td>1.041023</td>
      <td>-1.321715</td>
      <td>2.822735</td>
      </tr>
      <tr>
      <th>2000-01-05</th>
      <td>0.318897</td>
      <td>-0.229218</td>
      <td>-1.095593</td>
      <td>-0.186248</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="11.4.-Sele%C3%A7%C3%A3o-de-uma-por%C3%A7%C3%A3o-do-DataFrame-por-posi%C3%A7%C3%B5es">11.4. Sele√ß√£o de uma por√ß√£o do DataFrame por posi√ß√µes<a class="anchor-link" href="#11.4.-Sele%C3%A7%C3%A3o-de-uma-por%C3%A7%C3%A3o-do-DataFrame-por-posi%C3%A7%C3%B5es"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 180" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">dataframe</span><span class="o">.</span><span class="n">iloc</span><span class="p">[</span><span class="mi">0</span><span class="p">:</span><span class="mi">3</span><span class="p">,</span> <span class="mi">0</span><span class="p">:</span><span class="mi">2</span><span class="p">]</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[¬†]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>A</th>
      <th>B</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>2000-01-01</th>
      <td>0.813153</td>
      <td>-0.869356</td>
      </tr>
      <tr>
      <th>2000-01-02</th>
      <td>-0.244584</td>
      <td>0.536352</td>
      </tr>
      <tr>
      <th>2000-01-03</th>
      <td>0.125729</td>
      <td>2.046910</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Se quisiser linhas e colunas espec√≠ficas, passam-se listas com as posi√ß√µes desejadas.</p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">dataframe</span><span class="o">.</span><span class="n">iloc</span><span class="p">[</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">],</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">2</span><span class="p">]</span> <span class="p">]</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[¬†]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>A</th>
      <th>C</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>2000-01-01</th>
      <td>-0.341962</td>
      <td>0.765817</td>
      </tr>
      <tr>
      <th>2000-01-03</th>
      <td>-1.463557</td>
      <td>-1.321715</td>
      </tr>
      <tr>
      <th>2000-01-05</th>
      <td>0.318897</td>
      <td>-1.095593</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="11.5.-Sele%C3%A7%C3%A3o-de-uma-por%C3%A7%C3%A3o-do-DataFrame-por-meio-de-r%C3%B3tulos">11.5. Sele√ß√£o de uma por√ß√£o do DataFrame por meio de r√≥tulos<a class="anchor-link" href="#11.5.-Sele%C3%A7%C3%A3o-de-uma-por%C3%A7%C3%A3o-do-DataFrame-por-meio-de-r%C3%B3tulos"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 181" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">dataframe</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="s1">'2000-01-01'</span><span class="p">:</span><span class="s1">'2000-01-03'</span><span class="p">,</span> <span class="s1">'A'</span><span class="p">:</span><span class="s1">'B'</span><span class="p">]</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[¬†]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>A</th>
      <th>B</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>2000-01-01</th>
      <td>0.813153</td>
      <td>-0.869356</td>
      </tr>
      <tr>
      <th>2000-01-02</th>
      <td>-0.244584</td>
      <td>0.536352</td>
      </tr>
      <tr>
      <th>2000-01-03</th>
      <td>0.125729</td>
      <td>2.046910</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Se querem algumas linhas e colunas espec√≠ficas, passam-se listas com as etiquetas desejadas</p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">dataframe</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span> <span class="p">[</span><span class="s1">'2000-01-01'</span><span class="p">,</span> <span class="s1">'2000-01-03'</span><span class="p">,</span> <span class="s1">'2000-01-05'</span><span class="p">],</span> <span class="p">[</span><span class="s1">'A'</span><span class="p">,</span> <span class="s1">'C'</span><span class="p">]</span> <span class="p">]</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[¬†]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>A</th>
      <th>C</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>2000-01-01</th>
      <td>-0.341962</td>
      <td>0.765817</td>
      </tr>
      <tr>
      <th>2000-01-03</th>
      <td>-1.463557</td>
      <td>-1.321715</td>
      </tr>
      <tr>
      <th>2000-01-05</th>
      <td>0.318897</td>
      <td>-1.095593</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="11.6.-Indexa%C3%A7%C3%A3o-por-fun%C3%A7%C3%A3o-lambda">11.6. Indexa√ß√£o por fun√ß√£o lambda<a class="anchor-link" href="#11.6.-Indexa%C3%A7%C3%A3o-por-fun%C3%A7%C3%A3o-lambda"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 182" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Dados podem ser selecionados de um <code>DataFrame</code> que atendam a uma condi√ß√£o fornecida por uma fun√ß√£o <code>lambda</code></p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">dataframe</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="k">lambda</span> <span class="n">dataframe</span><span class="p">:</span><span class="mi">2</span><span class="o">*</span><span class="n">dataframe</span><span class="p">[</span><span class="s1">'A'</span><span class="p">]</span><span class="o">+</span><span class="mi">5</span><span class="o">*</span><span class="n">np</span><span class="o">.</span><span class="n">exp</span><span class="p">(</span><span class="n">dataframe</span><span class="p">[</span><span class="s1">'B'</span><span class="p">])</span><span class="o">&gt;</span><span class="mf">0.2</span><span class="p">]</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[58]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>A</th>
      <th>B</th>
      <th>C</th>
      <th>D</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>2000-01-01</th>
      <td>-0.869298</td>
      <td>-0.210502</td>
      <td>0.477938</td>
      <td>0.912121</td>
      </tr>
      <tr>
      <th>2000-01-03</th>
      <td>-0.204297</td>
      <td>0.711485</td>
      <td>-1.271802</td>
      <td>-0.138120</td>
      </tr>
      <tr>
      <th>2000-01-04</th>
      <td>1.512985</td>
      <td>0.726718</td>
      <td>0.960902</td>
      <td>0.433124</td>
      </tr>
      <tr>
      <th>2000-01-05</th>
      <td>0.724005</td>
      <td>-2.127668</td>
      <td>0.674417</td>
      <td>-0.297808</td>
      </tr>
      <tr>
      <th>2000-01-06</th>
      <td>-0.217175</td>
      <td>-0.621172</td>
      <td>0.668163</td>
      <td>0.170576</td>
      </tr>
      <tr>
      <th>2000-01-07</th>
      <td>0.352484</td>
      <td>0.260515</td>
      <td>-1.576033</td>
      <td>1.263213</td>
      </tr>
      <tr>
      <th>2000-01-08</th>
      <td>-0.032928</td>
      <td>-0.648313</td>
      <td>-0.622509</td>
      <td>0.231683</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Como se pode ver, esta forma de indexa√ß√£o √© muito poderosa</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="11.7.-Indexa%C3%A7%C3%A3o-condicional">11.7. Indexa√ß√£o condicional<a class="anchor-link" href="#11.7.-Indexa%C3%A7%C3%A3o-condicional"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 183" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Se n√£o precisamos de fun√ß√µes complexas para indexar, mas apenas condicionais, podemos fazer</p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">dataframe</span><span class="p">[</span><span class="n">dataframe</span><span class="p">[</span><span class="s1">'A'</span><span class="p">]</span><span class="o">&gt;</span><span class="mf">0.2</span><span class="p">]</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[61]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>A</th>
      <th>B</th>
      <th>C</th>
      <th>D</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>2000-01-04</th>
      <td>1.512985</td>
      <td>0.726718</td>
      <td>0.960902</td>
      <td>0.433124</td>
      </tr>
      <tr>
      <th>2000-01-05</th>
      <td>0.724005</td>
      <td>-2.127668</td>
      <td>0.674417</td>
      <td>-0.297808</td>
      </tr>
      <tr>
      <th>2000-01-07</th>
      <td>0.352484</td>
      <td>0.260515</td>
      <td>-1.576033</td>
      <td>1.263213</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Podemos fazer m√∫ltiplas condi√ß√µes</p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">dataframe</span><span class="p">[(</span><span class="n">dataframe</span><span class="p">[</span><span class="s1">'A'</span><span class="p">]</span><span class="o">&gt;</span><span class="mf">0.2</span><span class="p">)</span> <span class="o">&amp;</span> <span class="p">(</span><span class="n">dataframe</span><span class="p">[</span><span class="s1">'B'</span><span class="p">]</span><span class="o">&gt;</span><span class="mf">0.2</span><span class="p">)]</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[69]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>A</th>
      <th>B</th>
      <th>C</th>
      <th>D</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>2000-01-04</th>
      <td>1.512985</td>
      <td>0.726718</td>
      <td>0.960902</td>
      <td>0.433124</td>
      </tr>
      <tr>
      <th>2000-01-07</th>
      <td>0.352484</td>
      <td>0.260515</td>
      <td>-1.576033</td>
      <td>1.263213</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="11.8.-Indexa%C3%A7%C3%A3o-aleat%C3%B3ria">11.8. Indexa√ß√£o aleat√≥ria<a class="anchor-link" href="#11.8.-Indexa%C3%A7%C3%A3o-aleat%C3%B3ria"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 184" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Atrav√©s do m√©todo <code>sample()</code> obteremos uma linha aleat√≥ria do <code>DataFrame</code>.</p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">dataframe</span><span class="o">.</span><span class="n">sample</span><span class="p">()</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[¬†]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>A</th>
      <th>B</th>
      <th>C</th>
      <th>D</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>2000-01-06</th>
      <td>-0.312296</td>
      <td>0.129097</td>
      <td>-0.991085</td>
      <td>1.704535</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Se quisermos mais de uma amostra, indicamos com o atributo <code>n</code></p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">dataframe</span><span class="o">.</span><span class="n">sample</span><span class="p">(</span><span class="n">n</span><span class="o">=</span><span class="mi">3</span><span class="p">)</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[¬†]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>A</th>
      <th>B</th>
      <th>C</th>
      <th>D</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>2000-01-08</th>
      <td>0.271403</td>
      <td>1.527116</td>
      <td>0.144970</td>
      <td>1.175728</td>
      </tr>
      <tr>
      <th>2000-01-01</th>
      <td>0.813153</td>
      <td>-0.869356</td>
      <td>0.934293</td>
      <td>0.338644</td>
      </tr>
      <tr>
      <th>2000-01-03</th>
      <td>0.125729</td>
      <td>2.046910</td>
      <td>-0.877466</td>
      <td>-0.710034</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Se <code>axis=1</code> for o que se quer s√£o colunas aleat√≥rias, deve-se indicar isso.</p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">dataframe</span><span class="o">.</span><span class="n">sample</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[¬†]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>D</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>2000-01-01</th>
      <td>0.338644</td>
      </tr>
      <tr>
      <th>2000-01-02</th>
      <td>0.238903</td>
      </tr>
      <tr>
      <th>2000-01-03</th>
      <td>-0.710034</td>
      </tr>
      <tr>
      <th>2000-01-04</th>
      <td>0.504410</td>
      </tr>
      <tr>
      <th>2000-01-05</th>
      <td>-1.601926</td>
      </tr>
      <tr>
      <th>2000-01-06</th>
      <td>1.704535</td>
      </tr>
      <tr>
      <th>2000-01-07</th>
      <td>-0.584860</td>
      </tr>
      <tr>
      <th>2000-01-08</th>
      <td>1.175728</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Se quiser um √∫nico item do <code>DataFrame</code>, √© necess√°rio chamar o m√©todo <code>sample()</code> duas vezes.</p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">dataframe</span><span class="o">.</span><span class="n">sample</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">sample</span><span class="p">()</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[¬†]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>D</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>2000-01-05</th>
      <td>-1.601926</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <h2 id="12.-Jun%C3%A7%C3%A3o-de-DataFrames">12. Jun√ß√£o de DataFrames<a class="anchor-link" href="#12.-Jun%C3%A7%C3%A3o-de-DataFrames"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 185" src={svg_paths.link_svg_path}/></a></h2>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="12.1.-Concatena%C3%A7%C3%A3o-de-DataFrames">12.1. Concatena√ß√£o de DataFrames<a class="anchor-link" href="#12.1.-Concatena%C3%A7%C3%A3o-de-DataFrames"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 186" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Para concatenar v√°rios <code>DataFrame</code>s usamos o m√©todo <code>concat()</code>, onde ser√° passada uma lista com os <code>DataFrame</code>s que se querem unir.</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="n">dataframe1</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span>',
          '    <span class="p">{</span>',
          '        <span class="s2">"A"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"A0"</span><span class="p">,</span> <span class="s2">"A1"</span><span class="p">,</span> <span class="s2">"A2"</span><span class="p">,</span> <span class="s2">"A3"</span><span class="p">],</span>',
          '        <span class="s2">"B"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"B0"</span><span class="p">,</span> <span class="s2">"B1"</span><span class="p">,</span> <span class="s2">"B2"</span><span class="p">,</span> <span class="s2">"B3"</span><span class="p">],</span>',
          '        <span class="s2">"C"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"C0"</span><span class="p">,</span> <span class="s2">"C1"</span><span class="p">,</span> <span class="s2">"C2"</span><span class="p">,</span> <span class="s2">"C3"</span><span class="p">],</span>',
          '        <span class="s2">"D"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"D0"</span><span class="p">,</span> <span class="s2">"D1"</span><span class="p">,</span> <span class="s2">"D2"</span><span class="p">,</span> <span class="s2">"D3"</span><span class="p">],</span>',
          '     <span class="p">})</span>',
          '',
          '<span class="n">dataframe2</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span>',
          '    <span class="p">{</span>',
          '        <span class="s2">"A"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"A4"</span><span class="p">,</span> <span class="s2">"A5"</span><span class="p">,</span> <span class="s2">"A6"</span><span class="p">,</span> <span class="s2">"A7"</span><span class="p">],</span>',
          '        <span class="s2">"B"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"B4"</span><span class="p">,</span> <span class="s2">"B5"</span><span class="p">,</span> <span class="s2">"B6"</span><span class="p">,</span> <span class="s2">"B7"</span><span class="p">],</span>',
          '        <span class="s2">"C"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"C4"</span><span class="p">,</span> <span class="s2">"C5"</span><span class="p">,</span> <span class="s2">"C6"</span><span class="p">,</span> <span class="s2">"C7"</span><span class="p">],</span>',
          '        <span class="s2">"D"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"D4"</span><span class="p">,</span> <span class="s2">"D5"</span><span class="p">,</span> <span class="s2">"D6"</span><span class="p">,</span> <span class="s2">"D7"</span><span class="p">],</span>',
          '     <span class="p">})</span>',
          '',
          '<span class="n">dataframe3</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span>',
          '    <span class="p">{</span>',
          '        <span class="s2">"A"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"A8"</span><span class="p">,</span> <span class="s2">"A9"</span><span class="p">,</span> <span class="s2">"A10"</span><span class="p">,</span> <span class="s2">"A11"</span><span class="p">],</span>',
          '        <span class="s2">"B"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"B8"</span><span class="p">,</span> <span class="s2">"B9"</span><span class="p">,</span> <span class="s2">"B10"</span><span class="p">,</span> <span class="s2">"B11"</span><span class="p">],</span>',
          '        <span class="s2">"C"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"C8"</span><span class="p">,</span> <span class="s2">"C9"</span><span class="p">,</span> <span class="s2">"C10"</span><span class="p">,</span> <span class="s2">"C11"</span><span class="p">],</span>',
          '        <span class="s2">"D"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"D8"</span><span class="p">,</span> <span class="s2">"D9"</span><span class="p">,</span> <span class="s2">"D10"</span><span class="p">,</span> <span class="s2">"D11"</span><span class="p">],</span>',
          '     <span class="p">})</span>',
          '',
          '<span class="n">dataframe</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">concat</span><span class="p">([</span><span class="n">dataframe1</span><span class="p">,</span> <span class="n">dataframe2</span><span class="p">,</span> <span class="n">dataframe3</span><span class="p">])</span>',
          '',
          '<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"dataframe1:</span><span class="se">\\n</span><span class="si">{</span><span class="n">dataframe1</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>',
          '<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"dataframe2:</span><span class="se">\\n</span><span class="si">{</span><span class="n">dataframe2</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>',
          '<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"dataframe3:</span><span class="se">\\n</span><span class="si">{</span><span class="n">dataframe3</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>',
          '',
          '<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"</span><span class="se">\\n</span><span class="s2">dataframe:</span><span class="se">\\n</span><span class="si">{</span><span class="n">dataframe</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'dataframe1:',
          '    A   B   C   D',
          '0  A0  B0  C0  D0',
          '1  A1  B1  C1  D1',
          '2  A2  B2  C2  D2',
          '3  A3  B3  C3  D3',
          'dataframe2:',
          '    A   B   C   D',
          '0  A4  B4  C4  D4',
          '1  A5  B5  C5  D5',
          '2  A6  B6  C6  D6',
          '3  A7  B7  C7  D7',
          'dataframe3:',
          '     A    B    C    D',
          '0   A8   B8   C8   D8',
          '1   A9   B9   C9   D9',
          '2  A10  B10  C10  D10',
          '3  A11  B11  C11  D11',
          'dataframe:',
          '     A    B    C    D',
          '0   A0   B0   C0   D0',
          '1   A1   B1   C1   D1',
          '2   A2   B2   C2   D2',
          '3   A3   B3   C3   D3',
          '0   A4   B4   C4   D4',
          '1   A5   B5   C5   D5',
          '2   A6   B6   C6   D6',
          '3   A7   B7   C7   D7',
          '0   A8   B8   C8   D8',
          '1   A9   B9   C9   D9',
          '2  A10  B10  C10  D10',
          '3  A11  B11  C11  D11',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Como pode ser visto, os √≠ndices <code>0</code>, <code>1</code>, <code>2</code> e <code>3</code> se repetem, porque cada dataframe possui esses √≠ndices. Para evitar isso, √© necess√°rio usar o par√¢metro <code>ignore_index=True</code></p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="n">dataframe</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">concat</span><span class="p">([</span><span class="n">dataframe1</span><span class="p">,</span> <span class="n">dataframe2</span><span class="p">,</span> <span class="n">dataframe3</span><span class="p">],</span> <span class="n">ignore_index</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>',
          '',
          '<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"dataframe1:</span><span class="se">\\n</span><span class="si">{</span><span class="n">dataframe1</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>',
          '<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"dataframe2:</span><span class="se">\\n</span><span class="si">{</span><span class="n">dataframe2</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>',
          '<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"dataframe3:</span><span class="se">\\n</span><span class="si">{</span><span class="n">dataframe3</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>',
          '',
          '<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"</span><span class="se">\\n</span><span class="s2">dataframe:</span><span class="se">\\n</span><span class="si">{</span><span class="n">dataframe</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'dataframe1:',
          '    A   B   C   D',
          '0  A0  B0  C0  D0',
          '1  A1  B1  C1  D1',
          '2  A2  B2  C2  D2',
          '3  A3  B3  C3  D3',
          'dataframe2:',
          '    A   B   C   D',
          '0  A4  B4  C4  D4',
          '1  A5  B5  C5  D5',
          '2  A6  B6  C6  D6',
          '3  A7  B7  C7  D7',
          'dataframe3:',
          '     A    B    C    D',
          '0   A8   B8   C8   D8',
          '1   A9   B9   C9   D9',
          '2  A10  B10  C10  D10',
          '3  A11  B11  C11  D11',
          'dataframe:',
          '      A    B    C    D',
          '0    A0   B0   C0   D0',
          '1    A1   B1   C1   D1',
          '2    A2   B2   C2   D2',
          '3    A3   B3   C3   D3',
          '4    A4   B4   C4   D4',
          '5    A5   B5   C5   D5',
          '6    A6   B6   C6   D6',
          '7    A7   B7   C7   D7',
          '8    A8   B8   C8   D8',
          '9    A9   B9   C9   D9',
          '10  A10  B10  C10  D10',
          '11  A11  B11  C11  D11',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p><img decoding="async" onerror="this.parentNode.removeChild(this)" alt="concat" src="https://pub-fb664c455eca46a2ba762a065ac900f7.r2.dev/merging_concat_basic.webp" width="370" height="375"/></p>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Se <code>axis=1</code> tivesse sido utilizado, a concatena√ß√£o teria ocorrido ao longo das colunas.</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="n">dataframe</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">concat</span><span class="p">([</span><span class="n">dataframe1</span><span class="p">,</span> <span class="n">dataframe2</span><span class="p">,</span> <span class="n">dataframe3</span><span class="p">],</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>',
          '',
          '<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"dataframe1:</span><span class="se">\\n</span><span class="si">{</span><span class="n">dataframe1</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>',
          '<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"dataframe2:</span><span class="se">\\n</span><span class="si">{</span><span class="n">dataframe2</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>',
          '<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"dataframe3:</span><span class="se">\\n</span><span class="si">{</span><span class="n">dataframe3</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>',
          '',
          '<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"</span><span class="se">\\n</span><span class="s2">dataframe:</span><span class="se">\\n</span><span class="si">{</span><span class="n">dataframe</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'dataframe1:',
          '    A   B   C   D',
          '0  A0  B0  C0  D0',
          '1  A1  B1  C1  D1',
          '2  A2  B2  C2  D2',
          '3  A3  B3  C3  D3',
          'dataframe2:',
          '    A   B   C   D',
          '0  A4  B4  C4  D4',
          '1  A5  B5  C5  D5',
          '2  A6  B6  C6  D6',
          '3  A7  B7  C7  D7',
          'dataframe3:',
          '     A    B    C    D',
          '0   A8   B8   C8   D8',
          '1   A9   B9   C9   D9',
          '2  A10  B10  C10  D10',
          '3  A11  B11  C11  D11',
          'dataframe:',
          '    A   B   C   D   A   B   C   D    A    B    C    D',
          '0  A0  B0  C0  D0  A4  B4  C4  D4   A8   B8   C8   D8',
          '1  A1  B1  C1  D1  A5  B5  C5  D5   A9   B9   C9   D9',
          '2  A2  B2  C2  D2  A6  B6  C6  D6  A10  B10  C10  D10',
          '3  A3  B3  C3  D3  A7  B7  C7  D7  A11  B11  C11  D11',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <h4 id="12.1.1.-Interse%C3%A7%C3%A3o-de-concatena%C3%A7%C3%A3o">12.1.1. Interse√ß√£o de concatena√ß√£o<a class="anchor-link" href="#12.1.1.-Interse%C3%A7%C3%A3o-de-concatena%C3%A7%C3%A3o"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 187" src={svg_paths.link_svg_path}/></a></h4>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>H√° duas maneiras de fazer a concatena√ß√£o, pegando todos os √≠ndices dos <code>DataFrame</code>s ou pegando apenas os que coincidem. Isso √© determinado pela vari√°vel <code>join</code>, que aceita os valores <code>'outer'</code> (padr√£o) (pega todos os √≠ndices) ou <code>'inner'</code> (apenas os que coincidem).</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Vamos ver um exemplo de <code>'outer'</code></p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="n">dataframe1</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span>',
          '    <span class="p">{</span>',
          '        <span class="s2">"A"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"A0"</span><span class="p">,</span> <span class="s2">"A1"</span><span class="p">,</span> <span class="s2">"A2"</span><span class="p">,</span> <span class="s2">"A3"</span><span class="p">],</span>',
          '        <span class="s2">"B"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"B0"</span><span class="p">,</span> <span class="s2">"B1"</span><span class="p">,</span> <span class="s2">"B2"</span><span class="p">,</span> <span class="s2">"B3"</span><span class="p">],</span>',
          '        <span class="s2">"C"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"C0"</span><span class="p">,</span> <span class="s2">"C1"</span><span class="p">,</span> <span class="s2">"C2"</span><span class="p">,</span> <span class="s2">"C3"</span><span class="p">],</span>',
          '        <span class="s2">"D"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"D0"</span><span class="p">,</span> <span class="s2">"D1"</span><span class="p">,</span> <span class="s2">"D2"</span><span class="p">,</span> <span class="s2">"D3"</span><span class="p">],</span>',
          '     <span class="p">},</span>',
          '     <span class="n">index</span><span class="o">=</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">])</span>',
          '',
          '<span class="n">dataframe4</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span>',
          '    <span class="p">{</span>',
          '        <span class="s2">"B"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"B2"</span><span class="p">,</span> <span class="s2">"B3"</span><span class="p">,</span> <span class="s2">"B6"</span><span class="p">,</span> <span class="s2">"B7"</span><span class="p">],</span>',
          '        <span class="s2">"D"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"D2"</span><span class="p">,</span> <span class="s2">"D3"</span><span class="p">,</span> <span class="s2">"D6"</span><span class="p">,</span> <span class="s2">"D7"</span><span class="p">],</span>',
          '        <span class="s2">"F"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"F2"</span><span class="p">,</span> <span class="s2">"F3"</span><span class="p">,</span> <span class="s2">"F6"</span><span class="p">,</span> <span class="s2">"F7"</span><span class="p">],</span>',
          '     <span class="p">},</span><span class="n">index</span><span class="o">=</span><span class="p">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">7</span><span class="p">])</span>',
          '',
          '<span class="n">dataframe</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">concat</span><span class="p">([</span><span class="n">dataframe1</span><span class="p">,</span> <span class="n">dataframe4</span><span class="p">],</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>',
          '',
          '<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"dataframe1:</span><span class="se">\\n</span><span class="si">{</span><span class="n">dataframe1</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>',
          '<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"dataframe2:</span><span class="se">\\n</span><span class="si">{</span><span class="n">dataframe4</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>',
          '',
          '<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"</span><span class="se">\\n</span><span class="s2">dataframe:</span><span class="se">\\n</span><span class="si">{</span><span class="n">dataframe</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'dataframe1:',
          '    A   B   C   D',
          '0  A0  B0  C0  D0',
          '1  A1  B1  C1  D1',
          '2  A2  B2  C2  D2',
          '3  A3  B3  C3  D3',
          'dataframe2:',
          '    B   D   F',
          '2  B2  D2  F2',
          '3  B3  D3  F3',
          '6  B6  D6  F6',
          '7  B7  D7  F7',
          'dataframe:',
          '     A    B    C    D    B    D    F',
          '0   A0   B0   C0   D0  NaN  NaN  NaN',
          '1   A1   B1   C1   D1  NaN  NaN  NaN',
          '2   A2   B2   C2   D2   B2   D2   F2',
          '3   A3   B3   C3   D3   B3   D3   F3',
          '6  NaN  NaN  NaN  NaN   B6   D6   F6',
          '7  NaN  NaN  NaN  NaN   B7   D7   F7',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p><img decoding="async" onerror="this.parentNode.removeChild(this)" alt="outlier" src="https://pub-fb664c455eca46a2ba762a065ac900f7.r2.dev/merging_concat_axis1.webp" width="629" height="175"/></p>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Vamos ver um exemplo de <code>'inner'</code></p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="n">dataframe</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">concat</span><span class="p">([</span><span class="n">dataframe1</span><span class="p">,</span> <span class="n">dataframe4</span><span class="p">],</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">join</span><span class="o">=</span><span class="s2">"inner"</span><span class="p">)</span>',
          '',
          '<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"dataframe1:</span><span class="se">\\n</span><span class="si">{</span><span class="n">dataframe1</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>',
          '<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"dataframe2:</span><span class="se">\\n</span><span class="si">{</span><span class="n">dataframe4</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>',
          '',
          '<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"</span><span class="se">\\n</span><span class="s2">dataframe:</span><span class="se">\\n</span><span class="si">{</span><span class="n">dataframe</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'dataframe1:',
          '    A   B   C   D',
          '0  A0  B0  C0  D0',
          '1  A1  B1  C1  D1',
          '2  A2  B2  C2  D2',
          '3  A3  B3  C3  D3',
          'dataframe2:',
          '    B   D   F',
          '2  B2  D2  F2',
          '3  B3  D3  F3',
          '6  B6  D6  F6',
          '7  B7  D7  F7',
          'dataframe:',
          '    A   B   C   D   B   D   F',
          '2  A2  B2  C2  D2  B2  D2  F2',
          '3  A3  B3  C3  D3  B3  D3  F3',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p><img decoding="async" onerror="this.parentNode.removeChild(this)" alt="inner" src="https://pub-fb664c455eca46a2ba762a065ac900f7.r2.dev/merging_concat_axis1_inner.webp" width="629" height="125"/></p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="12.2.-Merge-de-DataFrames">12.2. <code>Merge</code> de DataFrames<a class="anchor-link" href="#12.2.-Merge-de-DataFrames"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 188" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Antes criamos um novo dataframe com a uni√£o de v√°rios dataframes, agora podemos completar um dataframe com outro, para isso usamos <code>merge</code>, passando o par√¢metro <code>on</code>, sobre qual coluna queremos que seja feito o <code>merge</code>.</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="n">dataframe1</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span>',
          '    <span class="p">{</span>',
          '        <span class="s2">"Key"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"K0"</span><span class="p">,</span> <span class="s2">"K1"</span><span class="p">,</span> <span class="s2">"K2"</span><span class="p">,</span> <span class="s2">"K3"</span><span class="p">],</span>',
          '        <span class="s2">"A"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"A0"</span><span class="p">,</span> <span class="s2">"A1"</span><span class="p">,</span> <span class="s2">"A2"</span><span class="p">,</span> <span class="s2">"A3"</span><span class="p">],</span>',
          '        <span class="s2">"B"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"B0"</span><span class="p">,</span> <span class="s2">"B1"</span><span class="p">,</span> <span class="s2">"B2"</span><span class="p">,</span> <span class="s2">"B3"</span><span class="p">],</span>',
          '     <span class="p">})</span>',
          '',
          '<span class="n">dataframe2</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span>',
          '    <span class="p">{</span>',
          '        <span class="s2">"Key"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"K0"</span><span class="p">,</span> <span class="s2">"K1"</span><span class="p">,</span> <span class="s2">"K2"</span><span class="p">,</span> <span class="s2">"K3"</span><span class="p">],</span>',
          '        <span class="s2">"C"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"C0"</span><span class="p">,</span> <span class="s2">"C1"</span><span class="p">,</span> <span class="s2">"C2"</span><span class="p">,</span> <span class="s2">"C3"</span><span class="p">],</span>',
          '        <span class="s2">"D"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"D0"</span><span class="p">,</span> <span class="s2">"D1"</span><span class="p">,</span> <span class="s2">"D2"</span><span class="p">,</span> <span class="s2">"D3"</span><span class="p">],</span>',
          '     <span class="p">})</span>',
          '',
          '<span class="n">dataframe</span> <span class="o">=</span> <span class="n">dataframe1</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="n">dataframe2</span><span class="p">,</span> <span class="n">on</span><span class="o">=</span><span class="s2">"Key"</span><span class="p">)</span>',
          '',
          '<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"dataframe1:</span><span class="se">\\n</span><span class="si">{</span><span class="n">dataframe1</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>',
          '<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"dataframe2:</span><span class="se">\\n</span><span class="si">{</span><span class="n">dataframe2</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>',
          '',
          '<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"</span><span class="se">\\n</span><span class="s2">dataframe:</span><span class="se">\\n</span><span class="si">{</span><span class="n">dataframe</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'dataframe1:',
          '  Key   A   B',
          '0  K0  A0  B0',
          '1  K1  A1  B1',
          '2  K2  A2  B2',
          '3  K3  A3  B3',
          'dataframe2:',
          '  Key   C   D',
          '0  K0  C0  D0',
          '1  K1  C1  D1',
          '2  K2  C2  D2',
          '3  K3  C3  D3',
          'dataframe:',
          '  Key   A   B   C   D',
          '0  K0  A0  B0  C0  D0',
          '1  K1  A1  B1  C1  D1',
          '2  K2  A2  B2  C2  D2',
          '3  K3  A3  B3  C3  D3',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Neste caso, os dois dataframes tinham uma chave com o mesmo nome (<code>Key</code>), mas no caso de termos dataframes em que suas chaves tenham nomes diferentes, podemos usar os par√¢metros <code>left_on</code> e <code>right_on</code>.</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="n">dataframe1</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span>',
          '    <span class="p">{</span>',
          '        <span class="s2">"Key1"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"K0"</span><span class="p">,</span> <span class="s2">"K1"</span><span class="p">,</span> <span class="s2">"K2"</span><span class="p">,</span> <span class="s2">"K3"</span><span class="p">],</span>',
          '        <span class="s2">"A"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"A0"</span><span class="p">,</span> <span class="s2">"A1"</span><span class="p">,</span> <span class="s2">"A2"</span><span class="p">,</span> <span class="s2">"A3"</span><span class="p">],</span>',
          '        <span class="s2">"B"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"B0"</span><span class="p">,</span> <span class="s2">"B1"</span><span class="p">,</span> <span class="s2">"B2"</span><span class="p">,</span> <span class="s2">"B3"</span><span class="p">],</span>',
          '     <span class="p">})</span>',
          '',
          '<span class="n">dataframe2</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span>',
          '    <span class="p">{</span>',
          '        <span class="s2">"Key2"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"K0"</span><span class="p">,</span> <span class="s2">"K1"</span><span class="p">,</span> <span class="s2">"K2"</span><span class="p">,</span> <span class="s2">"K3"</span><span class="p">],</span>',
          '        <span class="s2">"C"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"C0"</span><span class="p">,</span> <span class="s2">"C1"</span><span class="p">,</span> <span class="s2">"C2"</span><span class="p">,</span> <span class="s2">"C3"</span><span class="p">],</span>',
          '        <span class="s2">"D"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"D0"</span><span class="p">,</span> <span class="s2">"D1"</span><span class="p">,</span> <span class="s2">"D2"</span><span class="p">,</span> <span class="s2">"D3"</span><span class="p">],</span>',
          '     <span class="p">})</span>',
          '',
          '<span class="n">dataframe</span> <span class="o">=</span> <span class="n">dataframe1</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="n">dataframe2</span><span class="p">,</span> <span class="n">left_on</span><span class="o">=</span><span class="s2">"Key1"</span><span class="p">,</span> <span class="n">right_on</span><span class="o">=</span><span class="s2">"Key2"</span><span class="p">)</span>',
          '',
          '<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"dataframe1:</span><span class="se">\\n</span><span class="si">{</span><span class="n">dataframe1</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>',
          '<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"dataframe2:</span><span class="se">\\n</span><span class="si">{</span><span class="n">dataframe2</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>',
          '',
          '<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"</span><span class="se">\\n</span><span class="s2">dataframe:</span><span class="se">\\n</span><span class="si">{</span><span class="n">dataframe</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'dataframe1:',
          '  Key1   A   B',
          '0   K0  A0  B0',
          '1   K1  A1  B1',
          '2   K2  A2  B2',
          '3   K3  A3  B3',
          'dataframe2:',
          '  Key2   C   D',
          '0   K0  C0  D0',
          '1   K1  C1  D1',
          '2   K2  C2  D2',
          '3   K3  C3  D3',
          'dataframe:',
          '  Key1   A   B Key2   C   D',
          '0   K0  A0  B0   K0  C0  D0',
          '1   K1  A1  B1   K1  C1  D1',
          '2   K2  A2  B2   K2  C2  D2',
          '3   K3  A3  B3   K3  C3  D3',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>No caso de uma das chaves n√£o corresponder, o <code>merge</code> n√£o ser√° realizado sobre essa chave.</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="n">dataframe1</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span>',
          '    <span class="p">{</span>',
          '        <span class="s2">"Key1"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"K0"</span><span class="p">,</span> <span class="s2">"K1"</span><span class="p">,</span> <span class="s2">"K2"</span><span class="p">,</span> <span class="s2">"K3"</span><span class="p">],</span>',
          '        <span class="s2">"A"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"A0"</span><span class="p">,</span> <span class="s2">"A1"</span><span class="p">,</span> <span class="s2">"A2"</span><span class="p">,</span> <span class="s2">"A3"</span><span class="p">],</span>',
          '        <span class="s2">"B"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"B0"</span><span class="p">,</span> <span class="s2">"B1"</span><span class="p">,</span> <span class="s2">"B2"</span><span class="p">,</span> <span class="s2">"B3"</span><span class="p">],</span>',
          '     <span class="p">})</span>',
          '',
          '<span class="n">dataframe2</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span>',
          '    <span class="p">{</span>',
          '        <span class="s2">"Key2"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"K0"</span><span class="p">,</span> <span class="s2">"K1"</span><span class="p">,</span> <span class="s2">"K2"</span><span class="p">,</span> <span class="n">np</span><span class="o">.</span><span class="n">nan</span><span class="p">],</span>',
          '        <span class="s2">"C"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"C0"</span><span class="p">,</span> <span class="s2">"C1"</span><span class="p">,</span> <span class="s2">"C2"</span><span class="p">,</span> <span class="s2">"C3"</span><span class="p">],</span>',
          '        <span class="s2">"D"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"D0"</span><span class="p">,</span> <span class="s2">"D1"</span><span class="p">,</span> <span class="s2">"D2"</span><span class="p">,</span> <span class="s2">"D3"</span><span class="p">],</span>',
          '     <span class="p">})</span>',
          '',
          '<span class="n">dataframe</span> <span class="o">=</span> <span class="n">dataframe1</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="n">dataframe2</span><span class="p">,</span> <span class="n">left_on</span><span class="o">=</span><span class="s2">"Key1"</span><span class="p">,</span> <span class="n">right_on</span><span class="o">=</span><span class="s2">"Key2"</span><span class="p">)</span>',
          '',
          '<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"dataframe1:</span><span class="se">\\n</span><span class="si">{</span><span class="n">dataframe1</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>',
          '<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"dataframe2:</span><span class="se">\\n</span><span class="si">{</span><span class="n">dataframe2</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>',
          '',
          '<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"</span><span class="se">\\n</span><span class="s2">dataframe:</span><span class="se">\\n</span><span class="si">{</span><span class="n">dataframe</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'dataframe1:',
          '  Key1   A   B',
          '0   K0  A0  B0',
          '1   K1  A1  B1',
          '2   K2  A2  B2',
          '3   K3  A3  B3',
          'dataframe2:',
          '  Key2   C   D',
          '0   K0  C0  D0',
          '1   K1  C1  D1',
          '2   K2  C2  D2',
          '3  NaN  C3  D3',
          'dataframe:',
          '  Key1   A   B Key2   C   D',
          '0   K0  A0  B0   K0  C0  D0',
          '1   K1  A1  B1   K1  C1  D1',
          '2   K2  A2  B2   K2  C2  D2',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Para mudar esse comportamento,Êàë‰ª¨ÂèØ‰ª•‰ΩøÁî®ÂèÇÊï∞ <code>how</code>ÔºåÂÖ∂ÈªòËÆ§ÂÄº‰∏∫ <code>inner</code>Ôºå‰ΩÜÊàë‰ª¨ÂèØ‰ª•‰º†ÈÄí <code>left</code>„ÄÅ<code>right</code> Âíå <code>outer</code> ÂÄº„ÄÇ</p>
      <p>(Note: The part after "Êàë‰ª¨ÂèØ‰ª•‰ΩøÁî®ÂèÇÊï∞" is in Chinese. I assume it's a mistake and should be in Portuguese as requested. Here is the corrected version.)</p>
      <p>Para mudar esse comportamento, podemos usar o par√¢metro <code>how</code>, que por padr√£o tem o valor <code>inner</code>, mas podemos passar os valores <code>left</code>, <code>right</code> e <code>outer</code>.</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="n">dataframe1</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span>',
          '    <span class="p">{</span>',
          '        <span class="s2">"Key1"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"K0"</span><span class="p">,</span> <span class="s2">"K1"</span><span class="p">,</span> <span class="s2">"K2"</span><span class="p">,</span> <span class="s2">"K3"</span><span class="p">],</span>',
          '        <span class="s2">"A"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"A0"</span><span class="p">,</span> <span class="s2">"A1"</span><span class="p">,</span> <span class="s2">"A2"</span><span class="p">,</span> <span class="s2">"A3"</span><span class="p">],</span>',
          '        <span class="s2">"B"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"B0"</span><span class="p">,</span> <span class="s2">"B1"</span><span class="p">,</span> <span class="s2">"B2"</span><span class="p">,</span> <span class="s2">"B3"</span><span class="p">],</span>',
          '     <span class="p">})</span>',
          '',
          '<span class="n">dataframe2</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span>',
          '    <span class="p">{</span>',
          '        <span class="s2">"Key2"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"K0"</span><span class="p">,</span> <span class="s2">"K1"</span><span class="p">,</span> <span class="s2">"K2"</span><span class="p">,</span> <span class="n">np</span><span class="o">.</span><span class="n">nan</span><span class="p">],</span>',
          '        <span class="s2">"C"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"C0"</span><span class="p">,</span> <span class="s2">"C1"</span><span class="p">,</span> <span class="s2">"C2"</span><span class="p">,</span> <span class="s2">"C3"</span><span class="p">],</span>',
          '        <span class="s2">"D"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"D0"</span><span class="p">,</span> <span class="s2">"D1"</span><span class="p">,</span> <span class="s2">"D2"</span><span class="p">,</span> <span class="s2">"D3"</span><span class="p">],</span>',
          '     <span class="p">})</span>',
          '',
          '<span class="n">dataframe_inner</span> <span class="o">=</span> <span class="n">dataframe1</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="n">dataframe2</span><span class="p">,</span> <span class="n">left_on</span><span class="o">=</span><span class="s2">"Key1"</span><span class="p">,</span> <span class="n">right_on</span><span class="o">=</span><span class="s2">"Key2"</span><span class="p">,</span> <span class="n">how</span><span class="o">=</span><span class="s2">"inner"</span><span class="p">)</span>',
          '<span class="n">dataframe_left</span> <span class="o">=</span> <span class="n">dataframe1</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="n">dataframe2</span><span class="p">,</span> <span class="n">left_on</span><span class="o">=</span><span class="s2">"Key1"</span><span class="p">,</span> <span class="n">right_on</span><span class="o">=</span><span class="s2">"Key2"</span><span class="p">,</span> <span class="n">how</span><span class="o">=</span><span class="s2">"left"</span><span class="p">)</span>',
          '<span class="n">dataframe_right</span> <span class="o">=</span> <span class="n">dataframe1</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="n">dataframe2</span><span class="p">,</span> <span class="n">left_on</span><span class="o">=</span><span class="s2">"Key1"</span><span class="p">,</span> <span class="n">right_on</span><span class="o">=</span><span class="s2">"Key2"</span><span class="p">,</span> <span class="n">how</span><span class="o">=</span><span class="s2">"right"</span><span class="p">)</span>',
          '<span class="n">dataframe_outer</span> <span class="o">=</span> <span class="n">dataframe1</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="n">dataframe2</span><span class="p">,</span> <span class="n">left_on</span><span class="o">=</span><span class="s2">"Key1"</span><span class="p">,</span> <span class="n">right_on</span><span class="o">=</span><span class="s2">"Key2"</span><span class="p">,</span> <span class="n">how</span><span class="o">=</span><span class="s2">"outer"</span><span class="p">)</span>',
          '',
          '<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"dataframe1:</span><span class="se">\\n</span><span class="si">{</span><span class="n">dataframe1</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>',
          '<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"dataframe2:</span><span class="se">\\n</span><span class="si">{</span><span class="n">dataframe2</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>',
          '',
          '<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"</span><span class="se">\\n</span><span class="s2">dataframe inner:</span><span class="se">\\n</span><span class="si">{</span><span class="n">dataframe_inner</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>',
          '<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"</span><span class="se">\\n</span><span class="s2">dataframe left:</span><span class="se">\\n</span><span class="si">{</span><span class="n">dataframe_left</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>',
          '<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"</span><span class="se">\\n</span><span class="s2">dataframe right:</span><span class="se">\\n</span><span class="si">{</span><span class="n">dataframe_right</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>',
          '<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"</span><span class="se">\\n</span><span class="s2">dataframe outer:</span><span class="se">\\n</span><span class="si">{</span><span class="n">dataframe_outer</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'dataframe1:',
          '  Key1   A   B',
          '0   K0  A0  B0',
          '1   K1  A1  B1',
          '2   K2  A2  B2',
          '3   K3  A3  B3',
          'dataframe2:',
          '  Key2   C   D',
          '0   K0  C0  D0',
          '1   K1  C1  D1',
          '2   K2  C2  D2',
          '3  NaN  C3  D3',
          'dataframe inner:',
          '  Key1   A   B Key2   C   D',
          '0   K0  A0  B0   K0  C0  D0',
          '1   K1  A1  B1   K1  C1  D1',
          '2   K2  A2  B2   K2  C2  D2',
          'dataframe left:',
          '  Key1   A   B Key2    C    D',
          '0   K0  A0  B0   K0   C0   D0',
          '1   K1  A1  B1   K1   C1   D1',
          '2   K2  A2  B2   K2   C2   D2',
          '3   K3  A3  B3  NaN  NaN  NaN',
          'dataframe right:',
          '  Key1    A    B Key2   C   D',
          '0   K0   A0   B0   K0  C0  D0',
          '1   K1   A1   B1   K1  C1  D1',
          '2   K2   A2   B2   K2  C2  D2',
          '3  NaN  NaN  NaN  NaN  C3  D3',
          'dataframe outer:',
          '  Key1    A    B Key2    C    D',
          '0   K0   A0   B0   K0   C0   D0',
          '1   K1   A1   B1   K1   C1   D1',
          '2   K2   A2   B2   K2   C2   D2',
          '3   K3   A3   B3  NaN  NaN  NaN',
          '4  NaN  NaN  NaN  NaN   C3   D3',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Como pode ser visto, quando se escolhe <code>left</code> s√£o adicionados apenas os valores do dataframe da esquerda e quando se escolhe <code>right</code>, os valores do dataframe da direita.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="12.3.-Join-de-dataframes">12.3. <code>Join</code> de dataframes<a class="anchor-link" href="#12.3.-Join-de-dataframes"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 189" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>A √∫ltima ferramenta de jun√ß√£o de dataframes √© <code>join</code>. √â semelhante a <code>merge</code>, apenas em vez de procurar similaridades com base em colunas especificadas, ela as procura com base nos √≠ndices.</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="n">dataframe1</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span>',
          '    <span class="p">{</span>',
          '        <span class="s2">"A"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"A0"</span><span class="p">,</span> <span class="s2">"A1"</span><span class="p">,</span> <span class="s2">"A2"</span><span class="p">,</span> <span class="s2">"A3"</span><span class="p">],</span>',
          '        <span class="s2">"B"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"B0"</span><span class="p">,</span> <span class="s2">"B1"</span><span class="p">,</span> <span class="s2">"B2"</span><span class="p">,</span> <span class="s2">"B3"</span><span class="p">],</span>',
          '     <span class="p">},</span>',
          '     <span class="n">index</span><span class="o">=</span><span class="p">[</span><span class="s2">"K0"</span><span class="p">,</span> <span class="s2">"K1"</span><span class="p">,</span> <span class="s2">"K2"</span><span class="p">,</span> <span class="s2">"K3"</span><span class="p">])</span>',
          '',
          '<span class="n">dataframe2</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span>',
          '    <span class="p">{</span>',
          '        <span class="s2">"C"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"C0"</span><span class="p">,</span> <span class="s2">"C1"</span><span class="p">,</span> <span class="s2">"C2"</span><span class="p">,</span> <span class="s2">"C3"</span><span class="p">],</span>',
          '        <span class="s2">"D"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"D0"</span><span class="p">,</span> <span class="s2">"D1"</span><span class="p">,</span> <span class="s2">"D2"</span><span class="p">,</span> <span class="s2">"D3"</span><span class="p">],</span>',
          '     <span class="p">},</span>',
          '        <span class="n">index</span><span class="o">=</span><span class="p">[</span><span class="s2">"K0"</span><span class="p">,</span> <span class="s2">"K1"</span><span class="p">,</span> <span class="s2">"K2"</span><span class="p">,</span> <span class="s2">"K3"</span><span class="p">])</span>',
          '',
          '<span class="n">dataframe</span> <span class="o">=</span> <span class="n">dataframe1</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">dataframe2</span><span class="p">)</span>',
          '',
          '<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"dataframe1:</span><span class="se">\\n</span><span class="si">{</span><span class="n">dataframe1</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>',
          '<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"dataframe2:</span><span class="se">\\n</span><span class="si">{</span><span class="n">dataframe2</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>',
          '',
          '<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"</span><span class="se">\\n</span><span class="s2">dataframe:</span><span class="se">\\n</span><span class="si">{</span><span class="n">dataframe</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'dataframe1:',
          '     A   B',
          'K0  A0  B0',
          'K1  A1  B1',
          'K2  A2  B2',
          'K3  A3  B3',
          'dataframe2:',
          '     C   D',
          'K0  C0  D0',
          'K1  C1  D1',
          'K2  C2  D2',
          'K3  C3  D3',
          'dataframe:',
          '     A   B   C   D',
          'K0  A0  B0  C0  D0',
          'K1  A1  B1  C1  D1',
          'K2  A2  B2  C2  D2',
          'K3  A3  B3  C3  D3',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Neste caso, os √≠ndices s√£o iguais, mas quando s√£o diferentes podemos especificar a maneira de unir os dataframes atrav√©s do par√¢metro <code>how</code>, que por padr√£o tem o valor <code>inner</code>, mas pode ter o valor <code>left</code>, <code>right</code> ou <code>outer</code>.</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="n">dataframe1</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span>',
          '    <span class="p">{</span>',
          '        <span class="s2">"A"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"A0"</span><span class="p">,</span> <span class="s2">"A1"</span><span class="p">,</span> <span class="s2">"A2"</span><span class="p">,</span> <span class="s2">"A3"</span><span class="p">],</span>',
          '        <span class="s2">"B"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"B0"</span><span class="p">,</span> <span class="s2">"B1"</span><span class="p">,</span> <span class="s2">"B2"</span><span class="p">,</span> <span class="s2">"B3"</span><span class="p">],</span>',
          '     <span class="p">},</span>',
          '     <span class="n">index</span><span class="o">=</span><span class="p">[</span><span class="s2">"K0"</span><span class="p">,</span> <span class="s2">"K1"</span><span class="p">,</span> <span class="s2">"K2"</span><span class="p">,</span> <span class="s2">"K3"</span><span class="p">])</span>',
          '',
          '<span class="n">dataframe2</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span>',
          '    <span class="p">{</span>',
          '        <span class="s2">"C"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"C0"</span><span class="p">,</span> <span class="s2">"C2"</span><span class="p">,</span> <span class="s2">"C3"</span><span class="p">,</span> <span class="s2">"C4"</span><span class="p">],</span>',
          '        <span class="s2">"D"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"D0"</span><span class="p">,</span> <span class="s2">"D2"</span><span class="p">,</span> <span class="s2">"D3"</span><span class="p">,</span> <span class="s2">"D4"</span><span class="p">],</span>',
          '     <span class="p">},</span>',
          '        <span class="n">index</span><span class="o">=</span><span class="p">[</span><span class="s2">"K0"</span><span class="p">,</span> <span class="s2">"K2"</span><span class="p">,</span> <span class="s2">"K3"</span><span class="p">,</span> <span class="s2">"K4"</span><span class="p">])</span>',
          '',
          '<span class="n">dataframe_inner</span> <span class="o">=</span> <span class="n">dataframe1</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">dataframe2</span><span class="p">,</span> <span class="n">how</span><span class="o">=</span><span class="s2">"inner"</span><span class="p">)</span>',
          '<span class="n">dataframe_left</span> <span class="o">=</span> <span class="n">dataframe1</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">dataframe2</span><span class="p">,</span> <span class="n">how</span><span class="o">=</span><span class="s2">"left"</span><span class="p">)</span>',
          '<span class="n">dataframe_right</span> <span class="o">=</span> <span class="n">dataframe1</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">dataframe2</span><span class="p">,</span> <span class="n">how</span><span class="o">=</span><span class="s2">"right"</span><span class="p">)</span>',
          '<span class="n">dataframe_outer</span> <span class="o">=</span> <span class="n">dataframe1</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">dataframe2</span><span class="p">,</span> <span class="n">how</span><span class="o">=</span><span class="s2">"outer"</span><span class="p">)</span>',
          '',
          '<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"dataframe1:</span><span class="se">\\n</span><span class="si">{</span><span class="n">dataframe1</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>',
          '<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"dataframe2:</span><span class="se">\\n</span><span class="si">{</span><span class="n">dataframe2</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>',
          '',
          '<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"</span><span class="se">\\n</span><span class="s2">dataframe inner:</span><span class="se">\\n</span><span class="si">{</span><span class="n">dataframe_inner</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>',
          '<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"</span><span class="se">\\n</span><span class="s2">dataframe left:</span><span class="se">\\n</span><span class="si">{</span><span class="n">dataframe_left</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>',
          '<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"</span><span class="se">\\n</span><span class="s2">dataframe rigth:</span><span class="se">\\n</span><span class="si">{</span><span class="n">dataframe_right</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>',
          '<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"</span><span class="se">\\n</span><span class="s2">dataframe outer:</span><span class="se">\\n</span><span class="si">{</span><span class="n">dataframe_outer</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'dataframe1:',
          '     A   B',
          'K0  A0  B0',
          'K1  A1  B1',
          'K2  A2  B2',
          'K3  A3  B3',
          'dataframe2:',
          '     C   D',
          'K0  C0  D0',
          'K2  C2  D2',
          'K3  C3  D3',
          'K4  C4  D4',
          'dataframe:',
          '     A   B   C   D',
          'K0  A0  B0  C0  D0',
          'K2  A2  B2  C2  D2',
          'K3  A3  B3  C3  D3',
          'dataframe:',
          '     A   B    C    D',
          'K0  A0  B0   C0   D0',
          'K1  A1  B1  NaN  NaN',
          'K2  A2  B2   C2   D2',
          'K3  A3  B3   C3   D3',
          'dataframe:',
          '      A    B   C   D',
          'K0   A0   B0  C0  D0',
          'K2   A2   B2  C2  D2',
          'K3   A3   B3  C3  D3',
          'K4  NaN  NaN  C4  D4',
          'dataframe:',
          '      A    B    C    D',
          'K0   A0   B0   C0   D0',
          'K1   A1   B1  NaN  NaN',
          'K2   A2   B2   C2   D2',
          'K3   A3   B3   C3   D3',
          'K4  NaN  NaN   C4   D4',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <h2 id="13.-Dados-faltantes-(NaN)">13. Dados faltantes (<code>NaN</code>)<a class="anchor-link" href="#13.-Dados-faltantes-(NaN)"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 190" src={svg_paths.link_svg_path}/></a></h2>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Em um <code>DataFrame</code> podem haver alguns dados faltantes, o Pandas os representa como <code>np.nan</code></p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">diccionario</span> <span class="o">=</span> <span class="p">{opening_brace}</span>
          <span class="s2">"uno"</span><span class="p">:</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">([</span><span class="mf">1.0</span><span class="p">,</span> <span class="mf">2.0</span><span class="p">,</span> <span class="mf">3.0</span><span class="p">]),</span>
          <span class="s2">"dos"</span><span class="p">:</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">([</span><span class="mf">4.0</span><span class="p">,</span> <span class="mf">5.0</span><span class="p">,</span> <span class="mf">6.0</span><span class="p">,</span> <span class="mf">7.0</span><span class="p">])</span>
          <span class="p">{closing_brace}</span>
      
      <span class="n">dataframe</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">diccionario</span><span class="p">)</span>
      <span class="n">dataframe</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[¬†]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>uno</th>
      <th>dos</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>0</th>
      <td>1.0</td>
      <td>4.0</td>
      </tr>
      <tr>
      <th>1</th>
      <td>2.0</td>
      <td>5.0</td>
      </tr>
      <tr>
      <th>2</th>
      <td>3.0</td>
      <td>6.0</td>
      </tr>
      <tr>
      <th>3</th>
      <td>NaN</td>
      <td>7.0</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="13.1.-Elimina%C3%A7%C3%A3o-das-linhas-com-dados-faltantes">13.1. Elimina√ß√£o das linhas com dados faltantes<a class="anchor-link" href="#13.1.-Elimina%C3%A7%C3%A3o-das-linhas-com-dados-faltantes"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 191" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Para n√£o ter linhas com dados faltantes, essas podem ser eliminadas.</p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">dataframe</span><span class="o">.</span><span class="n">dropna</span><span class="p">(</span><span class="n">how</span><span class="o">=</span><span class="s2">"any"</span><span class="p">)</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[¬†]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>uno</th>
      <th>dos</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>0</th>
      <td>1.0</td>
      <td>4.0</td>
      </tr>
      <tr>
      <th>1</th>
      <td>2.0</td>
      <td>5.0</td>
      </tr>
      <tr>
      <th>2</th>
      <td>3.0</td>
      <td>6.0</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="13.2.-Elimina%C3%A7%C3%A3o-das-colunas-com-dados-faltantes">13.2. Elimina√ß√£o das colunas com dados faltantes<a class="anchor-link" href="#13.2.-Elimina%C3%A7%C3%A3o-das-colunas-com-dados-faltantes"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 192" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">dataframe</span><span class="o">.</span><span class="n">dropna</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">how</span><span class="o">=</span><span class="s1">'any'</span><span class="p">)</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[¬†]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>dos</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>0</th>
      <td>4.0</td>
      </tr>
      <tr>
      <th>1</th>
      <td>5.0</td>
      </tr>
      <tr>
      <th>2</th>
      <td>6.0</td>
      </tr>
      <tr>
      <th>3</th>
      <td>7.0</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="13.3.-M%C3%A1scara-booleana-com-as-posi%C3%A7%C3%B5es-faltantes">13.3. M√°scara booleana com as posi√ß√µes faltantes<a class="anchor-link" href="#13.3.-M%C3%A1scara-booleana-com-as-posi%C3%A7%C3%B5es-faltantes"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 193" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">pd</span><span class="o">.</span><span class="n">isna</span><span class="p">(</span><span class="n">dataframe</span><span class="p">)</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[¬†]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>uno</th>
      <th>dos</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>0</th>
      <td>False</td>
      <td>False</td>
      </tr>
      <tr>
      <th>1</th>
      <td>False</td>
      <td>False</td>
      </tr>
      <tr>
      <th>2</th>
      <td>False</td>
      <td>False</td>
      </tr>
      <tr>
      <th>3</th>
      <td>True</td>
      <td>False</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="13.4.-Preenchimento-dos-dados-ausentes">13.4. Preenchimento dos dados ausentes<a class="anchor-link" href="#13.4.-Preenchimento-dos-dados-ausentes"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 194" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">dataframe</span><span class="o">.</span><span class="n">fillna</span><span class="p">(</span><span class="n">value</span><span class="o">=</span><span class="mf">5.5</span><span class="p">,</span> <span class="n">inplace</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
      <span class="n">dataframe</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[¬†]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>uno</th>
      <th>dos</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>0</th>
      <td>1.0</td>
      <td>4.0</td>
      </tr>
      <tr>
      <th>1</th>
      <td>2.0</td>
      <td>5.0</td>
      </tr>
      <tr>
      <th>2</th>
      <td>3.0</td>
      <td>6.0</td>
      </tr>
      <tr>
      <th>3</th>
      <td>5.5</td>
      <td>7.0</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <blockquote>
      <p>Dica: Colocando a vari√°vel <code>inplace=True</code> modifica o <code>DataFrame</code> sobre o qual est√° sendo operado, assim n√£o √© necess√°rio escrever <code>dataframe = dataframe.fillna(value=5.5)</code></p>
      </blockquote>
      </section>
      
      <section class="section-block-markdown-cell">
      <h2 id="14.-S%C3%A9ries-Temporais">14. S√©ries Temporais<a class="anchor-link" href="#14.-S%C3%A9ries-Temporais"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 195" src={svg_paths.link_svg_path}/></a></h2>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Pandas oferece a possibilidade de trabalhar com s√©ries temporais. Por exemplo, criamos uma <code>Serie</code> de 100 dados aleat√≥rios a cada segundo a partir de 01/01/2021</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="n">indices</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">date_range</span><span class="p">(</span><span class="s2">"1/1/2021"</span><span class="p">,</span> <span class="n">periods</span><span class="o">=</span><span class="mi">100</span><span class="p">,</span> <span class="n">freq</span><span class="o">=</span><span class="s2">"S"</span><span class="p">)</span>',
          '<span class="n">datos</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">500</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">indices</span><span class="p">))</span>',
          '',
          '<span class="n">serie_temporal</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">(</span><span class="n">datos</span><span class="p">,</span> <span class="n">index</span><span class="o">=</span><span class="n">indices</span><span class="p">)</span>',
          '<span class="n">serie_temporal</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          '2021-01-01 00:00:00    241',
          '2021-01-01 00:00:01     14',
          '2021-01-01 00:00:02    190',
          '2021-01-01 00:00:03    407',
          '2021-01-01 00:00:04     94',
          '                      ... ',
          '2021-01-01 00:01:35    275',
          '2021-01-01 00:01:36     56',
          '2021-01-01 00:01:37    448',
          '2021-01-01 00:01:38    151',
          '2021-01-01 00:01:39    316',
          'Freq: S, Length: 100, dtype: int64',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Esta funcionalidade do Pandas √© muito poderosa, por exemplo, podemos ter um conjunto de dados em certas horas de um fuso hor√°rio e alter√°-las para outro fuso.</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="n">horas</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">date_range</span><span class="p">(</span><span class="s2">"3/6/2021 00:00"</span><span class="p">,</span> <span class="n">periods</span><span class="o">=</span><span class="mi">10</span><span class="p">,</span> <span class="n">freq</span><span class="o">=</span><span class="s2">"H"</span><span class="p">)</span>',
          '<span class="n">datos</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">randn</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">horas</span><span class="p">))</span>',
          '',
          '<span class="n">serie_horaria</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">(</span><span class="n">datos</span><span class="p">,</span> <span class="n">horas</span><span class="p">)</span>',
          '<span class="n">serie_horaria</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          '2021-03-06 00:00:00   -0.853524',
          '2021-03-06 01:00:00   -1.355372',
          '2021-03-06 02:00:00   -1.267503',
          '2021-03-06 03:00:00   -1.155787',
          '2021-03-06 04:00:00    0.730935',
          '2021-03-06 05:00:00    1.435957',
          '2021-03-06 06:00:00    0.460912',
          '2021-03-06 07:00:00    0.723451',
          '2021-03-06 08:00:00   -0.853337',
          '2021-03-06 09:00:00    0.456359',
          'Freq: H, dtype: float64',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Localizamos os dados em um fuso hor√°rio</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="n">serie_horaria_utc</span> <span class="o">=</span> <span class="n">serie_horaria</span><span class="o">.</span><span class="n">tz_localize</span><span class="p">(</span><span class="s2">"UTC"</span><span class="p">)</span>',
          '<span class="n">serie_horaria_utc</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          '2021-03-06 00:00:00+00:00   -0.853524',
          '2021-03-06 01:00:00+00:00   -1.355372',
          '2021-03-06 02:00:00+00:00   -1.267503',
          '2021-03-06 03:00:00+00:00   -1.155787',
          '2021-03-06 04:00:00+00:00    0.730935',
          '2021-03-06 05:00:00+00:00    1.435957',
          '2021-03-06 06:00:00+00:00    0.460912',
          '2021-03-06 07:00:00+00:00    0.723451',
          '2021-03-06 08:00:00+00:00   -0.853337',
          '2021-03-06 09:00:00+00:00    0.456359',
          'Freq: H, dtype: float64',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>E agora podemos alter√°-las para outro uso</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="n">serie_horaria_US</span> <span class="o">=</span> <span class="n">serie_horaria_utc</span><span class="o">.</span><span class="n">tz_convert</span><span class="p">(</span><span class="s2">"US/Eastern"</span><span class="p">)</span>',
          '<span class="n">serie_horaria_US</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          '2021-03-05 19:00:00-05:00   -0.853524',
          '2021-03-05 20:00:00-05:00   -1.355372',
          '2021-03-05 21:00:00-05:00   -1.267503',
          '2021-03-05 22:00:00-05:00   -1.155787',
          '2021-03-05 23:00:00-05:00    0.730935',
          '2021-03-06 00:00:00-05:00    1.435957',
          '2021-03-06 01:00:00-05:00    0.460912',
          '2021-03-06 02:00:00-05:00    0.723451',
          '2021-03-06 03:00:00-05:00   -0.853337',
          '2021-03-06 04:00:00-05:00    0.456359',
          'Freq: H, dtype: float64',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <h2 id="15.-Dados-categ%C3%B3ricos">15. Dados categ√≥ricos<a class="anchor-link" href="#15.-Dados-categ%C3%B3ricos"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 196" src={svg_paths.link_svg_path}/></a></h2>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Pandas oferece a possibilidade de adicionar dados categ√≥ricos em um <code>DataFrame</code>. Suponha o seguinte <code>DataFrame</code></p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">dataframe</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span>
          <span class="p">{opening_brace}</span><span class="s2">"id"</span><span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">],</span> <span class="s2">"raw_grade"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"a"</span><span class="p">,</span> <span class="s2">"b"</span><span class="p">,</span> <span class="s2">"b"</span><span class="p">,</span> <span class="s2">"a"</span><span class="p">,</span> <span class="s2">"a"</span><span class="p">,</span> <span class="s2">"e"</span><span class="p">]{closing_brace}</span>
      <span class="p">)</span>
      
      <span class="n">dataframe</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[2]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>id</th>
      <th>raw_grade</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>0</th>
      <td>1</td>
      <td>a</td>
      </tr>
      <tr>
      <th>1</th>
      <td>2</td>
      <td>b</td>
      </tr>
      <tr>
      <th>2</th>
      <td>3</td>
      <td>b</td>
      </tr>
      <tr>
      <th>3</th>
      <td>4</td>
      <td>a</td>
      </tr>
      <tr>
      <th>4</th>
      <td>5</td>
      <td>a</td>
      </tr>
      <tr>
      <th>5</th>
      <td>6</td>
      <td>e</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Podemos converter os dados da coluna <code>raw_grade</code> para dados categ√≥ricos atrav√©s do m√©todo <code>astype()</code></p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">dataframe</span><span class="p">[</span><span class="s1">'grade'</span><span class="p">]</span> <span class="o">=</span> <span class="n">dataframe</span><span class="p">[</span><span class="s2">"raw_grade"</span><span class="p">]</span><span class="o">.</span><span class="n">astype</span><span class="p">(</span><span class="s2">"category"</span><span class="p">)</span>
      
      <span class="n">dataframe</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[3]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>id</th>
      <th>raw_grade</th>
      <th>grade</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>0</th>
      <td>1</td>
      <td>a</td>
      <td>a</td>
      </tr>
      <tr>
      <th>1</th>
      <td>2</td>
      <td>b</td>
      <td>b</td>
      </tr>
      <tr>
      <th>2</th>
      <td>3</td>
      <td>b</td>
      <td>b</td>
      </tr>
      <tr>
      <th>3</th>
      <td>4</td>
      <td>a</td>
      <td>a</td>
      </tr>
      <tr>
      <th>4</th>
      <td>5</td>
      <td>a</td>
      <td>a</td>
      </tr>
      <tr>
      <th>5</th>
      <td>6</td>
      <td>e</td>
      <td>e</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>As colunas <code>raw_grade</code> e <code>grade</code> parecem iguais, mas se olharmos as informa√ß√µes do <code>DataFrame</code>, podemos ver que n√£o √© assim.</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="n">dataframe</span><span class="o">.</span><span class="n">info</span><span class="p">()</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          '&lt;class \'pandas.core.frame.DataFrame\'&gt;',
          'RangeIndex: 6 entries, 0 to 5',
          'Data columns (total 3 columns):',
          ' #   Column     Non-Null Count  Dtype   ',
          '---  ------     --------------  -----   ',
          ' 0   id         6 non-null      int64   ',
          ' 1   raw_grade  6 non-null      object  ',
          ' 2   grade      6 non-null      category',
          'dtypes: category(1), int64(1), object(1)',
          'memory usage: 334.0+ bytes',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Pode-se ver que a coluna <code>grade</code> √© do tipo categ√≥rico</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Podemos ver as categorias dos tipos de dados categ√≥ricos atrav√©s do m√©todo <code>cat.categories()</code></p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="n">dataframe</span><span class="p">[</span><span class="s2">"grade"</span><span class="p">]</span><span class="o">.</span><span class="n">cat</span><span class="o">.</span><span class="n">categories</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'Index([\'a\', \'b\', \'e\'], dtype=\'object\')',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Tamb√©m podemos renomear as categorias com o mesmo m√©todo, mas introduzindo uma lista com as novas categorias.</p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">dataframe</span><span class="p">[</span><span class="s2">"grade"</span><span class="p">]</span><span class="o">.</span><span class="n">cat</span><span class="o">.</span><span class="n">categories</span> <span class="o">=</span> <span class="p">[</span><span class="s2">"very good"</span><span class="p">,</span> <span class="s2">"good"</span><span class="p">,</span> <span class="s2">"very bad"</span><span class="p">]</span>
      <span class="n">dataframe</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[7]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>id</th>
      <th>raw_grade</th>
      <th>grade</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>0</th>
      <td>1</td>
      <td>a</td>
      <td>very good</td>
      </tr>
      <tr>
      <th>1</th>
      <td>2</td>
      <td>b</td>
      <td>good</td>
      </tr>
      <tr>
      <th>2</th>
      <td>3</td>
      <td>b</td>
      <td>good</td>
      </tr>
      <tr>
      <th>3</th>
      <td>4</td>
      <td>a</td>
      <td>very good</td>
      </tr>
      <tr>
      <th>4</th>
      <td>5</td>
      <td>a</td>
      <td>very good</td>
      </tr>
      <tr>
      <th>5</th>
      <td>6</td>
      <td>e</td>
      <td>very bad</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Pandas nos d√° a possibilidade de codificar numericamente os dados categ√≥ricos atrav√©s do m√©todo <code>get_dummies</code></p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">pd</span><span class="o">.</span><span class="n">get_dummies</span><span class="p">(</span><span class="n">dataframe</span><span class="p">[</span><span class="s2">"grade"</span><span class="p">])</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[8]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>very good</th>
      <th>good</th>
      <th>very bad</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>0</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      </tr>
      <tr>
      <th>1</th>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      </tr>
      <tr>
      <th>2</th>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      </tr>
      <tr>
      <th>3</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      </tr>
      <tr>
      <th>4</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      </tr>
      <tr>
      <th>5</th>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <h2 id="16.-Groupby">16. Groupby<a class="anchor-link" href="#16.-Groupby"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 197" src={svg_paths.link_svg_path}/></a></h2>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Podemos agrupar os dataframes pelos valores de alguma das colunas. Vamos recarregar o dataframe com o valor das casas da Calif√≥rnia.</p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">california_housing_train</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s2">"https://raw.githubusercontent.com/maximofn/portafolio/main/posts/california_housing_train.csv"</span><span class="p">)</span>
      <span class="n">california_housing_train</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[43]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>longitude</th>
      <th>latitude</th>
      <th>housing_median_age</th>
      <th>total_rooms</th>
      <th>total_bedrooms</th>
      <th>population</th>
      <th>households</th>
      <th>median_income</th>
      <th>median_house_value</th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>0</th>
      <td>-114.31</td>
      <td>34.19</td>
      <td>15.0</td>
      <td>5612.0</td>
      <td>1283.0</td>
      <td>1015.0</td>
      <td>472.0</td>
      <td>1.4936</td>
      <td>66900.0</td>
      </tr>
      <tr>
      <th>1</th>
      <td>-114.47</td>
      <td>34.40</td>
      <td>19.0</td>
      <td>7650.0</td>
      <td>1901.0</td>
      <td>1129.0</td>
      <td>463.0</td>
      <td>1.8200</td>
      <td>80100.0</td>
      </tr>
      <tr>
      <th>2</th>
      <td>-114.56</td>
      <td>33.69</td>
      <td>17.0</td>
      <td>720.0</td>
      <td>174.0</td>
      <td>333.0</td>
      <td>117.0</td>
      <td>1.6509</td>
      <td>85700.0</td>
      </tr>
      <tr>
      <th>3</th>
      <td>-114.57</td>
      <td>33.64</td>
      <td>14.0</td>
      <td>1501.0</td>
      <td>337.0</td>
      <td>515.0</td>
      <td>226.0</td>
      <td>3.1917</td>
      <td>73400.0</td>
      </tr>
      <tr>
      <th>4</th>
      <td>-114.57</td>
      <td>33.57</td>
      <td>20.0</td>
      <td>1454.0</td>
      <td>326.0</td>
      <td>624.0</td>
      <td>262.0</td>
      <td>1.9250</td>
      <td>65500.0</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Agora podemos agrupar os dados por alguma das colunas, por exemplo, agrupemos as casas em fun√ß√£o do n√∫mero de anos e vejamos quantas casas h√° de cada idade com <code>count</code></p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">california_housing_train</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="s2">"housing_median_age"</span><span class="p">)</span><span class="o">.</span><span class="n">count</span><span class="p">()</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[8]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>longitude</th>
      <th>latitude</th>
      <th>total_rooms</th>
      <th>total_bedrooms</th>
      <th>population</th>
      <th>households</th>
      <th>median_income</th>
      <th>median_house_value</th>
      </tr>
      <tr>
      <th>housing_median_age</th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>1.0</th>
      <td>2</td>
      <td>2</td>
      <td>2</td>
      <td>2</td>
      <td>2</td>
      <td>2</td>
      <td>2</td>
      <td>2</td>
      </tr>
      <tr>
      <th>2.0</th>
      <td>49</td>
      <td>49</td>
      <td>49</td>
      <td>49</td>
      <td>49</td>
      <td>49</td>
      <td>49</td>
      <td>49</td>
      </tr>
      <tr>
      <th>3.0</th>
      <td>46</td>
      <td>46</td>
      <td>46</td>
      <td>46</td>
      <td>46</td>
      <td>46</td>
      <td>46</td>
      <td>46</td>
      </tr>
      <tr>
      <th>4.0</th>
      <td>161</td>
      <td>161</td>
      <td>161</td>
      <td>161</td>
      <td>161</td>
      <td>161</td>
      <td>161</td>
      <td>161</td>
      </tr>
      <tr>
      <th>5.0</th>
      <td>199</td>
      <td>199</td>
      <td>199</td>
      <td>199</td>
      <td>199</td>
      <td>199</td>
      <td>199</td>
      <td>199</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Como vemos em todas as colunas, obtemos o mesmo valor, que √© o n√∫mero de casas que h√° com uma determinada idade, mas podemos saber a m√©dia do valor de cada coluna com <code>mean</code></p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">california_housing_train</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="s2">"housing_median_age"</span><span class="p">)</span><span class="o">.</span><span class="n">mean</span><span class="p">()</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[9]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th>longitude</th>
      <th>latitude</th>
      <th>total_rooms</th>
      <th>total_bedrooms</th>
      <th>population</th>
      <th>households</th>
      <th>median_income</th>
      <th>median_house_value</th>
      </tr>
      <tr>
      <th>housing_median_age</th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>1.0</th>
      <td>-121.465000</td>
      <td>37.940000</td>
      <td>2158.000000</td>
      <td>335.500000</td>
      <td>637.000000</td>
      <td>190.000000</td>
      <td>4.756800</td>
      <td>190250.000000</td>
      </tr>
      <tr>
      <th>2.0</th>
      <td>-119.035306</td>
      <td>35.410816</td>
      <td>5237.102041</td>
      <td>871.448980</td>
      <td>2005.224490</td>
      <td>707.122449</td>
      <td>5.074237</td>
      <td>229438.836735</td>
      </tr>
      <tr>
      <th>3.0</th>
      <td>-118.798478</td>
      <td>35.164783</td>
      <td>6920.326087</td>
      <td>1190.826087</td>
      <td>2934.673913</td>
      <td>1030.413043</td>
      <td>5.572013</td>
      <td>239450.043478</td>
      </tr>
      <tr>
      <th>4.0</th>
      <td>-118.805093</td>
      <td>34.987764</td>
      <td>6065.614907</td>
      <td>1068.192547</td>
      <td>2739.956522</td>
      <td>964.291925</td>
      <td>5.196055</td>
      <td>230054.105590</td>
      </tr>
      <tr>
      <th>5.0</th>
      <td>-118.789497</td>
      <td>35.095327</td>
      <td>4926.261307</td>
      <td>910.924623</td>
      <td>2456.979899</td>
      <td>826.768844</td>
      <td>4.732460</td>
      <td>211035.708543</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Podemos obter v√°rias medidas de cada idade atrav√©s do comando <code>agg</code> (agrega√ß√£o), passando-lhe as medidas que queremos por meio de uma lista, por exemplo, vejamos o m√≠nimo, o m√°ximo e a m√©dia de cada coluna para cada idade de cada</p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">california_housing_train</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="s2">"housing_median_age"</span><span class="p">)</span><span class="o">.</span><span class="n">agg</span><span class="p">([</span><span class="s1">'min'</span><span class="p">,</span> <span class="s1">'max'</span><span class="p">,</span> <span class="s1">'mean'</span><span class="p">])</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[10]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead tr th {
              text-align: left;
          }
      
          .dataframe thead tr:last-of-type th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr>
      <th></th>
      <th colspan="3" halign="left">longitude</th>
      <th colspan="3" halign="left">latitude</th>
      <th colspan="3" halign="left">total_rooms</th>
      <th>total_bedrooms</th>
      <th>...</th>
      <th>population</th>
      <th colspan="3" halign="left">households</th>
      <th colspan="3" halign="left">median_income</th>
      <th colspan="3" halign="left">median_house_value</th>
      </tr>
      <tr>
      <th></th>
      <th>min</th>
      <th>max</th>
      <th>mean</th>
      <th>min</th>
      <th>max</th>
      <th>mean</th>
      <th>min</th>
      <th>max</th>
      <th>mean</th>
      <th>min</th>
      <th>...</th>
      <th>mean</th>
      <th>min</th>
      <th>max</th>
      <th>mean</th>
      <th>min</th>
      <th>max</th>
      <th>mean</th>
      <th>min</th>
      <th>max</th>
      <th>mean</th>
      </tr>
      <tr>
      <th>housing_median_age</th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>1.0</th>
      <td>-122.00</td>
      <td>-120.93</td>
      <td>-121.465000</td>
      <td>37.65</td>
      <td>38.23</td>
      <td>37.940000</td>
      <td>2062.0</td>
      <td>2254.0</td>
      <td>2158.000000</td>
      <td>328.0</td>
      <td>...</td>
      <td>637.000000</td>
      <td>112.0</td>
      <td>268.0</td>
      <td>190.000000</td>
      <td>4.2500</td>
      <td>5.2636</td>
      <td>4.756800</td>
      <td>189200.0</td>
      <td>191300.0</td>
      <td>190250.000000</td>
      </tr>
      <tr>
      <th>2.0</th>
      <td>-122.51</td>
      <td>-115.80</td>
      <td>-119.035306</td>
      <td>33.16</td>
      <td>40.58</td>
      <td>35.410816</td>
      <td>96.0</td>
      <td>21897.0</td>
      <td>5237.102041</td>
      <td>18.0</td>
      <td>...</td>
      <td>2005.224490</td>
      <td>16.0</td>
      <td>2873.0</td>
      <td>707.122449</td>
      <td>1.9667</td>
      <td>10.1531</td>
      <td>5.074237</td>
      <td>47500.0</td>
      <td>500001.0</td>
      <td>229438.836735</td>
      </tr>
      <tr>
      <th>3.0</th>
      <td>-122.33</td>
      <td>-115.60</td>
      <td>-118.798478</td>
      <td>32.87</td>
      <td>38.77</td>
      <td>35.164783</td>
      <td>475.0</td>
      <td>21060.0</td>
      <td>6920.326087</td>
      <td>115.0</td>
      <td>...</td>
      <td>2934.673913</td>
      <td>123.0</td>
      <td>3112.0</td>
      <td>1030.413043</td>
      <td>2.1187</td>
      <td>11.5199</td>
      <td>5.572013</td>
      <td>83200.0</td>
      <td>500001.0</td>
      <td>239450.043478</td>
      </tr>
      <tr>
      <th>4.0</th>
      <td>-122.72</td>
      <td>-116.76</td>
      <td>-118.805093</td>
      <td>32.65</td>
      <td>39.00</td>
      <td>34.987764</td>
      <td>2.0</td>
      <td>37937.0</td>
      <td>6065.614907</td>
      <td>2.0</td>
      <td>...</td>
      <td>2739.956522</td>
      <td>2.0</td>
      <td>5189.0</td>
      <td>964.291925</td>
      <td>0.5360</td>
      <td>13.4883</td>
      <td>5.196055</td>
      <td>42500.0</td>
      <td>500001.0</td>
      <td>230054.105590</td>
      </tr>
      <tr>
      <th>5.0</th>
      <td>-122.55</td>
      <td>-115.55</td>
      <td>-118.789497</td>
      <td>32.55</td>
      <td>40.60</td>
      <td>35.095327</td>
      <td>111.0</td>
      <td>25187.0</td>
      <td>4926.261307</td>
      <td>21.0</td>
      <td>...</td>
      <td>2456.979899</td>
      <td>20.0</td>
      <td>3886.0</td>
      <td>826.768844</td>
      <td>0.7526</td>
      <td>12.6320</td>
      <td>4.732460</td>
      <td>50000.0</td>
      <td>500001.0</td>
      <td>211035.708543</td>
      </tr>
      </tbody>
      </table>
      <p>5 rows √ó 24 columns</p>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Podemos especificar sobre quais colunas queremos realizar certos c√°lculos atrav√©s da passagem de um dicion√°rio, onde as chaves ser√£o as colunas sobre as quais queremos realizar c√°lculos e os valores ser√£o listas com os c√°lculos.</p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">california_housing_train</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="s2">"housing_median_age"</span><span class="p">)</span><span class="o">.</span><span class="n">agg</span><span class="p">({opening_brace}</span><span class="s1">'total_rooms'</span><span class="p">:</span> <span class="p">[</span><span class="s1">'min'</span><span class="p">,</span> <span class="s1">'max'</span><span class="p">,</span> <span class="s1">'mean'</span><span class="p">],</span> <span class="s1">'total_bedrooms'</span><span class="p">:</span> <span class="p">[</span><span class="s1">'min'</span><span class="p">,</span> <span class="s1">'max'</span><span class="p">,</span> <span class="s1">'mean'</span><span class="p">,</span> <span class="s1">'median'</span><span class="p">]{closing_brace})</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[12]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead tr th {
              text-align: left;
          }
      
          .dataframe thead tr:last-of-type th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr>
      <th></th>
      <th colspan="3" halign="left">total_rooms</th>
      <th colspan="4" halign="left">total_bedrooms</th>
      </tr>
      <tr>
      <th></th>
      <th>min</th>
      <th>max</th>
      <th>mean</th>
      <th>min</th>
      <th>max</th>
      <th>mean</th>
      <th>median</th>
      </tr>
      <tr>
      <th>housing_median_age</th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th>1.0</th>
      <td>2062.0</td>
      <td>2254.0</td>
      <td>2158.000000</td>
      <td>328.0</td>
      <td>343.0</td>
      <td>335.500000</td>
      <td>335.5</td>
      </tr>
      <tr>
      <th>2.0</th>
      <td>96.0</td>
      <td>21897.0</td>
      <td>5237.102041</td>
      <td>18.0</td>
      <td>3513.0</td>
      <td>871.448980</td>
      <td>707.0</td>
      </tr>
      <tr>
      <th>3.0</th>
      <td>475.0</td>
      <td>21060.0</td>
      <td>6920.326087</td>
      <td>115.0</td>
      <td>3559.0</td>
      <td>1190.826087</td>
      <td>954.0</td>
      </tr>
      <tr>
      <th>4.0</th>
      <td>2.0</td>
      <td>37937.0</td>
      <td>6065.614907</td>
      <td>2.0</td>
      <td>5471.0</td>
      <td>1068.192547</td>
      <td>778.0</td>
      </tr>
      <tr>
      <th>5.0</th>
      <td>111.0</td>
      <td>25187.0</td>
      <td>4926.261307</td>
      <td>21.0</td>
      <td>4386.0</td>
      <td>910.924623</td>
      <td>715.0</td>
      </tr>
      </tbody>
      </table>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Podemos agrupar por mais de uma coluna, para isso, √© necess√°rio passar as colunas em uma lista</p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">california_housing_train</span><span class="o">.</span><span class="n">groupby</span><span class="p">([</span><span class="s2">"housing_median_age"</span><span class="p">,</span> <span class="s2">"total_bedrooms"</span><span class="p">])</span><span class="o">.</span><span class="n">mean</span><span class="p">()</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[16]:</div>
      <div class="output-html-rendered-html-output-subareaoutput_execute_result"><div>
      <style scoped="">
          .dataframe tbody tr th:only-of-type {
              vertical-align: middle;
          }
      
          .dataframe tbody tr th {
              vertical-align: top;
          }
      
          .dataframe thead th {
              text-align: right;
          }
      </style>
      <table border="1" class="dataframe">
      <thead>
      <tr style="text-align: right;">
      <th></th>
      <th></th>
      <th>longitude</th>
      <th>latitude</th>
      <th>total_rooms</th>
      <th>population</th>
      <th>households</th>
      <th>median_income</th>
      <th>median_house_value</th>
      </tr>
      <tr>
      <th>housing_median_age</th>
      <th>total_bedrooms</th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      </tr>
      </thead>
      <tbody>
      <tr>
      <th rowspan="2" valign="top">1.0</th>
      <th>328.0</th>
      <td>-120.93</td>
      <td>37.65</td>
      <td>2254.0</td>
      <td>402.0</td>
      <td>112.0</td>
      <td>4.2500</td>
      <td>189200.0</td>
      </tr>
      <tr>
      <th>343.0</th>
      <td>-122.00</td>
      <td>38.23</td>
      <td>2062.0</td>
      <td>872.0</td>
      <td>268.0</td>
      <td>5.2636</td>
      <td>191300.0</td>
      </tr>
      <tr>
      <th rowspan="3" valign="top">2.0</th>
      <th>18.0</th>
      <td>-115.80</td>
      <td>33.26</td>
      <td>96.0</td>
      <td>30.0</td>
      <td>16.0</td>
      <td>5.3374</td>
      <td>47500.0</td>
      </tr>
      <tr>
      <th>35.0</th>
      <td>-121.93</td>
      <td>37.78</td>
      <td>227.0</td>
      <td>114.0</td>
      <td>49.0</td>
      <td>3.1591</td>
      <td>434700.0</td>
      </tr>
      <tr>
      <th>55.0</th>
      <td>-117.27</td>
      <td>33.93</td>
      <td>337.0</td>
      <td>115.0</td>
      <td>49.0</td>
      <td>3.1042</td>
      <td>164800.0</td>
      </tr>
      <tr>
      <th>...</th>
      <th>...</th>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      </tr>
      <tr>
      <th rowspan="5" valign="top">52.0</th>
      <th>1360.0</th>
      <td>-118.35</td>
      <td>34.06</td>
      <td>3446.0</td>
      <td>1768.0</td>
      <td>1245.0</td>
      <td>2.4722</td>
      <td>500001.0</td>
      </tr>
      <tr>
      <th>1535.0</th>
      <td>-122.41</td>
      <td>37.80</td>
      <td>3260.0</td>
      <td>3260.0</td>
      <td>1457.0</td>
      <td>0.9000</td>
      <td>500001.0</td>
      </tr>
      <tr>
      <th>1944.0</th>
      <td>-118.25</td>
      <td>34.05</td>
      <td>2806.0</td>
      <td>2232.0</td>
      <td>1605.0</td>
      <td>0.6775</td>
      <td>350000.0</td>
      </tr>
      <tr>
      <th>2509.0</th>
      <td>-122.41</td>
      <td>37.79</td>
      <td>6016.0</td>
      <td>3436.0</td>
      <td>2119.0</td>
      <td>2.5166</td>
      <td>275000.0</td>
      </tr>
      <tr>
      <th>2747.0</th>
      <td>-122.41</td>
      <td>37.79</td>
      <td>5783.0</td>
      <td>4518.0</td>
      <td>2538.0</td>
      <td>1.7240</td>
      <td>225000.0</td>
      </tr>
      </tbody>
      </table>
      <p>13394 rows √ó 7 columns</p>
      </div></div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <h2 id="17.-Gr%C3%A1ficos">17. Gr√°ficos<a class="anchor-link" href="#17.-Gr%C3%A1ficos"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 198" src={svg_paths.link_svg_path}/></a></h2>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Pandas oferece a possibilidade de representar os dados dos nossos <code>DataFrame</code>s em gr√°ficos para poder obter uma melhor representa√ß√£o deles. Para isso, utiliza a biblioteca <code>matplotlib</code>, que veremos no pr√≥ximo post.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="17.1.-Gr%C3%A1fico-b%C3%A1sico">17.1. Gr√°fico b√°sico<a class="anchor-link" href="#17.1.-Gr%C3%A1fico-b%C3%A1sico"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 199" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Para representar os dados em um gr√°fico, a maneira mais f√°cil √© usar o m√©todo <code>plot()</code></p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">serie</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">randn</span><span class="p">(</span><span class="mi">1000</span><span class="p">),</span> <span class="n">index</span><span class="o">=</span><span class="n">pd</span><span class="o">.</span><span class="n">date_range</span><span class="p">(</span><span class="s2">"1/1/2000"</span><span class="p">,</span> <span class="n">periods</span><span class="o">=</span><span class="mi">1000</span><span class="p">))</span>
      <span class="n">serie</span> <span class="o">=</span> <span class="n">serie</span><span class="o">.</span><span class="n">cumsum</span><span class="p">()</span>
      
      <span class="n">serie</span><span class="o">.</span><span class="n">plot</span><span class="p">()</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[13]:</div>
      <div class="output-text-output-subareaoutput_execute_result">
      <pre>&lt;matplotlib.axes._subplots.AxesSubplot at 0x7fc5666b9990&gt;</pre>
      </div>
      </div>
      <div class="output-area">
      <div class="prompt"></div>
      <div class="output-png-output-subarea">
      <img src="https://pub-fb664c455eca46a2ba762a065ac900f7.r2.dev/pandas0.webp" width="377" height="260" alt="image pandas 1" loading="lazy">
      </div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>No caso de ter um <code>DataFrame</code>, o m√©todo <code>plot()</code> representar√° cada uma das colunas do <code>DataFrame</code></p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">dataframe</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span>
          <span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">randn</span><span class="p">(</span><span class="mi">1000</span><span class="p">,</span> <span class="mi">4</span><span class="p">),</span> <span class="n">index</span><span class="o">=</span><span class="n">ts</span><span class="o">.</span><span class="n">index</span><span class="p">,</span> <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s2">"A"</span><span class="p">,</span> <span class="s2">"B"</span><span class="p">,</span> <span class="s2">"C"</span><span class="p">,</span> <span class="s2">"D"</span><span class="p">]</span>
      <span class="p">)</span>
      <span class="n">dataframe</span> <span class="o">=</span> <span class="n">dataframe</span><span class="o">.</span><span class="n">cumsum</span><span class="p">()</span>
      
      <span class="n">dataframe</span><span class="o">.</span><span class="n">plot</span><span class="p">()</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[15]:</div>
      <div class="output-text-output-subareaoutput_execute_result">
      <pre>&lt;matplotlib.axes._subplots.AxesSubplot at 0x7fc5663ce610&gt;</pre>
      </div>
      </div>
      <div class="output-area">
      <div class="prompt"></div>
      <div class="output-png-output-subarea">
      <img src="https://pub-fb664c455eca46a2ba762a065ac900f7.r2.dev/pandas1.webp" width="377" height="260" alt="image pandas 2" loading="lazy">
      </div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="17.2.-Diagrama-de-barras-verticais">17.2. Diagrama de barras verticais<a class="anchor-link" href="#17.2.-Diagrama-de-barras-verticais"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 200" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>H√° mais m√©todos para criar gr√°ficos, como o gr√°fico de barras vertical atrav√©s de <code>plot.bar()</code></p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">dataframe</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">rand</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">4</span><span class="p">),</span> <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s2">"a"</span><span class="p">,</span> <span class="s2">"b"</span><span class="p">,</span> <span class="s2">"c"</span><span class="p">,</span> <span class="s2">"d"</span><span class="p">])</span>
      <span class="n">dataframe</span><span class="o">.</span><span class="n">plot</span><span class="o">.</span><span class="n">bar</span><span class="p">()</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt"></div>
      <div class="output-png-output-subarea">
      <img src="https://pub-fb664c455eca46a2ba762a065ac900f7.r2.dev/pandas2.webp" width="372" height="245" alt="image pandas 3" loading="lazy">
      </div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Se quisermos empilhar as barras, indicamos isso atrav√©s da vari√°vel <code>stacked=True</code></p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">dataframe</span><span class="o">.</span><span class="n">plot</span><span class="o">.</span><span class="n">bar</span><span class="p">(</span><span class="n">stacked</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[20]:</div>
      <div class="output-text-output-subareaoutput_execute_result">
      <pre>&lt;matplotlib.axes._subplots.AxesSubplot at 0x7fc56265c5d0&gt;</pre>
      </div>
      </div>
      <div class="output-area">
      <div class="prompt"></div>
      <div class="output-png-output-subarea">
      <img src="https://pub-fb664c455eca46a2ba762a065ac900f7.r2.dev/pandas3.webp" width="372" height="245" alt="image pandas 4" loading="lazy">
      </div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="17.3.-Diagrama-de-barras-horizontal">17.3. Diagrama de barras horizontal<a class="anchor-link" href="#17.3.-Diagrama-de-barras-horizontal"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 201" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Para criar um diagrama de barras horizontal usamos <code>plot.barh()</code></p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">dataframe</span><span class="o">.</span><span class="n">plot</span><span class="o">.</span><span class="n">barh</span><span class="p">()</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[21]:</div>
      <div class="output-text-output-subareaoutput_execute_result">
      <pre>&lt;matplotlib.axes._subplots.AxesSubplot at 0x7fc56247fa10&gt;</pre>
      </div>
      </div>
      <div class="output-area">
      <div class="prompt"></div>
      <div class="output-png-output-subarea">
      <img src="https://pub-fb664c455eca46a2ba762a065ac900f7.r2.dev/pandas4.webp" width="362" height="248" alt="image pandas 5" loading="lazy">
      </div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Se quisermos empilhar as barras, indicamos isso atrav√©s da vari√°vel <code>stacked=True</code></p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">dataframe</span><span class="o">.</span><span class="n">plot</span><span class="o">.</span><span class="n">barh</span><span class="p">(</span><span class="n">stacked</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[22]:</div>
      <div class="output-text-output-subareaoutput_execute_result">
      <pre>&lt;matplotlib.axes._subplots.AxesSubplot at 0x7fc562d1d2d0&gt;</pre>
      </div>
      </div>
      <div class="output-area">
      <div class="prompt"></div>
      <div class="output-png-output-subarea">
      <img src="https://pub-fb664c455eca46a2ba762a065ac900f7.r2.dev/pandas5.webp" width="362" height="248" alt="image pandas 6" loading="lazy">
      </div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="17.4.-Histograma">17.4. Histograma<a class="anchor-link" href="#17.4.-Histograma"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 202" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Para criar um histograma usamos <code>plot.hist()</code></p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">dataframe</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span>
          <span class="p">{opening_brace}</span>
              <span class="s2">"a"</span><span class="p">:</span> <span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">randn</span><span class="p">(</span><span class="mi">1000</span><span class="p">)</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span>
              <span class="s2">"b"</span><span class="p">:</span> <span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">randn</span><span class="p">(</span><span class="mi">1000</span><span class="p">),</span>
              <span class="s2">"c"</span><span class="p">:</span> <span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">randn</span><span class="p">(</span><span class="mi">1000</span><span class="p">)</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span>
          <span class="p">{closing_brace}</span>
      <span class="p">)</span>
      
      <span class="n">dataframe</span><span class="o">.</span><span class="n">plot</span><span class="o">.</span><span class="n">hist</span><span class="p">(</span><span class="n">alpha</span><span class="o">=</span><span class="mf">0.5</span><span class="p">)</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[28]:</div>
      <div class="output-text-output-subareaoutput_execute_result">
      <pre>&lt;matplotlib.axes._subplots.AxesSubplot at 0x7fc5650711d0&gt;</pre>
      </div>
      </div>
      <div class="output-area">
      <div class="prompt"></div>
      <div class="output-png-output-subarea">
      <img src="https://pub-fb664c455eca46a2ba762a065ac900f7.r2.dev/pandas6.webp" width="389" height="248" alt="image pandas 7" loading="lazy">
      </div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Se quisermos empilhar as barras, indicamos isso atrav√©s da vari√°vel <code>stacked=True</code></p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">dataframe</span><span class="o">.</span><span class="n">plot</span><span class="o">.</span><span class="n">hist</span><span class="p">(</span><span class="n">alpha</span><span class="o">=</span><span class="mf">0.5</span><span class="p">,</span> <span class="n">stacked</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[29]:</div>
      <div class="output-text-output-subareaoutput_execute_result">
      <pre>&lt;matplotlib.axes._subplots.AxesSubplot at 0x7fc5625779d0&gt;</pre>
      </div>
      </div>
      <div class="output-area">
      <div class="prompt"></div>
      <div class="output-png-output-subarea">
      <img src="https://pub-fb664c455eca46a2ba762a065ac900f7.r2.dev/pandas7.webp" width="389" height="248" alt="image pandas 8" loading="lazy">
      </div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Se quisermos adicionar mais colunas, ou seja, se quisermos que o histograma seja mais informativo ou preciso, indicamos isso atrav√©s da vari√°vel <code>bins</code></p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">dataframe</span><span class="o">.</span><span class="n">plot</span><span class="o">.</span><span class="n">hist</span><span class="p">(</span><span class="n">alpha</span><span class="o">=</span><span class="mf">0.5</span><span class="p">,</span> <span class="n">stacked</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span> <span class="n">bins</span><span class="o">=</span><span class="mi">20</span><span class="p">)</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[30]:</div>
      <div class="output-text-output-subareaoutput_execute_result">
      <pre>&lt;matplotlib.axes._subplots.AxesSubplot at 0x7fc562324990&gt;</pre>
      </div>
      </div>
      <div class="output-area">
      <div class="prompt"></div>
      <div class="output-png-output-subarea">
      <img src="https://pub-fb664c455eca46a2ba762a065ac900f7.r2.dev/pandas8.webp" width="389" height="248" alt="image pandas 9" loading="lazy">
      </div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="17.5.-Diagramas-de-Velas">17.5. Diagramas de Velas<a class="anchor-link" href="#17.5.-Diagramas-de-Velas"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 203" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Para criar um diagrama de velas usamos <code>plot.box()</code></p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">dataframe</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">rand</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">5</span><span class="p">),</span> <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s2">"A"</span><span class="p">,</span> <span class="s2">"B"</span><span class="p">,</span> <span class="s2">"C"</span><span class="p">,</span> <span class="s2">"D"</span><span class="p">,</span> <span class="s2">"E"</span><span class="p">])</span>
      
      <span class="n">dataframe</span><span class="o">.</span><span class="n">plot</span><span class="o">.</span><span class="n">box</span><span class="p">()</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[34]:</div>
      <div class="output-text-output-subareaoutput_execute_result">
      <pre>&lt;matplotlib.axes._subplots.AxesSubplot at 0x7fc56201a410&gt;</pre>
      </div>
      </div>
      <div class="output-area">
      <div class="prompt"></div>
      <div class="output-png-output-subarea">
      <img src="https://pub-fb664c455eca46a2ba762a065ac900f7.r2.dev/pandas9.webp" width="372" height="248" alt="image pandas 10" loading="lazy">
      </div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="17.6.-Gr%C3%A1ficos-de-%C3%A1reas">17.6. Gr√°ficos de √°reas<a class="anchor-link" href="#17.6.-Gr%C3%A1ficos-de-%C3%A1reas"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 204" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Para criar um gr√°fico de √°reas usamos <code>plot.area()</code></p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">dataframe</span><span class="o">.</span><span class="n">plot</span><span class="o">.</span><span class="n">area</span><span class="p">()</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[36]:</div>
      <div class="output-text-output-subareaoutput_execute_result">
      <pre>&lt;matplotlib.axes._subplots.AxesSubplot at 0x7fc561e9ca50&gt;</pre>
      </div>
      </div>
      <div class="output-area">
      <div class="prompt"></div>
      <div class="output-png-output-subarea">
      <img src="https://pub-fb664c455eca46a2ba762a065ac900f7.r2.dev/pandas10.webp" width="372" height="248" alt="image pandas 11" loading="lazy">
      </div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="17.7.-Diagrama-de-dispers%C3%A3o">17.7. Diagrama de dispers√£o<a class="anchor-link" href="#17.7.-Diagrama-de-dispers%C3%A3o"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 205" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Para criar um diagrama de dispers√£o usamos <code>plot.scatter()</code>, onde √© necess√°rio indicar as vari√°veis <code>x</code> e <code>y</code> do diagrama</p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">dataframe</span><span class="o">.</span><span class="n">plot</span><span class="o">.</span><span class="n">scatter</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s1">'A'</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="s1">'B'</span><span class="p">)</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[38]:</div>
      <div class="output-text-output-subareaoutput_execute_result">
      <pre>&lt;matplotlib.axes._subplots.AxesSubplot at 0x7fc561e2ff10&gt;</pre>
      </div>
      </div>
      <div class="output-area">
      <div class="prompt"></div>
      <div class="output-png-output-subarea">
      <img src="https://pub-fb664c455eca46a2ba762a065ac900f7.r2.dev/pandas11.webp" width="386" height="262" alt="image pandas 12" loading="lazy">
      </div>
      </div>
      </div>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="17.8.-Gr%C3%A1fico-de-cont%C3%AAiner-hexagonal">17.8. Gr√°fico de cont√™iner hexagonal<a class="anchor-link" href="#17.8.-Gr%C3%A1fico-de-cont%C3%AAiner-hexagonal"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 206" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Para criar um gr√°fico de cont√™iner hexagonal usamos <code>plot.hexbin()</code>, onde √© necess√°rio indicar as vari√°veis <code>x</code> e <code>y</code> do diagrama e o tamanho da malha por meio de <code>gridsize</code></p>
      </section>
      
      <section class="section-block-code-cell-">
      <div class="input-code">
      <div class="highlight hl-ipython3">
<pre><span></span><span class="n">dataframe</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">randn</span><span class="p">(</span><span class="mi">1000</span><span class="p">,</span> <span class="mi">2</span><span class="p">),</span> <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s2">"a"</span><span class="p">,</span> <span class="s2">"b"</span><span class="p">])</span>
      <span class="n">dataframe</span><span class="p">[</span><span class="s2">"b"</span><span class="p">]</span> <span class="o">=</span> <span class="n">dataframe</span><span class="p">[</span><span class="s2">"b"</span><span class="p">]</span> <span class="o">+</span> <span class="n">np</span><span class="o">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">1000</span><span class="p">)</span>
      
      <span class="n">dataframe</span><span class="o">.</span><span class="n">plot</span><span class="o">.</span><span class="n">hexbin</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s2">"a"</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="s2">"b"</span><span class="p">,</span> <span class="n">gridsize</span><span class="o">=</span><span class="mi">25</span><span class="p">)</span>
      </pre></div>
      </div>
      <div class="output-wrapper">
      <div class="output-area">
      <div class="prompt-output-prompt">Out[40]:</div>
      <div class="output-text-output-subareaoutput_execute_result">
      <pre>&lt;matplotlib.axes._subplots.AxesSubplot at 0x7fc561cdded0&gt;</pre>
      </div>
      </div>
      <div class="output-area">
      <div class="prompt"></div>
      <div class="output-png-output-subarea">
      <img src="https://pub-fb664c455eca46a2ba762a065ac900f7.r2.dev/pandas12.webp" width="369" height="241" alt="image pandas 13" loading="lazy">
      </div>
      </div>
      </div>
      </section>
      






    </div>

  </section>

</PostLayout>
