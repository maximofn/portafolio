---
import PostLayout from '@layouts/PostLayout.astro';

const { metadata_page } = await import('@portfolio/consts.json');
const { colors } = await import('@portfolio/consts.json');
const { svg_paths } = await import('@portfolio/consts.json');

const page_title = 'Introdu√ß√£o ao Python';
const end_url = 'python';
const description = 'Python üêç √© uma das linguagens de programa√ß√£o üíª MAIS USADAS. Entre e aprenda tudo o que precisa sobre Python üêç';
const keywords = 'python, introdu√ß√£o, tutorial, b√°sico, iniciantes';
const languaje = 'PT';
const image_path = '/images/icon-python.webp';
const opening_brace = '{';
const closing_brace = '}';
---

<PostLayout 
    title={page_title}
    languaje={languaje}
    description={description}
    keywords={keywords}
    author={metadata_page.author}
    theme_color={colors.background_color}
    end_url={end_url}
    image_path={image_path}image_width=800
    image_height=336
    image_extension=webp
    article_date=2021-02-11+T00:00:00Z
>

  <section class="post-body-post">


    <div class="post-index">
      <a class="anchor-link" href="#1.-Resumo"><h2>1. Resumo</h2></a>
      <a class="anchor-link" href="#2.-Tipos-de-dados-Python"><h2>2. Tipos de dados Python</h2></a>
      <a class="anchor-link" href="#2.1-Cadeias-de-caracteres"><h3>2.1 Cadeias de caracteres</h3></a>
      <a class="anchor-link" href="#2.2-N%C3%BAmeros"><h3>2.2 N√∫meros</h3></a>
      <a class="anchor-link" href="#2.2.1.-inteiros"><h4>2.2.1. inteiros</h4></a>
      <a class="anchor-link" href="#2.2.2.-flutuante"><h4>2.2.2. flutuante</h4></a>
      <a class="anchor-link" href="#2.2.3-Complexos"><h4>2.2.3 Complexos</h4></a>
      <a class="anchor-link" href="#2.2.4.-Convers%C3%A3o"><h4>2.2.4. Convers√£o</h4></a>
      <a class="anchor-link" href="#2.3-Sequ%C3%AAncias"><h3>2.3 Sequ√™ncias</h3></a>
      <a class="anchor-link" href="#2.3.1.-Listas"><h4>2.3.1. Listas</h4></a>
      <a class="anchor-link" href="#2.3.1.1-Edi%C3%A7%C3%A3o-de-listas"><h5>2.3.1.1 Edi√ß√£o de listas</h5></a>
      <a class="anchor-link" href="#2.3.1.2.-compreens%C3%A3o-de-lista"><h5>2.3.1.2. compreens√£o de lista</h5></a>
      <a class="anchor-link" href="#2.3.1.3.-Classificando-listas"><h5>2.3.1.3. Classificando listas</h5></a>
      <a class="anchor-link" href="#2.3.1.4.-Copiando-listas"><h5>2.3.1.4. Copiando listas</h5></a>
      <a class="anchor-link" href="#2.3.1.5.-Concatenar-listas"><h5>2.3.1.5. Concatenar listas</h5></a>
      <a class="anchor-link" href="#2.3.2.-tuplas"><h4>2.3.2. tuplas</h4></a>
      <a class="anchor-link" href="#2.3.2.1.-Modificando-tuplas"><h5>2.3.2.1. Modificando tuplas</h5></a>
      <a class="anchor-link" href="#2.3.2.2.2.-Desempacotando-tuplas"><h5>2.3.2.2.2. Desempacotando tuplas</h5></a>
      <a class="anchor-link" href="#2.3.2.2.3.-Concatenar-tuplas"><h5>2.3.2.2.3. Concatenar tuplas</h5></a>
      <a class="anchor-link" href="#2.3.2.2.4.-M%C3%A9todos-de-tuplas"><h5>2.3.2.2.4. M√©todos de tuplas</h5></a>
      <a class="anchor-link" href="#2.3.3.-Alcance"><h4>2.3.3. Alcance</h4></a>
      <a class="anchor-link" href="#2.4.-Dicion%C3%A1rios"><h3>2.4. Dicion√°rios</h3></a>
      <a class="anchor-link" href="#2.4.1.-Acessando-os-itens"><h4>2.4.1. Acessando os itens</h4></a>
      <a class="anchor-link" href="#2.4.2.-Modificar-itens"><h4>2.4.2. Modificar itens</h4></a>
      <a class="anchor-link" href="#2.4.3.-Adicionando-itens"><h4>2.4.3. Adicionando itens</h4></a>
      <a class="anchor-link" href="#2.4.4.-Excluir-itens"><h4>2.4.4. Excluir itens</h4></a>
      <a class="anchor-link" href="#2.4.5.-Copiar-dicion%C3%A1rios"><h4>2.4.5. Copiar dicion√°rios</h4></a>
      <a class="anchor-link" href="#2.4.6.-Dicion%C3%A1rios-aninhados"><h4>2.4.6. Dicion√°rios aninhados</h4></a>
      <a class="anchor-link" href="#2.4.7.-M%C3%A9todos-de-dicion%C3%A1rio"><h4>2.4.7. M√©todos de dicion√°rio</h4></a>
      <a class="anchor-link" href="#2.4.8.-Compreens%C3%A3o-de-dicion%C3%A1rio"><h4>2.4.8. Compreens√£o de dicion√°rio</h4></a>
      <a class="anchor-link" href="#2.5.-Conjuntos"><h3>2.5. Conjuntos</h3></a>
      <a class="anchor-link" href="#2.5.1.-definir"><h4>2.5.1. definir</h4></a>
      <a class="anchor-link" href="#2.5.1.1.-Adicionando-itens"><h5>2.5.1.1. Adicionando itens</h5></a>
      <a class="anchor-link" href="#2.5.1.2.-Excluindo-itens"><h5>2.5.1.2. Excluindo itens</h5></a>
      <a class="anchor-link" href="#2.5.1.3.-vincula%C3%A7%C3%A3o-de-itens"><h5>2.5.1.3. vincula√ß√£o de itens</h5></a>
      <a class="anchor-link" href="#2.5.1.4.-definir-m%C3%A9todos"><h5>2.5.1.4. definir m√©todos</h5></a>
      <a class="anchor-link" href="#2.5.2.-Frozenset"><h4>2.5.2. Frozenset</h4></a>
      <a class="anchor-link" href="#2.6.-Booleanos"><h3>2.6. Booleanos</h3></a>
      <a class="anchor-link" href="#2.6.1.-Outros-tipos-de-dados-Verdadeiro-ou-Falso"><h4>2.6.1. Outros tipos de dados Verdadeiro ou Falso</h4></a>
      <a class="anchor-link" href="#2.7.-Bin%C3%A1rios"><h3>2.7. Bin√°rios</h3></a>
      <a class="anchor-link" href="#2.7.1.-Bytes"><h4>2.7.1. Bytes</h4></a>
      <a class="anchor-link" href="#2.7.2-Bytearray"><h4>2.7.2 Bytearray</h4></a>
      <a class="anchor-link" href="#2.7.3.-visualiza%C3%A7%C3%A3o-de-mem%C3%B3ria"><h4>2.7.3. visualiza√ß√£o de mem√≥ria<a </h4></a>
      <a class="anchor-link" href="#3.-Operadores"><h2>3. Operadores</h2></a>
      <a class="anchor-link" href="#3.1.-Operadores-aritm%C3%A9ticos"><h3>3.1. Operadores aritm√©ticos</h3></a>
      <a class="anchor-link" href="#3.2.-Operadores-de-compara%C3%A7%C3%A3o"><h3>3.2. Operadores de compara√ß√£o</h3></a>
      <a class="anchor-link" href="#Operadores-l%C3%B3gicos"><h3>Operadores l√≥gicos</h3></a>
      <a class="anchor-link" href="#3.4.-Operadores-de-identidade"><h3>3.4. Operadores de identidade</h3></a>
      <a class="anchor-link" href="#3.5.-Operadores-de-associa%C3%A7%C3%A3o"><h3>3.5. Operadores de associa√ß√£o</h3></a>
      <a class="anchor-link" href="#3.6.-Operadores-bit-a-bit"><h3>3.6. Operadores bit a bit</h3></a>
      <a class="anchor-link" href="#3.7.-Operadores-de-atribui%C3%A7%C3%A3o"><h3>3.7. Operadores de atribui√ß√£o</h3></a>
      <a class="anchor-link" href="#Controle-de-fluxo"><h2>Controle de fluxo</h2></a>
      <a class="anchor-link" href="#Se"><h3>Se</h3></a>
      <a class="anchor-link" href="#4.2.-enquanto"><h3>4.2. enquanto</h3></a>
      <a class="anchor-link" href="#4.3.-Para"><h3>4.3. Para</h3></a>
      <a class="anchor-link" href="#5.-fun%C3%A7%C3%B5es"><h2>5. fun√ß√µes</h2></a>
      <a class="anchor-link" href="#5.1.-Fun%C3%A7%C3%B5es-incorporadas"><h3>5.1. Fun√ß√µes incorporadas</h3></a>
      <a class="anchor-link" href="#5.2.-Documenta%C3%A7%C3%A3o-de-uma-fun%C3%A7%C3%A3o"><h3>5.2. Documenta√ß√£o de uma fun√ß√£o<a c</h3></a>
      <a class="anchor-link" href="#5.3.-Decoradores"><h3>5.3. Decoradores</h3></a>
      <a class="anchor-link" href="#5.4.-*args-e-**kwargs."><h3>5.4. <code>*args</code> e <code>**kwargs</code>.</h3></a>
      <a class="anchor-link" href="#5.4.1.-*args."><h4>5.4.1. <code>*args</code>.</h4></a>
      <a class="anchor-link" href="#5.4.2.-**kwargs."><h4>5.4.2. <code>**kwargs</code>.</h4></a>
      <a class="anchor-link" href="#6.-fun%C3%A7%C3%B5es-adicionais"><h2>6. fun√ß√µes adicionais</h2></a>
      <a class="anchor-link" href="#6.1.-Fun%C3%A7%C3%B5es-*lambda"><h3>6.1. Fun√ß√µes *lambda</h3></a>
      <a class="anchor-link" href="#6.2.-Fun%C3%A7%C3%A3o-de-mapa"><h3>6.2. Fun√ß√£o de mapa</h3></a>
      <a class="anchor-link" href="#6.3.-Fun%C3%A7%C3%A3o-de-filtro"><h3>6.3. Fun√ß√£o de filtro</h3></a>
      <a class="anchor-link" href="#6.4.-Fun%C3%A7%C3%A3o-reduce."><h3>6.4. Fun√ß√£o <code>reduce</code>.</h3></a>
      <a class="anchor-link" href="#6.5.-Fun%C3%A7%C3%A3o-Zip"><h3>6.5. Fun√ß√£o Zip</h3></a>
      <a class="anchor-link" href="#6.5.-Geradores"><h3>6.5. Geradores</h3></a>
      <a class="anchor-link" href="#6.6.-Fun%C3%A7%C3%B5es-de-alta-ordem"><h3>6.6. Fun√ß√µes de alta ordem</h3></a>
      <a class="anchor-link" href="#Classes-e-objetos"><h2>Classes e objetos</h2></a>
      <a class="anchor-link" href="#7.1.-Heran%C3%A7a"><h3>7.1. Heran√ßa</h3></a>
      <a class="anchor-link" href="#7.2.-Sobrecarga-do-operador"><h3>7.2. Sobrecarga do operador</h3></a>
      <a class="anchor-link" href="#7.3.-Iteradores-personalizados"><h3>7.3. Iteradores personalizados</h3></a>
      <a class="anchor-link" href="#7.4.-Chamada-de-objetos-como-fun%C3%A7%C3%B5es"><h3>7.4. Chamada de objetos como fun√ß√µes</h3></a>
      <a class="anchor-link" href="#7.5.-Atributos-e-fun%C3%A7%C3%B5es-privados"><h3>7.5. Atributos e fun√ß√µes privados</h3></a>
      <a class="anchor-link" href="#Iteradores"><h2>Iteradores</h2></a>
      <a class="anchor-link" href="#8.1.-Criar-um-objeto-iterador"><h3>8.1. Criar um objeto iterador</h3></a>
      <a class="anchor-link" href="#8.2.-Iterar-obtendo-o-%C3%ADndice-e-o-valor"><h3>8.2. Iterar obtendo o √≠ndice e o valor</h3></a>
      <a class="anchor-link" href="#8.3.-Iterar-por-dois-objetos-iter%C3%A1veis-ao-mesmo-tempo."><h3>8.3. Iterar por dois objetos iter√°veis ao mesmo tempo.</h3></a>
      <a class="anchor-link" href="#Escopo-das-vari%C3%A1veis"><h2>Escopo das vari√°veis</h2></a>
      <a class="anchor-link" href="#9.1.-Escopo-local"><h3>9.1. Escopo local</h3></a>
      <a class="anchor-link" href="#9.2.-Escopo-global"><h3>9.2. Escopo global</h3></a>
      <a class="anchor-link" href="#M%C3%B3dulos"><h2>M√≥dulos</h2></a>
      <a class="anchor-link" href="#Pontos-de-entrada:-arquivos-como-m%C3%B3dulos-e-n%C3%A3o-como-scripts"><h3>Pontos de entrada: arquivos como m√≥dulos e n√£o como scripts</h3></a>
      <a class="anchor-link" href="#Pacotes"><h2>Pacotes</h2></a>
      <a class="anchor-link" href="#12.-Tente...-Exceto"><h2>12. Tente... Exceto</h2></a>
      <a class="anchor-link" href="#Criando-uma-exce%C3%A7%C3%A3o"><h3>Criando uma exce√ß√£o</h3></a>
      <a class="anchor-link" href="#Palavras-chave-ou-palavras-reservadas"><h2>Palavras-chave ou palavras reservadas</h2></a>
      <a class="anchor-link" href="#O-Zen-do-Python"><h2>O Zen do Python</h2></a>
    </div>


    <div class="post-content">

<section class="section-block-markdown-cell">
<h1 id="Introdu%C3%A7%C3%A3o-ao-Python">Introdu√ß√£o ao Python<a class="anchor-link" href="#Introdu%C3%A7%C3%A3o-ao-Python"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h1>
</section>

<section class="section-block-markdown-cell">
<p>Este caderno foi traduzido automaticamente para torn√°-lo acess√≠vel a mais pessoas, por favor me avise se voc√™ vir algum erro de digita√ß√£o..</p>
</section>

<section class="section-block-markdown-cell">
<h2 id="1.-Resumo">1. Resumo<a class="anchor-link" href="#1.-Resumo"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h2>
</section>

<section class="section-block-markdown-cell">
<p>Vamos fazer uma breve introdu√ß√£o ao Python, explicando os tipos de dados que temos, os operadores, o uso de fun√ß√µes e classes. Tamb√©m veremos como usar objetos iter√°veis, como usar m√≥dulos, etc.</p>
<p><img alt="python" src="https://raw.githubusercontent.com/maximofn/portafolio/main/portfolio/public/images/icon-python.webp"/></p>
</section>

<section class="section-block-markdown-cell">
<h2 id="2.-Tipos-de-dados-Python">2. Tipos de dados Python<a class="anchor-link" href="#2.-Tipos-de-dados-Python"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h2>
</section>

<section class="section-block-markdown-cell">
<p>Existem 7 tipos de dados em Python</p>
<ol>
<li>do tipo text:<code>str</code></li>
</ol>
<ol start="2">
<li>Num√©rico: <code>int</code>, <code>float</code>, <code>complex</code>.</li>
</ol>
<ol start="3">
<li>sequ√™ncias: <code>list</code>, <code>tuple</code>, <code>range</code>; 4.</li>
<li>Mapeamento: <code>dict</code>.</li>
<li>Conjuntos: <code>set</code>, <code>frozenset</code>.</li>
<li>Booleanos: <code>bool</code>.</li>
<li>Bin√°rios: <code>bytes</code>, <code>bytearray</code>, <code>memoryview</code>.</li>
</ol>
</section>

<section class="section-block-markdown-cell">
<p>Podemos obter o tipo de dados usando a fun√ß√£o <code>type()</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="nb">type</span><span class="p">(</span><span class="mf">5.</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[1]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>float</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Python √© uma linguagem tipada dinamicamente, ou seja, voc√™ pode ter uma vari√°vel de um tipo e depois atribuir outro tipo a ela.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">a</span> <span class="o">=</span> <span class="mi">5</span>
<span class="nb">type</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[2]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>int</pre>
</div>
</div>
</div>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">a</span> <span class="o">=</span> <span class="s1">'MaximoFN'</span>
<span class="nb">type</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[3]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>str</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>O Python digita as vari√°veis para voc√™, mas se voc√™ quiser digit√°-las voc√™ mesmo, isso pode ser feito</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">b</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="mf">5.1</span><span class="p">)</span>
<span class="nb">type</span><span class="p">(</span><span class="n">b</span><span class="p">),</span> <span class="n">b</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[4]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>(int, 5)</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Embora <code>b</code> tenha sido inicializado como <code>5.1</code>, ou seja, deveria ser do tipo <code>float</code>, quando o digitamos para o tipo <code>int</code>, vemos que ele √© do tipo <code>int</code> e seu valor tamb√©m √© <code>5</code>.</p>
</section>

<section class="section-block-markdown-cell">
<h3 id="2.1-Cadeias-de-caracteres">2.1 Cadeias de caracteres<a class="anchor-link" href="#2.1-Cadeias-de-caracteres"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h3>
</section>

<section class="section-block-markdown-cell">
<p>Strings s√£o cadeias de caracteres, que podem ser definidas com aspas duplas <code>"</code> ou aspas simples <code>'</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">string</span> <span class="o">=</span> <span class="s2">"MaximoFN"</span>
<span class="n">string</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[5]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>'MaximoFN'</pre>
</div>
</div>
</div>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">string</span> <span class="o">=</span> <span class="s1">'MaximoFN'</span>
<span class="n">string</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[6]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>'MaximoFN'</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Para escrever uma <code>string</code> muito longa e n√£o ter uma linha que ocupe muito espa√ßo, ela pode ser inserida em v√°rias linhas.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">string</span> <span class="o">=</span> <span class="s2">"""Este es un ejemplo de</span>
<span class="s2">como estoy introduciendo un string</span>
<span class="s2">en varias lineas"""</span>
<span class="n">string</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[7]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>'Este es un ejemplo de\ncomo estoy introduciendo un string\nen varias lineas'</pre>
</div>
</div>
</div>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">string</span> <span class="o">=</span> <span class="s1">'''Este es un ejemplo de</span>
<span class="s1">como estoy introduciendo un string</span>
<span class="s1">en varias lineas'''</span>
<span class="n">string</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[8]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>'Este es un ejemplo de\ncomo estoy introduciendo un string\nen varias lineas'</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>No entanto, podemos ver que o caractere <code>n</code> foi inserido no meio; esse caractere indica a quebra de linha. Se usarmos a fun√ß√£o <code>print()</code>, veremos que ele n√£o aparece mais.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="nb">print</span><span class="p">(</span><span class="n">string</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>Este es un ejemplo de
como estoy introduciendo un string
en varias lineas
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Como j√° dissemos, as cadeias de caracteres s√£o cadeias de caracteres, portanto, podemos navegar e iterar por elas.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">10</span><span class="p">):</span>
  <span class="c1"># Se indica a la funci√≥n print que cuando imprima no termine con un salto de </span>
  <span class="c1"># linea para escribir todo en la misma linea</span>
  <span class="nb">print</span><span class="p">(</span><span class="n">string</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">end</span><span class="o">=</span><span class="s1">''</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>Este es un</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Podemos obter o comprimento de nossa string usando a fun√ß√£o <code>len()</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="nb">len</span><span class="p">(</span><span class="n">string</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[11]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>73</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Verificar se h√° uma determinada cadeia de caracteres em nossa cadeia de caracteres</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="s1">'ejemplo'</span> <span class="ow">in</span> <span class="n">string</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[12]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>True</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>As cadeias de caracteres t√™m certos atributos √∫teis, como a capitaliza√ß√£o de tudo.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="nb">print</span><span class="p">(</span><span class="n">string</span><span class="o">.</span><span class="n">upper</span><span class="p">())</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>ESTE ES UN EJEMPLO DE
COMO ESTOY INTRODUCIENDO UN STRING
EN VARIAS LINEAS
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Tudo em letras min√∫sculas</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="nb">print</span><span class="p">(</span><span class="n">string</span><span class="o">.</span><span class="n">lower</span><span class="p">())</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>este es un ejemplo de
como estoy introduciendo un string
en varias lineas
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Substituir caracteres</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="nb">print</span><span class="p">(</span><span class="n">string</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s1">'o'</span><span class="p">,</span> <span class="s1">'@'</span><span class="p">))</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>Este es un ejempl@ de
c@m@ est@y intr@duciend@ un string
en varias lineas
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Obter todas as palavras</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="nb">print</span><span class="p">(</span><span class="n">string</span><span class="o">.</span><span class="n">split</span><span class="p">())</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>['Este', 'es', 'un', 'ejemplo', 'de', 'como', 'estoy', 'introduciendo', 'un', 'string', 'en', 'varias', 'lineas']
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Voc√™ pode ver todos os m√©todos das cadeias de caracteres neste [link] (<a href="https://docs.python.org/3.9/library/stdtypes.html#string-methods">https://docs.python.org/3.9/library/stdtypes.html#string-methods</a>)</p>
</section>

<section class="section-block-markdown-cell">
<p>Outra coisa √∫til a ser feita com cadeias de caracteres √© concaten√°-las.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">string1</span> <span class="o">=</span> <span class="s1">'Maximo'</span>
<span class="n">string2</span> <span class="o">=</span> <span class="s1">'FN'</span>
<span class="n">string1</span> <span class="o">+</span> <span class="n">string2</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[17]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>'MaximoFN'</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Anteriormente, explicamos que o caractere <code>n</code> correspondia a uma quebra de linha; esse caractere especial corresponde a uma s√©rie de caracteres especiais chamados <code>Escape Characters</code>. Vamos dar uma olhada em outros</p>
</section>

<section class="section-block-markdown-cell">
<p>Se declararmos uma string com aspas duplas e quisermos adicionar uma aspa dupla dentro da string, usaremos o caractere de escape <code>"</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="nb">print</span><span class="p">(</span><span class="s2">"Este es el blog de </span><span class="se">\"</span><span class="s2">MaximoFN</span><span class="se">\"</span><span class="s2">"</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>Este es el blog de "MaximoFN"
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>O mesmo acontece com as aspas simples, adicionamos `'.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="nb">print</span><span class="p">(</span><span class="s1">'Este es el blog de </span><span class="se">\'</span><span class="s1">MaximoFN</span><span class="se">\'</span><span class="s1">'</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>Este es el blog de 'MaximoFN'
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Agora temos o problema de adicionar ou n√£o o <code>caractere de escape</code>, pois, como vimos, ele √© um <code>caractere de escape</code>, ent√£o resolvemos isso colocando uma barra invertida dupla <code>barreira</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="nb">print</span><span class="p">(</span><span class="s1">'Este es el blog de </span><span class="se">\\</span><span class="s1">MaximoFN</span><span class="se">\\</span><span class="s1">'</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>Este es el blog de \MaximoFN\
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>J√° vimos anteriormente o <code>escape character</code> da nova linha <code>n</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="nb">print</span><span class="p">(</span><span class="s1">'Este es el blog de </span><span class="se">\n</span><span class="s1">MaximoFN'</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>Este es el blog de 
MaximoFN
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Se quisermos escrever a partir do in√≠cio da linha, adicionaremos <code>r</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="nb">print</span><span class="p">(</span><span class="s1">'Esto no se imprimir√° </span><span class="se">\r</span><span class="s1">Este es el blog de MaximoFN'</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>Este es el blog de MaximoFN
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Se quisermos adicionar um espa√ßo grande (recuo), usaremos ``t`.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="nb">print</span><span class="p">(</span><span class="s1">'Este es el blog de </span><span class="se">\t</span><span class="s1">MaximoFN'</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>Este es el blog de 	MaximoFN
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Podemos excluir um caractere com <code>b</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="nb">print</span><span class="p">(</span><span class="s1">'Este es el blog de </span><span class="se">\b</span><span class="s1">MaximoFN'</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>Este es el blog deMaximoFN
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Podemos adicionar o c√≥digo <a href="http://www.asciitable.com/">ASCII</a> em octal usando <code>ooo</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="nb">print</span><span class="p">(</span><span class="s1">'</span><span class="se">\115\141\170\151\155\157\106\116</span><span class="s1">'</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>MaximoFN
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Ou adicione o c√≥digo <a href="http://www.asciitable.com/">ASCII</a> em hexadecimal usando <code>xhh</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="nb">print</span><span class="p">(</span><span class="s1">'</span><span class="se">\x4d\x61\x78\x69\x6d\x6f\x46\x4e</span><span class="s1">'</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>MaximoFN
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Por fim, podemos converter outro tipo de dados em uma string</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">n</span> <span class="o">=</span> <span class="mi">5</span>
<span class="nb">print</span><span class="p">(</span><span class="nb">type</span> <span class="p">(</span><span class="n">n</span><span class="p">))</span>
<span class="n">string</span> <span class="o">=</span> <span class="nb">str</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="nb">type</span><span class="p">(</span><span class="n">string</span><span class="p">))</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>&lt;class 'int'&gt;
&lt;class 'str'&gt;
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h3 id="2.2-N%C3%BAmeros">2.2 N√∫meros<a class="anchor-link" href="#2.2-N%C3%BAmeros"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h3>
</section>

<section class="section-block-markdown-cell">
<h4 id="2.2.1.-inteiros">2.2.1. inteiros<a class="anchor-link" href="#2.2.1.-inteiros"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h4>
</section>

<section class="section-block-markdown-cell">
<p>N√∫meros do tipo inteiro</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">n</span> <span class="o">=</span> <span class="mi">5</span>
<span class="n">n</span><span class="p">,</span> <span class="nb">type</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[29]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>(5, int)</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h4 id="2.2.2.-flutuante">2.2.2. flutuante<a class="anchor-link" href="#2.2.2.-flutuante"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h4>
</section>

<section class="section-block-markdown-cell">
<p>N√∫meros do tipo ponto flutuante</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">n</span> <span class="o">=</span> <span class="mf">5.1</span>
<span class="n">n</span><span class="p">,</span> <span class="nb">type</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[30]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>(5.1, float)</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h4 id="2.2.3-Complexos">2.2.3 Complexos<a class="anchor-link" href="#2.2.3-Complexos"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h4>
</section>

<section class="section-block-markdown-cell">
<p>N√∫meros complexos</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">n</span> <span class="o">=</span> <span class="mi">3</span> <span class="o">+</span> <span class="mi">5</span><span class="n">j</span>
<span class="n">n</span><span class="p">,</span> <span class="nb">type</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[31]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>((3+5j), complex)</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h4 id="2.2.4.-Convers%C3%A3o">2.2.4. Convers√£o<a class="anchor-link" href="#2.2.4.-Convers%C3%A3o"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h4>
</section>

<section class="section-block-markdown-cell">
<p>Voc√™ pode converter entre tipos de n√∫meros</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">n</span> <span class="o">=</span> <span class="mi">5</span>
<span class="n">n</span> <span class="o">=</span> <span class="nb">float</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>
<span class="n">n</span><span class="p">,</span> <span class="nb">type</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[32]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>(5.0, float)</pre>
</div>
</div>
</div>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">n</span> <span class="o">=</span> <span class="mf">5.1</span>
<span class="n">n</span> <span class="o">=</span> <span class="nb">complex</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>
<span class="n">n</span><span class="p">,</span> <span class="nb">type</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[33]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>((5.1+0j), complex)</pre>
</div>
</div>
</div>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">n</span> <span class="o">=</span> <span class="mf">5.1</span>
<span class="n">n</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>
<span class="n">n</span><span class="p">,</span> <span class="nb">type</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[34]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>(5, int)</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>N√£o √© poss√≠vel converter um n√∫mero <code>complex</code> para o tipo <code>int</code> ou <code>float</code>.</p>
</section>

<section class="section-block-markdown-cell">
<h3 id="2.3-Sequ%C3%AAncias">2.3 Sequ√™ncias<a class="anchor-link" href="#2.3-Sequ%C3%AAncias"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h3>
</section>

<section class="section-block-markdown-cell">
<h4 id="2.3.1.-Listas">2.3.1. Listas<a class="anchor-link" href="#2.3.1.-Listas"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h4>
</section>

<section class="section-block-markdown-cell">
<p>As listas armazenam v√°rios itens em uma vari√°vel. Elas s√£o declaradas usando os s√≠mbolos <code>[]</code>, com os itens separados por v√≠rgulas.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">lista</span> <span class="o">=</span> <span class="p">[</span><span class="s1">'item0'</span><span class="p">,</span> <span class="s1">'item1'</span><span class="p">,</span> <span class="s1">'item2'</span><span class="p">,</span> <span class="s1">'item3'</span><span class="p">,</span> <span class="s1">'item4'</span><span class="p">,</span> <span class="s1">'item5'</span><span class="p">]</span>
<span class="n">lista</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[35]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>['item0', 'item1', 'item2', 'item3', 'item4', 'item5']</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Podemos obter o comprimento de uma lista usando a fun√ß√£o <code>len()</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="nb">len</span><span class="p">(</span><span class="n">lista</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[36]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>6</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>As listas podem ter itens de diferentes tipos</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">lista</span> <span class="o">=</span> <span class="p">[</span><span class="s1">'item0'</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="kc">True</span><span class="p">,</span> <span class="mf">5.3</span><span class="p">,</span> <span class="s2">"item4"</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mf">6.6</span><span class="p">]</span>
<span class="n">lista</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[37]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>['item0', 1, True, 5.3, 'item4', 5, 6.6]</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Em Python, come√ßamos a contar a partir da posi√ß√£o 0, ou seja, se quisermos obter a primeira posi√ß√£o na lista</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">lista</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[38]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>'item0'</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Mas uma das coisas poderosas do Python √© que, se quisermos acessar a √∫ltima posi√ß√£o, podemos usar √≠ndices negativos.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">lista</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[39]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>6.6</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Se, em vez da √∫ltima posi√ß√£o na lista, quisermos a pen√∫ltima</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">lista</span><span class="p">[</span><span class="o">-</span><span class="mi">2</span><span class="p">]</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[40]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>5</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Se quisermos apenas um intervalo de valores, por exemplo, do segundo ao quinto item, usaremos <code>[2:5]</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">lista</span><span class="p">[</span><span class="mi">2</span><span class="p">:</span><span class="mi">5</span><span class="p">]</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[41]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>[True, 5.3, 'item4']</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Se o primeiro n√∫mero do intervalo for omitido, isso significa que queremos ir do primeiro item da lista at√© o item indicado, ou seja, se quisermos ir do primeiro ao quinto item, usaremos <code>[:5]</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">lista</span><span class="p">[:</span><span class="mi">5</span><span class="p">]</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[42]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>['item0', 1, True, 5.3, 'item4']</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Se o √∫ltimo n√∫mero do intervalo for omitido, significa que queremos ir do item indicado at√© o √∫ltimo, ou seja, se quisermos ir do terceiro item at√© o √∫ltimo, usaremos <code>[3:]</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">lista</span><span class="p">[</span><span class="mi">3</span><span class="p">:]</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[43]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>[5.3, 'item4', 5, 6.6]</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Voc√™ pode escolher o intervalo de itens tamb√©m com n√∫meros negativos, ou seja, se quiser do antepen√∫ltimo ao pen√∫ltimo, use <code>[-3:-1]</code>. Isso √© √∫til quando voc√™ tem listas cujo comprimento n√£o conhece, mas sabe que deseja um intervalo de valores a partir do final, porque, por exemplo, a lista foi criada com medi√ß√µes que voc√™ est√° fazendo e voc√™ deseja saber as √∫ltimas m√©dias.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">lista</span><span class="p">[</span><span class="o">-</span><span class="mi">3</span><span class="p">:</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[44]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>['item4', 5]</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Voc√™ pode verificar se um item est√° na lista</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="s1">'item4'</span> <span class="ow">in</span> <span class="n">lista</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[45]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>True</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h5 id="2.3.1.1-Edi%C3%A7%C3%A3o-de-listas">2.3.1.1 Edi√ß√£o de listas<a class="anchor-link" href="#2.3.1.1-Edi%C3%A7%C3%A3o-de-listas"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h5>
</section>

<section class="section-block-markdown-cell">
<p>As listas em Python s√£o din√¢micas, ou seja, podem ser modificadas. Por exemplo, voc√™ pode modificar o terceiro item</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">lista</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="o">=</span> <span class="kc">False</span>
<span class="n">lista</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[46]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>['item0', 1, False, 5.3, 'item4', 5, 6.6]</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Um intervalo de valores tamb√©m pode ser modificado</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">lista</span><span class="p">[</span><span class="mi">1</span><span class="p">:</span><span class="mi">4</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="mf">1.1</span><span class="p">,</span> <span class="kc">True</span><span class="p">,</span> <span class="mi">3</span><span class="p">]</span>
<span class="n">lista</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[47]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>['item0', 1.1, True, 3, 'item4', 5, 6.6]</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Os valores podem ser adicionados ao final da lista usando o m√©todo <code>append()</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">lista</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s1">'item7'</span><span class="p">)</span>
<span class="n">lista</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[48]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>['item0', 1.1, True, 3, 'item4', 5, 6.6, 'item7']</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Ou podemos inserir um valor em uma determinada posi√ß√£o usando o m√©todo <code>insert()</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">lista</span><span class="o">.</span><span class="n">insert</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="s1">'insert'</span><span class="p">)</span>
<span class="n">lista</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[49]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>['item0', 1.1, 'insert', True, 3, 'item4', 5, 6.6, 'item7']</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>As listas podem ser unidas usando o m√©todo <code>extend()</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">lista2</span> <span class="o">=</span> <span class="p">[</span><span class="s1">'item8'</span><span class="p">,</span> <span class="s1">'item9'</span><span class="p">]</span>
<span class="n">lista</span><span class="o">.</span><span class="n">extend</span><span class="p">(</span><span class="n">lista2</span><span class="p">)</span>
<span class="n">lista</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[50]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>['item0', 1.1, 'insert', True, 3, 'item4', 5, 6.6, 'item7', 'item8', 'item9']</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>N√£o √© necess√°rio estender a lista por outra lista, isso pode ser feito por outro tipo de dados Python iter√°vel (<code>tuplas</code>, <code>conjuntos</code>, <code>dicion√°rios</code> etc.).</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">tupla</span> <span class="o">=</span> <span class="p">(</span><span class="s1">'item10'</span><span class="p">,</span> <span class="s1">'item11'</span><span class="p">)</span>
<span class="n">lista</span><span class="o">.</span><span class="n">extend</span><span class="p">(</span><span class="n">tupla</span><span class="p">)</span>
<span class="n">lista</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[51]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>['item0',
 1.1,
 'insert',
 True,
 3,
 'item4',
 5,
 6.6,
 'item7',
 'item8',
 'item9',
 'item10',
 'item11']</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Podemos remover uma determinada posi√ß√£o usando o m√©todo <code>pop()</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">lista</span><span class="o">.</span><span class="n">pop</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
<span class="n">lista</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[52]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>['item0',
 1.1,
 True,
 3,
 'item4',
 5,
 6.6,
 'item7',
 'item8',
 'item9',
 'item10',
 'item11']</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Se o √≠ndice n√£o for especificado, o √∫ltimo item ser√° exclu√≠do.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">lista</span><span class="o">.</span><span class="n">pop</span><span class="p">()</span>
<span class="n">lista</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[53]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>['item0', 1.1, True, 3, 'item4', 5, 6.6, 'item7', 'item8', 'item9', 'item10']</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Ou voc√™ pode remover um item conhecendo seu valor usando o m√©todo <code>remove()</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">lista</span><span class="o">.</span><span class="n">remove</span><span class="p">(</span><span class="s1">'item7'</span><span class="p">)</span>
<span class="n">lista</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[54]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>['item0', 1.1, True, 3, 'item4', 5, 6.6, 'item8', 'item9', 'item10']</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Com a fun√ß√£o <code>del()</code>, um item tamb√©m pode ser removido da posi√ß√£o especificada.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="k">del</span> <span class="n">lista</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span>
<span class="n">lista</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[55]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>['item0', 1.1, True, 'item4', 5, 6.6, 'item8', 'item9', 'item10']</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Se o √≠ndice n√£o for fornecido, a lista inteira ser√° exclu√≠da.</p>
</section>

<section class="section-block-markdown-cell">
<p>Com o m√©todo <code>clear()</code>, ele deixa a lista vazia.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">lista</span><span class="o">.</span><span class="n">clear</span><span class="p">()</span>
<span class="n">lista</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[56]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>[]</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>O n√∫mero de itens com um determinado valor pode ser obtido com o m√©todo <code>count()</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">lista</span> <span class="o">=</span> <span class="p">[</span><span class="mi">5</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">5</span><span class="p">]</span>
<span class="n">lista</span><span class="o">.</span><span class="n">count</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[57]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>4</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Voc√™ tamb√©m pode obter o primeiro √≠ndice de um item com um determinado valor usando o m√©todo <code>index()</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">lista</span> <span class="o">=</span> <span class="p">[</span><span class="mi">5</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">5</span><span class="p">]</span>
<span class="n">lista</span><span class="o">.</span><span class="n">index</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[58]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>0</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h5 id="2.3.1.2.-compreens%C3%A3o-de-lista">2.3.1.2. compreens√£o de lista<a class="anchor-link" href="#2.3.1.2.-compreens%C3%A3o-de-lista"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h5>
</section>

<section class="section-block-markdown-cell">
<p>Podemos operar por meio da lista</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">fruits</span> <span class="o">=</span> <span class="p">[</span><span class="s2">"apple"</span><span class="p">,</span> <span class="s2">"banana"</span><span class="p">,</span> <span class="s2">"cherry"</span><span class="p">,</span> <span class="s2">"kiwi"</span><span class="p">,</span> <span class="s2">"mango"</span><span class="p">]</span>
<span class="n">newlist</span> <span class="o">=</span> <span class="p">[]</span>

<span class="c1"># Iteramos por todos los items de la lista</span>
<span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">fruits</span><span class="p">:</span>
  <span class="c1"># Si el item contiene el caracter "a" lo a√±adimos a newlist</span>
  <span class="k">if</span> <span class="s2">"a"</span> <span class="ow">in</span> <span class="n">x</span><span class="p">:</span>
    <span class="n">newlist</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>

<span class="n">newlist</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[59]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>['apple', 'banana', 'mango']</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Outro recurso poderoso do Python √© a <code>compreens√£o de lista</code>, que permite fazer tudo em uma √∫nica linha e tornar o c√≥digo mais compacto.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">fruits</span> <span class="o">=</span> <span class="p">[</span><span class="s2">"apple"</span><span class="p">,</span> <span class="s2">"banana"</span><span class="p">,</span> <span class="s2">"cherry"</span><span class="p">,</span> <span class="s2">"kiwi"</span><span class="p">,</span> <span class="s2">"mango"</span><span class="p">]</span>

<span class="n">newlist</span> <span class="o">=</span> <span class="p">[</span><span class="n">x</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">fruits</span> <span class="k">if</span> <span class="s2">"a"</span> <span class="ow">in</span> <span class="n">x</span><span class="p">]</span>

<span class="n">newlist</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[60]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>['apple', 'banana', 'mango']</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>A sintaxe √© a seguinte</p>
<pre><code>newlist = [expression for item in iterable if condition == True]]
</code></pre>
</section>

<section class="section-block-markdown-cell">
<p>Voc√™ pode tirar proveito disso para executar opera√ß√µes na lista original.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">newlist</span> <span class="o">=</span> <span class="p">[</span><span class="n">x</span><span class="o">.</span><span class="n">upper</span><span class="p">()</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">fruits</span> <span class="k">if</span> <span class="s2">"a"</span> <span class="ow">in</span> <span class="n">x</span><span class="p">]</span>
<span class="n">newlist</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[61]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>['APPLE', 'BANANA', 'MANGO']</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h5 id="2.3.1.3.-Classificando-listas">2.3.1.3. Classificando listas<a class="anchor-link" href="#2.3.1.3.-Classificando-listas"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h5>
</section>

<section class="section-block-markdown-cell">
<p>Para classificar listas, usamos o m√©todo <code>sort()</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">lista</span> <span class="o">=</span> <span class="p">[</span><span class="mi">5</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">]</span>
<span class="n">lista</span><span class="o">.</span><span class="n">sort</span><span class="p">()</span>
<span class="n">lista</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[62]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>[3, 4, 5, 5, 6, 8, 9]</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Ele tamb√©m os ordena em ordem alfab√©tica</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">lista</span> <span class="o">=</span> <span class="p">[</span><span class="s2">"orange"</span><span class="p">,</span> <span class="s2">"mango"</span><span class="p">,</span> <span class="s2">"kiwi"</span><span class="p">,</span> <span class="s2">"pineapple"</span><span class="p">,</span> <span class="s2">"banana"</span><span class="p">]</span>
<span class="n">lista</span><span class="o">.</span><span class="n">sort</span><span class="p">()</span>
<span class="n">lista</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[63]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>['banana', 'kiwi', 'mango', 'orange', 'pineapple']</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Ao classificar em ordem alfab√©tica, ele diferencia mai√∫sculas de min√∫sculas.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">lista</span> <span class="o">=</span> <span class="p">[</span><span class="s2">"orange"</span><span class="p">,</span> <span class="s2">"mango"</span><span class="p">,</span> <span class="s2">"kiwi"</span><span class="p">,</span> <span class="s2">"Pineapple"</span><span class="p">,</span> <span class="s2">"banana"</span><span class="p">]</span>
<span class="n">lista</span><span class="o">.</span><span class="n">sort</span><span class="p">()</span>
<span class="n">lista</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[64]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>['Pineapple', 'banana', 'kiwi', 'mango', 'orange']</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Eles podem ser classificados em ordem decrescente usando o atributo <code>reverse = True</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">lista</span> <span class="o">=</span> <span class="p">[</span><span class="mi">5</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">]</span>
<span class="n">lista</span><span class="o">.</span><span class="n">sort</span><span class="p">(</span><span class="n">reverse</span> <span class="o">=</span> <span class="kc">True</span><span class="p">)</span>
<span class="n">lista</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[65]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>[9, 8, 6, 5, 5, 4, 3]</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Elas podem ser classificadas em qualquer ordem que desejarmos usando o atributo <code>key</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="k">def</span> <span class="nf">myfunc</span><span class="p">(</span><span class="n">n</span><span class="p">):</span>
  <span class="c1"># devuelve el valor absoluto de n - 50</span>
  <span class="k">return</span> <span class="nb">abs</span><span class="p">(</span><span class="n">n</span> <span class="o">-</span> <span class="mi">50</span><span class="p">)</span>

<span class="n">lista</span> <span class="o">=</span> <span class="p">[</span><span class="mi">100</span><span class="p">,</span> <span class="mi">50</span><span class="p">,</span> <span class="mi">65</span><span class="p">,</span> <span class="mi">82</span><span class="p">,</span> <span class="mi">23</span><span class="p">]</span>
<span class="n">lista</span><span class="o">.</span><span class="n">sort</span><span class="p">(</span><span class="n">key</span> <span class="o">=</span> <span class="n">myfunc</span><span class="p">)</span>
<span class="n">lista</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[66]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>[50, 65, 23, 82, 100]</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Voc√™ pode tirar proveito disso para que, por exemplo, ao classificar, ele n√£o fa√ßa distin√ß√£o entre letras mai√∫sculas e min√∫sculas.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">lista</span> <span class="o">=</span> <span class="p">[</span><span class="s2">"orange"</span><span class="p">,</span> <span class="s2">"mango"</span><span class="p">,</span> <span class="s2">"kiwi"</span><span class="p">,</span> <span class="s2">"Pineapple"</span><span class="p">,</span> <span class="s2">"banana"</span><span class="p">]</span>
<span class="n">lista</span><span class="o">.</span><span class="n">sort</span><span class="p">(</span><span class="n">key</span> <span class="o">=</span> <span class="nb">str</span><span class="o">.</span><span class="n">lower</span><span class="p">)</span>
<span class="n">lista</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[67]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>['banana', 'kiwi', 'mango', 'orange', 'Pineapple']</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Voc√™ pode inverter a lista usando o m√©todo <code>reverse</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">lista</span> <span class="o">=</span> <span class="p">[</span><span class="mi">5</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">]</span>
<span class="n">lista</span><span class="o">.</span><span class="n">reverse</span><span class="p">()</span>
<span class="n">lista</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[68]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>[6, 5, 9, 4, 3, 8, 5]</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h5 id="2.3.1.4.-Copiando-listas">2.3.1.4. Copiando listas<a class="anchor-link" href="#2.3.1.4.-Copiando-listas"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h5>
</section>

<section class="section-block-markdown-cell">
<p>As listas n√£o podem ser copiadas usando <code>list1 = list2</code>, pois se <code>list1</code> for modificada, <code>list2</code> tamb√©m ser√° modificada.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">lista1</span> <span class="o">=</span> <span class="p">[</span><span class="mi">5</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">]</span>
<span class="n">lista2</span> <span class="o">=</span> <span class="n">lista1</span>
<span class="n">lista1</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="kc">True</span>
<span class="n">lista2</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[69]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>[True, 8, 3, 4, 9, 5, 6]</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Portanto, voc√™ deve usar o m√©todo <code>copy()</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">lista1</span> <span class="o">=</span> <span class="p">[</span><span class="mi">5</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">]</span>
<span class="n">lista2</span> <span class="o">=</span> <span class="n">lista1</span><span class="o">.</span><span class="n">copy</span><span class="p">()</span>
<span class="n">lista1</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="kc">True</span>
<span class="n">lista2</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[70]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>[5, 8, 3, 4, 9, 5, 6]</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Ou use o construtor de lista <code>list()</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">lista1</span> <span class="o">=</span> <span class="p">[</span><span class="mi">5</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">]</span>
<span class="n">lista2</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="n">lista1</span><span class="p">)</span>
<span class="n">lista1</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="kc">True</span>
<span class="n">lista2</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[71]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>[5, 8, 3, 4, 9, 5, 6]</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h5 id="2.3.1.5.-Concatenar-listas">2.3.1.5. Concatenar listas<a class="anchor-link" href="#2.3.1.5.-Concatenar-listas"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h5>
</section>

<section class="section-block-markdown-cell">
<p>As listas podem ser concatenadas usando o operador <code>+</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">lista1</span> <span class="o">=</span> <span class="p">[</span><span class="mi">5</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">]</span>
<span class="n">lista2</span> <span class="o">=</span> <span class="p">[</span><span class="s1">'a'</span><span class="p">,</span> <span class="s1">'b'</span><span class="p">,</span> <span class="s1">'c'</span><span class="p">]</span>
<span class="n">lista</span> <span class="o">=</span> <span class="n">lista1</span> <span class="o">+</span> <span class="n">lista2</span>
<span class="n">lista</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[72]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>[5, 8, 3, 4, 9, 5, 6, 'a', 'b', 'c']</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Ou usando o m√©todo extend</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">lista1</span> <span class="o">=</span> <span class="p">[</span><span class="mi">5</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">]</span>
<span class="n">lista2</span> <span class="o">=</span> <span class="p">[</span><span class="s1">'a'</span><span class="p">,</span> <span class="s1">'b'</span><span class="p">,</span> <span class="s1">'c'</span><span class="p">]</span>
<span class="n">lista1</span><span class="o">.</span><span class="n">extend</span><span class="p">(</span><span class="n">lista2</span><span class="p">)</span>
<span class="n">lista1</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[73]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>[5, 8, 3, 4, 9, 5, 6, 'a', 'b', 'c']</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Outra maneira de concatenar √© repetir a tupla X vezes usando o operador <code>*</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">lista1</span> <span class="o">=</span> <span class="p">[</span><span class="s1">'a'</span><span class="p">,</span> <span class="s1">'b'</span><span class="p">,</span> <span class="s1">'c'</span><span class="p">]</span>
<span class="n">lista2</span> <span class="o">=</span> <span class="n">lista1</span> <span class="o">*</span> <span class="mi">3</span>
<span class="n">lista2</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[74]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>['a', 'b', 'c', 'a', 'b', 'c', 'a', 'b', 'c']</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h4 id="2.3.2.-tuplas">2.3.2. tuplas<a class="anchor-link" href="#2.3.2.-tuplas"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h4>
</section>

<section class="section-block-markdown-cell">
<p>As tuplas s√£o semelhantes √†s listas, armazenam v√°rios itens em uma vari√°vel, podem conter itens de tipos diferentes, mas n√£o podem ser modificadas ou reordenadas. Elas s√£o definidas por <code>()</code>, com itens separados por v√≠rgulas.</p>
<p>O fato de n√£o poderem ser modificadas faz com que as tuplas sejam executadas um pouco mais rapidamente do que as listas, portanto, se voc√™ n√£o precisar modificar os dados, √© melhor usar tuplas em vez de listas.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">tupla</span> <span class="o">=</span> <span class="p">(</span><span class="s1">'item0'</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="kc">True</span><span class="p">,</span> <span class="mf">3.3</span><span class="p">,</span> <span class="s1">'item4'</span><span class="p">,</span> <span class="kc">True</span><span class="p">)</span>
<span class="n">tupla</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[75]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>('item0', 1, True, 3.3, 'item4', True)</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Seu comprimento pode ser obtido com a fun√ß√£o <code>len()</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="nb">len</span> <span class="p">(</span><span class="n">tupla</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[76]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>6</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Para criar tuplas com um √∫nico elemento, √© necess√°rio adicionar uma v√≠rgula</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">tupla</span> <span class="o">=</span> <span class="p">(</span><span class="s1">'item0'</span><span class="p">,)</span>
<span class="n">tupla</span><span class="p">,</span> <span class="nb">type</span><span class="p">(</span><span class="n">tupla</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[77]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>(('item0',), tuple)</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Para acessar um elemento de tupla, proceda da mesma forma que para as listas.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">tupla</span> <span class="o">=</span> <span class="p">(</span><span class="s1">'item0'</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="kc">True</span><span class="p">,</span> <span class="mf">3.3</span><span class="p">,</span> <span class="s1">'item4'</span><span class="p">,</span> <span class="kc">True</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="n">tupla</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
<span class="nb">print</span><span class="p">(</span><span class="n">tupla</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span>
<span class="nb">print</span><span class="p">(</span><span class="n">tupla</span><span class="p">[</span><span class="mi">2</span><span class="p">:</span><span class="mi">4</span><span class="p">])</span>
<span class="nb">print</span><span class="p">(</span><span class="n">tupla</span><span class="p">[</span><span class="o">-</span><span class="mi">4</span><span class="p">:</span><span class="o">-</span><span class="mi">2</span><span class="p">])</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>item0
True
(True, 3.3)
(True, 3.3)
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Podemos verificar se h√° um item na tupla</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="s1">'item4'</span> <span class="ow">in</span> <span class="n">tupla</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[79]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>True</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h5 id="2.3.2.1.-Modificando-tuplas">2.3.2.1. Modificando tuplas<a class="anchor-link" href="#2.3.2.1.-Modificando-tuplas"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h5>
</section>

<section class="section-block-markdown-cell">
<p>Embora as tuplas n√£o sejam modific√°veis, elas podem ser modificadas convertendo-as em listas, modificando a lista e, em seguida, convertendo-a novamente em uma tupla.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">lista</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="n">tupla</span><span class="p">)</span>
<span class="n">lista</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span> <span class="o">=</span> <span class="s1">'ITEM4'</span>
<span class="n">tupla</span> <span class="o">=</span> <span class="nb">tuple</span><span class="p">(</span><span class="n">lista</span><span class="p">)</span>
<span class="n">tupla</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[80]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>('item0', 1, True, 3.3, 'ITEM4', True)</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Ao convert√™-lo em uma lista, podemos fazer todas as modifica√ß√µes vistas em listas.</p>
</section>

<section class="section-block-markdown-cell">
<p>O que voc√™ pode fazer √© excluir a tupla inteira.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="k">del</span> <span class="n">tupla</span>

<span class="k">if</span> <span class="s1">'tupla'</span> <span class="ow">not</span> <span class="ow">in</span> <span class="nb">locals</span><span class="p">():</span>
  <span class="nb">print</span><span class="p">(</span><span class="s2">"tupla eliminada"</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>tupla eliminada
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h5 id="2.3.2.2.2.-Desempacotando-tuplas">2.3.2.2.2. Desempacotando tuplas<a class="anchor-link" href="#2.3.2.2.2.-Desempacotando-tuplas"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h5>
</section>

<section class="section-block-markdown-cell">
<p>Quando criamos tuplas, na verdade estamos empacotando dados</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">tupla</span> <span class="o">=</span> <span class="p">(</span><span class="s1">'item0'</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="kc">True</span><span class="p">,</span> <span class="mf">3.3</span><span class="p">,</span> <span class="s1">'item4'</span><span class="p">,</span> <span class="kc">True</span><span class="p">)</span>
<span class="n">tupla</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[82]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>('item0', 1, True, 3.3, 'item4', True)</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>mas podemos desempacot√°-los</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">item0</span><span class="p">,</span> <span class="n">item1</span><span class="p">,</span> <span class="n">item2</span><span class="p">,</span> <span class="n">item3</span><span class="p">,</span> <span class="n">item4</span><span class="p">,</span> <span class="n">item5</span> <span class="o">=</span> <span class="n">tupla</span>
<span class="n">item0</span><span class="p">,</span> <span class="n">item1</span><span class="p">,</span> <span class="n">item2</span><span class="p">,</span> <span class="n">item3</span><span class="p">,</span> <span class="n">item4</span><span class="p">,</span> <span class="n">item5</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[83]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>('item0', 1, True, 3.3, 'item4', True)</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Se quisermos obter menos dados do que o comprimento da tupla, adicionaremos um <code>*</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">item0</span><span class="p">,</span> <span class="n">item1</span><span class="p">,</span> <span class="n">item2</span><span class="p">,</span> <span class="o">*</span><span class="n">item3</span> <span class="o">=</span> <span class="n">tupla</span>
<span class="n">item0</span><span class="p">,</span> <span class="n">item1</span><span class="p">,</span> <span class="n">item2</span><span class="p">,</span> <span class="n">item3</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[84]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>('item0', 1, True, [3.3, 'item4', True])</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Voc√™ pode colocar o asterisco <code>*</code> em outro lugar se, por exemplo, quiser o √∫ltimo item.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">item0</span><span class="p">,</span> <span class="n">item1</span><span class="p">,</span> <span class="o">*</span><span class="n">item2</span><span class="p">,</span> <span class="n">item5</span> <span class="o">=</span> <span class="n">tupla</span>
<span class="n">item0</span><span class="p">,</span> <span class="n">item1</span><span class="p">,</span> <span class="n">item2</span><span class="p">,</span> <span class="n">item5</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[85]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>('item0', 1, [True, 3.3, 'item4'], True)</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h5 id="2.3.2.2.3.-Concatenar-tuplas">2.3.2.2.3. Concatenar tuplas<a class="anchor-link" href="#2.3.2.2.3.-Concatenar-tuplas"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h5>
</section>

<section class="section-block-markdown-cell">
<p>Voc√™ pode concatenar tuplas usando o operador <code>+</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">tupla1</span> <span class="o">=</span> <span class="p">(</span><span class="s2">"a"</span><span class="p">,</span> <span class="s2">"b"</span> <span class="p">,</span> <span class="s2">"c"</span><span class="p">)</span>
<span class="n">tupla2</span> <span class="o">=</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span>

<span class="n">tupla3</span> <span class="o">=</span> <span class="n">tupla1</span> <span class="o">+</span> <span class="n">tupla2</span>
<span class="n">tupla3</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[86]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>('a', 'b', 'c', 1, 2, 3)</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Outra maneira de concatenar √© repetir a tupla X vezes usando o operador <code>*</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">tupla1</span> <span class="o">=</span> <span class="p">(</span><span class="s2">"a"</span><span class="p">,</span> <span class="s2">"b"</span> <span class="p">,</span> <span class="s2">"c"</span><span class="p">)</span>

<span class="n">tupla2</span> <span class="o">=</span> <span class="n">tupla1</span> <span class="o">*</span> <span class="mi">3</span>
<span class="n">tupla2</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[87]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>('a', 'b', 'c', 'a', 'b', 'c', 'a', 'b', 'c')</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h5 id="2.3.2.2.4.-M%C3%A9todos-de-tuplas">2.3.2.2.4. M√©todos de tuplas<a class="anchor-link" href="#2.3.2.2.4.-M%C3%A9todos-de-tuplas"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h5>
</section>

<section class="section-block-markdown-cell">
<p>As tuplas t√™m dois m√©todos, o primeiro √© o m√©todo <code>count()</code> que retorna o n√∫mero de vezes que um item existe na tupla.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">tupla</span> <span class="o">=</span> <span class="p">(</span><span class="mi">5</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">5</span><span class="p">)</span>
<span class="n">tupla</span><span class="o">.</span><span class="n">count</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[88]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>4</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Outro m√©todo √© o <code>index()</code> que retorna a primeira posi√ß√£o de um item na tupla.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">tupla</span> <span class="o">=</span> <span class="p">(</span><span class="mi">5</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">5</span><span class="p">)</span>
<span class="n">tupla</span><span class="o">.</span><span class="n">index</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[89]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>0</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h4 id="2.3.3.-Alcance">2.3.3. Alcance<a class="anchor-link" href="#2.3.3.-Alcance"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h4>
</section>

<section class="section-block-markdown-cell">
<p>Com <code>range()</code>, podemos criar uma sequ√™ncia de n√∫meros, come√ßando em 0 (por padr√£o), aumentando em 1 (por padr√£o) e parando antes de um n√∫mero especificado.</p>
<pre><code>range(start, stop, step)
</code></pre>
</section>

<section class="section-block-markdown-cell">
<p>Por exemplo, se quisermos uma sequ√™ncia de 0 a 5 (sem incluir o 5)</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">5</span><span class="p">):</span>
  <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s1">'</span><span class="si">{opening_brace}</span><span class="n">i</span><span class="si">}</span><span class="s1"> '</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s1">''</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>0 1 2 3 4 </pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Se, por exemplo, n√£o quisermos que ele comece em 0</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">5</span><span class="p">):</span>
  <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s1">'</span><span class="si">{opening_brace}</span><span class="n">i</span><span class="si">}</span><span class="s1"> '</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s1">''</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>2 3 4 </pre>
</div>
</div>
</div>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="o">-</span><span class="mi">2</span><span class="p">,</span> <span class="mi">5</span><span class="p">):</span>
  <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s1">'</span><span class="si">{opening_brace}</span><span class="n">i</span><span class="si">}</span><span class="s1"> '</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s1">''</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>-2 -1 0 1 2 3 4 </pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Por fim, se n√£o quisermos que ela seja incrementada em 1. Se, por exemplo, quisermos uma sequ√™ncia de n√∫meros pares</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">2</span><span class="p">):</span>
  <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s1">'</span><span class="si">{opening_brace}</span><span class="n">i</span><span class="si">}</span><span class="s1"> '</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s1">''</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>0 2 4 6 8 </pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h3 id="2.4.-Dicion%C3%A1rios">2.4. Dicion√°rios<a class="anchor-link" href="#2.4.-Dicion%C3%A1rios"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h3>
</section>

<section class="section-block-markdown-cell">
<p>Os dicion√°rios s√£o usados para armazenar dados em pares <code>chave:dados</code>. Eles s√£o modific√°veis, n√£o ordenados e n√£o permitem duplica√ß√£o. S√£o definidos pelos s√≠mbolos <code>{opening_brace}}</code>. Eles suportam itens de diferentes tipos de dados</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">diccionario</span> <span class="o">=</span> <span class="p">{opening_brace}</span>
  <span class="s2">"brand"</span><span class="p">:</span> <span class="s2">"Ford"</span><span class="p">,</span>
  <span class="s2">"model"</span><span class="p">:</span> <span class="s2">"Mustang"</span><span class="p">,</span>
  <span class="s2">"year"</span><span class="p">:</span> <span class="mi">1964</span><span class="p">,</span>
  <span class="s2">"colors"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"red"</span><span class="p">,</span> <span class="s2">"white"</span><span class="p">,</span> <span class="s2">"blue"</span><span class="p">]</span>
<span class="p">}</span>
<span class="n">diccionario</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[94]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>{opening_brace}'brand': 'Ford',
 'model': 'Mustang',
 'year': 1964,
 'colors': ['red', 'white', 'blue']}</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Como mencionado acima, eles n√£o permitem a duplica√ß√£o.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">diccionario</span> <span class="o">=</span> <span class="p">{opening_brace}</span>
  <span class="s2">"brand"</span><span class="p">:</span> <span class="s2">"Ford"</span><span class="p">,</span>
  <span class="s2">"model"</span><span class="p">:</span> <span class="s2">"Mustang"</span><span class="p">,</span>
  <span class="s2">"year"</span><span class="p">:</span> <span class="mi">1964</span><span class="p">,</span>
  <span class="s2">"year"</span><span class="p">:</span> <span class="mi">2000</span><span class="p">,</span>
  <span class="s2">"colors"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"red"</span><span class="p">,</span> <span class="s2">"white"</span><span class="p">,</span> <span class="s2">"blue"</span><span class="p">]</span>
<span class="p">}</span>
<span class="n">diccionario</span><span class="p">[</span><span class="s2">"year"</span><span class="p">]</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[95]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>2000</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Seu comprimento pode ser obtido com a fun√ß√£o <code>len()</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="nb">len</span><span class="p">(</span><span class="n">diccionario</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[96]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>4</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Como voc√™ pode ver, o comprimento √© 4 e n√£o 5, pois <code>year</code> conta apenas uma vez.</p>
</section>

<section class="section-block-markdown-cell">
<h4 id="2.4.1.-Acessando-os-itens">2.4.1. Acessando os itens<a class="anchor-link" href="#2.4.1.-Acessando-os-itens"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h4>
</section>

<section class="section-block-markdown-cell">
<p>Para acessar um item, podemos faz√™-lo por meio de sua <code>chave</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">diccionario</span><span class="p">[</span><span class="s2">"model"</span><span class="p">]</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[97]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>'Mustang'</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Ele tamb√©m pode ser acessado pelo m√©todo <code>get()</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">diccionario</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s2">"model"</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[98]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>'Mustang'</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Para conhecer todas as "chaves" dos dicion√°rios, voc√™ pode usar o m√©todo <code>keys()</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">diccionario</span><span class="o">.</span><span class="n">keys</span><span class="p">()</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[99]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>dict_keys(['brand', 'model', 'year', 'colors'])</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Uma vari√°vel pode ser usada para apontar para o dicion√°rio <code>keys</code>s, portanto, √© necess√°rio cham√°-la uma vez.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">diccionario</span> <span class="o">=</span> <span class="p">{opening_brace}</span>
<span class="s2">"brand"</span><span class="p">:</span> <span class="s2">"Ford"</span><span class="p">,</span>
<span class="s2">"model"</span><span class="p">:</span> <span class="s2">"Mustang"</span><span class="p">,</span>
<span class="s2">"year"</span><span class="p">:</span> <span class="mi">1964</span>
<span class="p">}</span>

<span class="c1"># Se declara una vez la variable que apunta a las keys</span>
<span class="n">x</span> <span class="o">=</span> <span class="n">diccionario</span><span class="o">.</span><span class="n">keys</span><span class="p">()</span>
<span class="nb">print</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>

<span class="c1"># Se a√±ade una nueva key</span>
<span class="n">diccionario</span><span class="p">[</span><span class="s2">"color"</span><span class="p">]</span> <span class="o">=</span> <span class="s2">"white"</span>

<span class="c1"># Se consulta la variable que apunta a las key</span>
<span class="nb">print</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>dict_keys(['brand', 'model', 'year'])
dict_keys(['brand', 'model', 'year', 'color'])
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>O m√©todo "values()" pode ser usado para obter os valores do dicion√°rio.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">diccionario</span><span class="o">.</span><span class="n">values</span><span class="p">()</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[101]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>dict_values(['Ford', 'Mustang', 1964, 'white'])</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Uma vari√°vel pode ser usada para apontar para os <code>valores</code> no dicion√°rio, portanto, √© necess√°rio cham√°-la uma vez.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">diccionario</span> <span class="o">=</span> <span class="p">{opening_brace}</span>
<span class="s2">"brand"</span><span class="p">:</span> <span class="s2">"Ford"</span><span class="p">,</span>
<span class="s2">"model"</span><span class="p">:</span> <span class="s2">"Mustang"</span><span class="p">,</span>
<span class="s2">"year"</span><span class="p">:</span> <span class="mi">1964</span>
<span class="p">}</span>

<span class="c1"># Se declara una vez la variable que apunta a los values</span>
<span class="n">x</span> <span class="o">=</span> <span class="n">diccionario</span><span class="o">.</span><span class="n">values</span><span class="p">()</span>
<span class="nb">print</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>

<span class="c1"># Se modifica un value</span>
<span class="n">diccionario</span><span class="p">[</span><span class="s2">"year"</span><span class="p">]</span> <span class="o">=</span> <span class="mi">2020</span>

<span class="c1"># Se consulta la variable que apunta a los values</span>
<span class="nb">print</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>dict_values(['Ford', 'Mustang', 1964])
dict_values(['Ford', 'Mustang', 2020])
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Se voc√™ quiser os inteiros do <code>item</code>, ou seja, <code>chave</code> e <code>valor</code>, dever√° usar o m√©todo <code>items()</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">diccionario</span><span class="o">.</span><span class="n">items</span><span class="p">()</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[103]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>dict_items([('brand', 'Ford'), ('model', 'Mustang'), ('year', 2020)])</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Uma vari√°vel pode ser usada para apontar para os <code>itens</code> no dicion√°rio, portanto, √© necess√°rio cham√°-la uma vez.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">diccionario</span> <span class="o">=</span> <span class="p">{opening_brace}</span>
<span class="s2">"brand"</span><span class="p">:</span> <span class="s2">"Ford"</span><span class="p">,</span>
<span class="s2">"model"</span><span class="p">:</span> <span class="s2">"Mustang"</span><span class="p">,</span>
<span class="s2">"year"</span><span class="p">:</span> <span class="mi">1964</span>
<span class="p">}</span>

<span class="c1"># Se declara una vez la variable que apunta a los items</span>
<span class="n">x</span> <span class="o">=</span> <span class="n">diccionario</span><span class="o">.</span><span class="n">items</span><span class="p">()</span>
<span class="nb">print</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>

<span class="c1"># Se modifica un value</span>
<span class="n">diccionario</span><span class="p">[</span><span class="s2">"year"</span><span class="p">]</span> <span class="o">=</span> <span class="mi">2020</span>

<span class="c1"># Se consulta la variable que apunta a los items</span>
<span class="nb">print</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>dict_items([('brand', 'Ford'), ('model', 'Mustang'), ('year', 1964)])
dict_items([('brand', 'Ford'), ('model', 'Mustang'), ('year', 2020)])
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Voc√™ pode verificar se uma <code>chave</code> existe no dicion√°rio.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="s2">"model"</span> <span class="ow">in</span> <span class="n">diccionario</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[105]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>True</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h4 id="2.4.2.-Modificar-itens">2.4.2. Modificar itens<a class="anchor-link" href="#2.4.2.-Modificar-itens"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h4>
</section>

<section class="section-block-markdown-cell">
<p>Voc√™ pode modificar um <code>item</code> acessando-o diretamente</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">diccionario</span> <span class="o">=</span> <span class="p">{opening_brace}</span>
<span class="s2">"brand"</span><span class="p">:</span> <span class="s2">"Ford"</span><span class="p">,</span>
<span class="s2">"model"</span><span class="p">:</span> <span class="s2">"Mustang"</span><span class="p">,</span>
<span class="s2">"year"</span><span class="p">:</span> <span class="mi">1964</span>
<span class="p">}</span>

<span class="c1"># Se modifica un item</span>
<span class="n">diccionario</span><span class="p">[</span><span class="s2">"year"</span><span class="p">]</span> <span class="o">=</span> <span class="mi">2020</span>

<span class="n">diccionario</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[106]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>{opening_brace}'brand': 'Ford', 'model': 'Mustang', 'year': 2020}</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Ou pode ser modificado usando o m√©todo <code>update()</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">diccionario</span> <span class="o">=</span> <span class="p">{opening_brace}</span>
  <span class="s2">"brand"</span><span class="p">:</span> <span class="s2">"Ford"</span><span class="p">,</span>
  <span class="s2">"model"</span><span class="p">:</span> <span class="s2">"Mustang"</span><span class="p">,</span>
  <span class="s2">"year"</span><span class="p">:</span> <span class="mi">1964</span>
<span class="p">}</span>

<span class="c1"># Se modifica un item</span>
<span class="n">diccionario</span><span class="o">.</span><span class="n">update</span><span class="p">({opening_brace}</span><span class="s2">"year"</span><span class="p">:</span> <span class="mi">2020</span><span class="p">})</span>

<span class="n">diccionario</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[107]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>{opening_brace}'brand': 'Ford', 'model': 'Mustang', 'year': 2020}</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h4 id="2.4.3.-Adicionando-itens">2.4.3. Adicionando itens<a class="anchor-link" href="#2.4.3.-Adicionando-itens"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h4>
</section>

<section class="section-block-markdown-cell">
<p>Voc√™ pode adicionar um <code>item</code> adicionando-o sem mais delongas.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">diccionario</span> <span class="o">=</span> <span class="p">{opening_brace}</span>
<span class="s2">"brand"</span><span class="p">:</span> <span class="s2">"Ford"</span><span class="p">,</span>
<span class="s2">"model"</span><span class="p">:</span> <span class="s2">"Mustang"</span><span class="p">,</span>
<span class="s2">"year"</span><span class="p">:</span> <span class="mi">1964</span>
<span class="p">}</span>

<span class="c1"># Se modifica un item</span>
<span class="n">diccionario</span><span class="p">[</span><span class="s2">"colour"</span><span class="p">]</span> <span class="o">=</span> <span class="s2">"blue"</span>

<span class="n">diccionario</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[108]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>{opening_brace}'brand': 'Ford', 'model': 'Mustang', 'year': 1964, 'colour': 'blue'}</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Ou pode ser adicionado por meio do m√©todo <code>update()</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">diccionario</span> <span class="o">=</span> <span class="p">{opening_brace}</span>
  <span class="s2">"brand"</span><span class="p">:</span> <span class="s2">"Ford"</span><span class="p">,</span>
  <span class="s2">"model"</span><span class="p">:</span> <span class="s2">"Mustang"</span><span class="p">,</span>
  <span class="s2">"year"</span><span class="p">:</span> <span class="mi">1964</span>
<span class="p">}</span>

<span class="c1"># Se modifica un item</span>
<span class="n">diccionario</span><span class="o">.</span><span class="n">update</span><span class="p">({opening_brace}</span><span class="s2">"colour"</span><span class="p">:</span> <span class="s2">"blue"</span><span class="p">})</span>

<span class="n">diccionario</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[109]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>{opening_brace}'brand': 'Ford', 'model': 'Mustang', 'year': 1964, 'colour': 'blue'}</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h4 id="2.4.4.-Excluir-itens">2.4.4. Excluir itens<a class="anchor-link" href="#2.4.4.-Excluir-itens"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h4>
</section>

<section class="section-block-markdown-cell">
<p>Voc√™ pode remover um <code>item</code> com uma <code>chave</code> espec√≠fica usando o m√©todo <code>pop()</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">diccionario</span> <span class="o">=</span> <span class="p">{opening_brace}</span>
  <span class="s2">"brand"</span><span class="p">:</span> <span class="s2">"Ford"</span><span class="p">,</span>
  <span class="s2">"model"</span><span class="p">:</span> <span class="s2">"Mustang"</span><span class="p">,</span>
  <span class="s2">"year"</span><span class="p">:</span> <span class="mi">1964</span>
<span class="p">}</span>

<span class="c1"># Se elimina un item</span>
<span class="n">diccionario</span><span class="o">.</span><span class="n">pop</span><span class="p">(</span><span class="s2">"model"</span><span class="p">)</span>

<span class="n">diccionario</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[110]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>{opening_brace}'brand': 'Ford', 'year': 1964}</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Ou voc√™ pode excluir um <code>item</code> com uma <code>chave</code> espec√≠fica, indicando o nome da <code>chave</code> entre os s√≠mbolos <code>[]</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">diccionario</span> <span class="o">=</span> <span class="p">{opening_brace}</span>
  <span class="s2">"brand"</span><span class="p">:</span> <span class="s2">"Ford"</span><span class="p">,</span>
  <span class="s2">"model"</span><span class="p">:</span> <span class="s2">"Mustang"</span><span class="p">,</span>
  <span class="s2">"year"</span><span class="p">:</span> <span class="mi">1964</span>
<span class="p">}</span>

<span class="c1"># Se elimina un item</span>
<span class="k">del</span> <span class="n">diccionario</span><span class="p">[</span><span class="s2">"model"</span><span class="p">]</span>

<span class="n">diccionario</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[111]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>{opening_brace}'brand': 'Ford', 'year': 1964}</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>O dicion√°rio inteiro ser√° exclu√≠do se <code>del</code> for usado e a <code>chave</code> de um <code>item</code> n√£o for especificada.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">diccionario</span> <span class="o">=</span> <span class="p">{opening_brace}</span>
  <span class="s2">"brand"</span><span class="p">:</span> <span class="s2">"Ford"</span><span class="p">,</span>
  <span class="s2">"model"</span><span class="p">:</span> <span class="s2">"Mustang"</span><span class="p">,</span>
  <span class="s2">"year"</span><span class="p">:</span> <span class="mi">1964</span>
<span class="p">}</span>

<span class="c1"># Se elimina un item</span>
<span class="k">del</span> <span class="n">diccionario</span>

<span class="k">if</span> <span class="s1">'diccionario'</span> <span class="ow">not</span> <span class="ow">in</span> <span class="nb">locals</span><span class="p">():</span>
  <span class="nb">print</span><span class="p">(</span><span class="s2">"diccionario eliminado"</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>diccionario eliminado
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Se quiser excluir o √∫ltimo <code>item</code> inserido, voc√™ pode usar o m√©todo <code>popitem()</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">diccionario</span> <span class="o">=</span> <span class="p">{opening_brace}</span>
  <span class="s2">"brand"</span><span class="p">:</span> <span class="s2">"Ford"</span><span class="p">,</span>
  <span class="s2">"model"</span><span class="p">:</span> <span class="s2">"Mustang"</span><span class="p">,</span>
  <span class="s2">"year"</span><span class="p">:</span> <span class="mi">1964</span>
<span class="p">}</span>

<span class="c1"># Se elimina el √∫ltimo item introducido</span>
<span class="n">diccionario</span><span class="o">.</span><span class="n">popitem</span><span class="p">()</span>

<span class="n">diccionario</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[113]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>{opening_brace}'brand': 'Ford', 'model': 'Mustang'}</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Se voc√™ quiser limpar o dicion√°rio, dever√° usar o m√©todo <code>clear()</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">diccionario</span> <span class="o">=</span> <span class="p">{opening_brace}</span>
  <span class="s2">"brand"</span><span class="p">:</span> <span class="s2">"Ford"</span><span class="p">,</span>
  <span class="s2">"model"</span><span class="p">:</span> <span class="s2">"Mustang"</span><span class="p">,</span>
  <span class="s2">"year"</span><span class="p">:</span> <span class="mi">1964</span>
<span class="p">}</span>
<span class="n">diccionario</span><span class="o">.</span><span class="n">clear</span><span class="p">()</span>
<span class="n">diccionario</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[114]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>{opening_brace}}</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h4 id="2.4.5.-Copiar-dicion%C3%A1rios">2.4.5. Copiar dicion√°rios<a class="anchor-link" href="#2.4.5.-Copiar-dicion%C3%A1rios"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h4>
</section>

<section class="section-block-markdown-cell">
<p>N√£o √© poss√≠vel copiar dicion√°rios usando <code>dictionary1 = dictionary2</code>, pois se voc√™ modificar <code>dictionary1</code>, tamb√©m modificar√° <code>dictionary2</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">diccionario1</span> <span class="o">=</span> <span class="p">{opening_brace}</span>
  <span class="s2">"brand"</span><span class="p">:</span> <span class="s2">"Ford"</span><span class="p">,</span>
  <span class="s2">"model"</span><span class="p">:</span> <span class="s2">"Mustang"</span><span class="p">,</span>
  <span class="s2">"year"</span><span class="p">:</span> <span class="mi">1964</span>
<span class="p">}</span>
<span class="n">diccionario2</span> <span class="o">=</span> <span class="n">diccionario1</span>
<span class="n">diccionario1</span><span class="p">[</span><span class="s2">"year"</span><span class="p">]</span> <span class="o">=</span> <span class="mi">2000</span>
<span class="n">diccionario2</span><span class="p">[</span><span class="s2">"year"</span><span class="p">]</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[115]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>2000</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Portanto, voc√™ deve usar o m√©todo <code>copy()</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">diccionario1</span> <span class="o">=</span> <span class="p">{opening_brace}</span>
  <span class="s2">"brand"</span><span class="p">:</span> <span class="s2">"Ford"</span><span class="p">,</span>
  <span class="s2">"model"</span><span class="p">:</span> <span class="s2">"Mustang"</span><span class="p">,</span>
  <span class="s2">"year"</span><span class="p">:</span> <span class="mi">1964</span>
<span class="p">}</span>
<span class="n">diccionario2</span> <span class="o">=</span> <span class="n">diccionario1</span><span class="o">.</span><span class="n">copy</span><span class="p">()</span>
<span class="n">diccionario1</span><span class="p">[</span><span class="s2">"year"</span><span class="p">]</span> <span class="o">=</span> <span class="mi">2000</span>
<span class="n">diccionario2</span><span class="p">[</span><span class="s2">"year"</span><span class="p">]</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[116]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>1964</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Ou use o construtor de dicion√°rio <code>dict()</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">diccionario1</span> <span class="o">=</span> <span class="p">{opening_brace}</span>
  <span class="s2">"brand"</span><span class="p">:</span> <span class="s2">"Ford"</span><span class="p">,</span>
  <span class="s2">"model"</span><span class="p">:</span> <span class="s2">"Mustang"</span><span class="p">,</span>
  <span class="s2">"year"</span><span class="p">:</span> <span class="mi">1964</span>
<span class="p">}</span>
<span class="n">diccionario2</span> <span class="o">=</span> <span class="nb">dict</span><span class="p">(</span><span class="n">diccionario1</span><span class="p">)</span>
<span class="n">diccionario1</span><span class="p">[</span><span class="s2">"year"</span><span class="p">]</span> <span class="o">=</span> <span class="mi">2000</span>
<span class="n">diccionario2</span><span class="p">[</span><span class="s2">"year"</span><span class="p">]</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[117]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>1964</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h4 id="2.4.6.-Dicion%C3%A1rios-aninhados">2.4.6. Dicion√°rios aninhados<a class="anchor-link" href="#2.4.6.-Dicion%C3%A1rios-aninhados"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h4>
</section>

<section class="section-block-markdown-cell">
<p>Os dicion√°rios podem ter <code>itens</code> de qualquer tipo de dados, inclusive outros dicion√°rios. Esses dicion√°rios s√£o chamados de dicion√°rios "aninhados".</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">diccionario_nested</span> <span class="o">=</span> <span class="p">{opening_brace}</span>
  <span class="s2">"child1"</span> <span class="p">:</span> <span class="p">{opening_brace}</span>
    <span class="s2">"name"</span> <span class="p">:</span> <span class="s2">"Emil"</span><span class="p">,</span>
    <span class="s2">"year"</span> <span class="p">:</span> <span class="mi">2004</span>
  <span class="p">},</span>
  <span class="s2">"child2"</span> <span class="p">:</span> <span class="p">{opening_brace}</span>
    <span class="s2">"name"</span> <span class="p">:</span> <span class="s2">"Tobias"</span><span class="p">,</span>
    <span class="s2">"year"</span> <span class="p">:</span> <span class="mi">2007</span>
  <span class="p">},</span>
  <span class="s2">"child3"</span> <span class="p">:</span> <span class="p">{opening_brace}</span>
    <span class="s2">"name"</span> <span class="p">:</span> <span class="s2">"Linus"</span><span class="p">,</span>
    <span class="s2">"year"</span> <span class="p">:</span> <span class="mi">2011</span>
  <span class="p">}</span>
<span class="p">}</span>
<span class="n">diccionario_nested</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[118]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>{opening_brace}'child1': {opening_brace}'name': 'Emil', 'year': 2004},
 'child2': {opening_brace}'name': 'Tobias', 'year': 2007},
 'child3': {opening_brace}'name': 'Linus', 'year': 2011}}</pre>
</div>
</div>
</div>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">child1</span> <span class="o">=</span> <span class="p">{opening_brace}</span>
  <span class="s2">"name"</span> <span class="p">:</span> <span class="s2">"Emil"</span><span class="p">,</span>
  <span class="s2">"year"</span> <span class="p">:</span> <span class="mi">2004</span>
<span class="p">}</span>
<span class="n">child2</span> <span class="o">=</span> <span class="p">{opening_brace}</span>
  <span class="s2">"name"</span> <span class="p">:</span> <span class="s2">"Tobias"</span><span class="p">,</span>
  <span class="s2">"year"</span> <span class="p">:</span> <span class="mi">2007</span>
<span class="p">}</span>
<span class="n">child3</span> <span class="o">=</span> <span class="p">{opening_brace}</span>
  <span class="s2">"name"</span> <span class="p">:</span> <span class="s2">"Linus"</span><span class="p">,</span>
  <span class="s2">"year"</span> <span class="p">:</span> <span class="mi">2011</span>
<span class="p">}</span>

<span class="n">diccionario_nested</span> <span class="o">=</span> <span class="p">{opening_brace}</span>
  <span class="s2">"child1"</span> <span class="p">:</span> <span class="n">child1</span><span class="p">,</span>
  <span class="s2">"child2"</span> <span class="p">:</span> <span class="n">child2</span><span class="p">,</span>
  <span class="s2">"child3"</span> <span class="p">:</span> <span class="n">child3</span>
<span class="p">}</span>

<span class="n">diccionario_nested</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[119]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>{opening_brace}'child1': {opening_brace}'name': 'Emil', 'year': 2004},
 'child2': {opening_brace}'name': 'Tobias', 'year': 2007},
 'child3': {opening_brace}'name': 'Linus', 'year': 2011}}</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h4 id="2.4.7.-M%C3%A9todos-de-dicion%C3%A1rio">2.4.7. M√©todos de dicion√°rio<a class="anchor-link" href="#2.4.7.-M%C3%A9todos-de-dicion%C3%A1rio"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h4>
</section>

<section class="section-block-markdown-cell">
<p>Estes s√£o os [m√©todos] (<a href="https://www.w3schools.com/python/python_dictionaries_methods.asp">https://www.w3schools.com/python/python_dictionaries_methods.asp</a>) que podem ser usados nos dicion√°rios</p>
</section>

<section class="section-block-markdown-cell">
<h4 id="2.4.8.-Compreens%C3%A3o-de-dicion%C3%A1rio">2.4.8. Compreens√£o de dicion√°rio<a class="anchor-link" href="#2.4.8.-Compreens%C3%A3o-de-dicion%C3%A1rio"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h4>
</section>

<section class="section-block-markdown-cell">
<p>Assim como poder√≠amos fazer <code>compreens√µes de listas</code> usando a sintaxe</p>
<div class="highlight"><pre><span></span><span class="n">list_comprehension</span> <span class="o">=</span> <span class="p">[</span><span class="n">expression</span> <span class="k">for</span> <span class="n">item</span> <span class="ow">in</span> <span class="n">iterable</span> <span class="k">if</span> <span class="n">condition</span> <span class="o">==</span> <span class="kc">True</span><span class="p">]</span><span class="o">.</span>
<span class="err">```</span>

<span class="n">Podemos</span> <span class="n">fazer</span> <span class="n">compreens√µes</span> <span class="n">de</span> <span class="err">`</span><span class="n">discion√°rios</span><span class="err">`</span> <span class="n">com</span> <span class="n">a</span> <span class="n">seguinte</span> <span class="n">sintaxe</span>

<span class="err">```</span> <span class="n">python</span>
<span class="n">dictionary_comprehension</span> <span class="o">=</span> <span class="p">[</span><span class="n">express√£o</span> <span class="n">de</span> <span class="n">chave</span><span class="p">:</span> <span class="n">express√£o</span> <span class="n">de</span> <span class="n">valor</span> <span class="n">para</span> <span class="n">item</span> <span class="n">em</span> <span class="n">iter√°vel</span> <span class="n">se</span> <span class="n">condi√ß√£o</span> <span class="o">==</span> <span class="kc">True</span><span class="p">]</span><span class="o">.</span>
<span class="err">```</span>

<span class="n">Aqui</span> <span class="n">est√°</span> <span class="n">um</span> <span class="n">exemplo</span>
</pre></div>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">dictionary_comprehension</span> <span class="o">=</span> <span class="p">{opening_brace}</span><span class="n">x</span><span class="p">:</span> <span class="n">x</span><span class="o">**</span><span class="mi">2</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">6</span><span class="p">)</span> <span class="k">if</span> <span class="n">x</span> <span class="o">&gt;</span> <span class="mi">2</span><span class="p">}</span>
<span class="n">dictionary_comprehension</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[2]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>{opening_brace}4: 16, 6: 36}</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h3 id="2.5.-Conjuntos">2.5. Conjuntos<a class="anchor-link" href="#2.5.-Conjuntos"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h3>
</section>

<section class="section-block-markdown-cell">
<h4 id="2.5.1.-definir">2.5.1. definir<a class="anchor-link" href="#2.5.1.-definir"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h4>
</section>

<section class="section-block-markdown-cell">
<p>Os conjuntos s√£o usados em python para armazenar um conjunto de itens em uma √∫nica vari√°vel. Voc√™ pode armazenar itens de diferentes tipos. Eles n√£o s√£o ordenados e n√£o t√™m √≠ndice.</p>
<p>Elas diferem das listas por n√£o terem ordem nem √≠ndice.</p>
<p>Eles s√£o declarados pelos s√≠mbolos <code>{opening_brace}}</code>.</p>
</section>

<section class="section-block-markdown-cell">
<p>Como <code>set</code> √© uma palavra reservada em Python, criamos um <code>set</code> com o nome <code>set_</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">set_</span> <span class="o">=</span> <span class="p">{opening_brace}</span><span class="s1">'item0'</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mf">5.3</span><span class="p">,</span> <span class="s2">"item4"</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mf">6.6</span><span class="p">}</span>
<span class="n">set_</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[120]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>{opening_brace}1, 5, 5.3, 6.6, 'item0', 'item4'}</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>N√£o pode haver itens duplicados; se voc√™ encontrar um item duplicado, manter√° apenas um.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">set_</span> <span class="o">=</span> <span class="p">{opening_brace}</span><span class="s1">'item0'</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mf">5.3</span><span class="p">,</span> <span class="s2">"item4"</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mf">6.6</span><span class="p">,</span> <span class="s1">'item0'</span><span class="p">}</span>
<span class="n">set_</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[121]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>{opening_brace}1, 5, 5.3, 6.6, 'item0', 'item4'}</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>O comprimento do <code>set</code> pode ser obtido com a fun√ß√£o <code>len()</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="nb">len</span><span class="p">(</span><span class="n">set_</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[122]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>6</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Como voc√™ pode ver, o comprimento do conjunto √© 6 e n√£o 7, pois voc√™ fica com apenas um <code>'item0'</code>.</p>
</section>

<section class="section-block-markdown-cell">
<p>Voc√™ pode verificar se um item est√° no conjunto.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="s1">'item4'</span> <span class="ow">in</span> <span class="n">set_</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[123]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>True</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h5 id="2.5.1.1.-Adicionando-itens">2.5.1.1. Adicionando itens<a class="anchor-link" href="#2.5.1.1.-Adicionando-itens"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h5>
</section>

<section class="section-block-markdown-cell">
<p>Um item pode ser adicionado ao conjunto usando o m√©todo <code>add()</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">set_</span><span class="o">.</span><span class="n">add</span><span class="p">(</span><span class="mf">8.8</span><span class="p">)</span>
<span class="n">set_</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[124]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>{opening_brace}1, 5, 5.3, 6.6, 8.8, 'item0', 'item4'}</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Outro conjunto pode ser adicionado usando o m√©todo <code>update()</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">set2</span> <span class="o">=</span> <span class="p">{opening_brace}</span><span class="s2">"item5"</span><span class="p">,</span> <span class="s2">"item6"</span><span class="p">,</span> <span class="mi">7</span><span class="p">}</span>
<span class="n">set_</span><span class="o">.</span><span class="n">update</span><span class="p">(</span><span class="n">set2</span><span class="p">)</span>
<span class="n">set_</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[125]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>{opening_brace}1, 5, 5.3, 6.6, 7, 8.8, 'item0', 'item4', 'item5', 'item6'}</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Voc√™ tamb√©m pode adicionar itens de tipos de dados Python iter√°veis</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">lista</span> <span class="o">=</span> <span class="p">[</span><span class="s2">"item9"</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mf">11.2</span><span class="p">]</span>
<span class="n">set_</span><span class="o">.</span><span class="n">update</span><span class="p">(</span><span class="n">lista</span><span class="p">)</span>
<span class="n">set_</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[126]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>{opening_brace}1, 10, 11.2, 5, 5.3, 6.6, 7, 8.8, 'item0', 'item4', 'item5', 'item6', 'item9'}</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h5 id="2.5.1.2.-Excluindo-itens">2.5.1.2. Excluindo itens<a class="anchor-link" href="#2.5.1.2.-Excluindo-itens"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h5>
</section>

<section class="section-block-markdown-cell">
<p>Um determinado item pode ser removido com o m√©todo <code>remove()</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">set_</span><span class="o">.</span><span class="n">remove</span><span class="p">(</span><span class="s1">'item9'</span><span class="p">)</span>
<span class="n">set_</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[127]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>{opening_brace}1, 10, 11.2, 5, 5.3, 6.6, 7, 8.8, 'item0', 'item4', 'item5', 'item6'}</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Ou por meio do m√©todo <code>discard()</code></p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">set_</span><span class="o">.</span><span class="n">discard</span><span class="p">(</span><span class="s1">'item6'</span><span class="p">)</span>
<span class="n">set_</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[128]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>{opening_brace}1, 10, 11.2, 5, 5.3, 6.6, 7, 8.8, 'item0', 'item4', 'item5'}</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Usando o m√©todo <code>pop()</code> voc√™ pode remover o √∫ltimo item, mas como os <code>set</code>s n√£o est√£o ordenados, n√£o h√° como saber qual √© o √∫ltimo item. O m√©todo <code>pop()</code> retorna o item exclu√≠do.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"set antes de pop(): </span><span class="si">{opening_brace}</span><span class="n">set_</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>
<span class="n">eliminado</span> <span class="o">=</span> <span class="n">set_</span><span class="o">.</span><span class="n">pop</span><span class="p">()</span>
<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"Se ha eliminado </span><span class="si">{opening_brace}</span><span class="n">eliminado</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>set antes de pop(): {opening_brace}1, 5, 5.3, 6.6, 8.8, 7, 10, 11.2, 'item5', 'item0', 'item4'}
Se ha eliminado 1
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Usando o m√©todo <code>clear()</code>, o conjunto pode ser esvaziado.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">set_</span><span class="o">.</span><span class="n">clear</span><span class="p">()</span>
<span class="n">set_</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[130]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>set()</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Por fim, com <code>del</code> voc√™ pode excluir o conjunto</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="k">del</span> <span class="n">set_</span>

<span class="k">if</span> <span class="s1">'set_'</span> <span class="ow">not</span> <span class="ow">in</span> <span class="nb">locals</span><span class="p">():</span>
  <span class="nb">print</span><span class="p">(</span><span class="s2">"set eliminado"</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>set eliminado
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h5 id="2.5.1.3.-vincula%C3%A7%C3%A3o-de-itens">2.5.1.3. vincula√ß√£o de itens<a class="anchor-link" href="#2.5.1.3.-vincula%C3%A7%C3%A3o-de-itens"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h5>
</section>

<section class="section-block-markdown-cell">
<p>Uma forma de unir conjuntos √© por meio do m√©todo <code>union()</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">set1</span> <span class="o">=</span> <span class="p">{opening_brace}</span><span class="s2">"a"</span><span class="p">,</span> <span class="s2">"b"</span> <span class="p">,</span> <span class="s2">"c"</span><span class="p">}</span>
<span class="n">set2</span> <span class="o">=</span> <span class="p">{opening_brace}</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">}</span>
<span class="n">set3</span> <span class="o">=</span> <span class="n">set1</span><span class="o">.</span><span class="n">union</span><span class="p">(</span><span class="n">set2</span><span class="p">)</span>
<span class="n">set3</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[132]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>{opening_brace}1, 2, 3, 'a', 'b', 'c'}</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Outra maneira √© usar o m√©todo <code>update()</code>, mas dessa forma voc√™ adiciona um conjunto a outro, n√£o cria um novo.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">set1</span> <span class="o">=</span> <span class="p">{opening_brace}</span><span class="s2">"a"</span><span class="p">,</span> <span class="s2">"b"</span> <span class="p">,</span> <span class="s2">"c"</span><span class="p">}</span>
<span class="n">set2</span> <span class="o">=</span> <span class="p">{opening_brace}</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">}</span>
<span class="n">set1</span><span class="o">.</span><span class="n">update</span><span class="p">(</span><span class="n">set2</span><span class="p">)</span>
<span class="n">set1</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[133]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>{opening_brace}1, 2, 3, 'a', 'b', 'c'}</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Esses m√©todos de uni√£o removem as duplicatas, mas se quisermos obter os itens duplicados em dois conjuntos, usaremos o m√©todo <code>intersection()</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">set1</span> <span class="o">=</span> <span class="p">{opening_brace}</span><span class="s2">"apple"</span><span class="p">,</span> <span class="s2">"banana"</span><span class="p">,</span> <span class="s2">"cherry"</span><span class="p">}</span>
<span class="n">set2</span> <span class="o">=</span> <span class="p">{opening_brace}</span><span class="s2">"google"</span><span class="p">,</span> <span class="s2">"microsoft"</span><span class="p">,</span> <span class="s2">"apple"</span><span class="p">}</span>

<span class="n">set3</span> <span class="o">=</span> <span class="n">set1</span><span class="o">.</span><span class="n">intersection</span><span class="p">(</span><span class="n">set2</span><span class="p">)</span>
<span class="n">set3</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[134]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>{opening_brace}'apple'}</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Se quisermos obter os itens duplicados em dois conjuntos, mas sem criar um novo conjunto, usaremos o m√©todo <code>intersection_update()</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">set1</span> <span class="o">=</span> <span class="p">{opening_brace}</span><span class="s2">"apple"</span><span class="p">,</span> <span class="s2">"banana"</span><span class="p">,</span> <span class="s2">"cherry"</span><span class="p">}</span>
<span class="n">set2</span> <span class="o">=</span> <span class="p">{opening_brace}</span><span class="s2">"google"</span><span class="p">,</span> <span class="s2">"microsoft"</span><span class="p">,</span> <span class="s2">"apple"</span><span class="p">}</span>

<span class="n">set1</span><span class="o">.</span><span class="n">intersection_update</span><span class="p">(</span><span class="n">set2</span><span class="p">)</span>
<span class="n">set1</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[135]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>{opening_brace}'apple'}</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Por outro lado, se quisermos manter as n√£o duplicatas, usaremos o m√©todo <code>symmetric_difference()</code>.</p>
<p>A diferen√ßa entre isso e a uni√£o de dois conjuntos √© que, na uni√£o, ele mant√©m todos os itens, mas s√≥ pega os itens duplicados uma vez. Agora ficamos com os itens que n√£o est√£o duplicados.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">set1</span> <span class="o">=</span> <span class="p">{opening_brace}</span><span class="s2">"apple"</span><span class="p">,</span> <span class="s2">"banana"</span><span class="p">,</span> <span class="s2">"cherry"</span><span class="p">}</span>
<span class="n">set2</span> <span class="o">=</span> <span class="p">{opening_brace}</span><span class="s2">"google"</span><span class="p">,</span> <span class="s2">"microsoft"</span><span class="p">,</span> <span class="s2">"apple"</span><span class="p">}</span>

<span class="n">set3</span> <span class="o">=</span> <span class="n">set1</span><span class="o">.</span><span class="n">symmetric_difference</span><span class="p">(</span><span class="n">set2</span><span class="p">)</span>
<span class="n">set3</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[136]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>{opening_brace}'banana', 'cherry', 'google', 'microsoft'}</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Se quisermos manter as n√£o duplicatas sem criar um novo conjunto, usaremos o m√©todo <code>symmetric_difference_update()</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">set1</span> <span class="o">=</span> <span class="p">{opening_brace}</span><span class="s2">"apple"</span><span class="p">,</span> <span class="s2">"banana"</span><span class="p">,</span> <span class="s2">"cherry"</span><span class="p">}</span>
<span class="n">set2</span> <span class="o">=</span> <span class="p">{opening_brace}</span><span class="s2">"google"</span><span class="p">,</span> <span class="s2">"microsoft"</span><span class="p">,</span> <span class="s2">"apple"</span><span class="p">}</span>

<span class="n">set1</span><span class="o">.</span><span class="n">symmetric_difference_update</span><span class="p">(</span><span class="n">set2</span><span class="p">)</span>
<span class="n">set1</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[137]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>{opening_brace}'banana', 'cherry', 'google', 'microsoft'}</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h5 id="2.5.1.4.-definir-m%C3%A9todos">2.5.1.4. definir m√©todos<a class="anchor-link" href="#2.5.1.4.-definir-m%C3%A9todos"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h5>
</section>

<section class="section-block-markdown-cell">
<p>Estes s√£o os [m√©todos] (<a href="https://www.w3schools.com/python/python_sets_methods.asp">https://www.w3schools.com/python/python_sets_methods.asp</a>) que podem ser usados nos conjuntos</p>
</section>

<section class="section-block-markdown-cell">
<h4 id="2.5.2.-Frozenset">2.5.2. Frozenset<a class="anchor-link" href="#2.5.2.-Frozenset"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h4>
</section>

<section class="section-block-markdown-cell">
<p>Frozensets s√£o como <code>set</code>s, mas imut√°veis, assim como <code>tuple</code>s s√£o como <code>list</code>s, mas imut√°veis. Portanto, n√£o √© poss√≠vel adicionar ou remover itens</p>
</section>

<section class="section-block-markdown-cell">
<h3 id="2.6.-Booleanos">2.6. Booleanos<a class="anchor-link" href="#2.6.-Booleanos"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h3>
</section>

<section class="section-block-markdown-cell">
<p>Existem apenas dois booleanos no Python: <code>True</code> e <code>False</code>.</p>
</section>

<section class="section-block-markdown-cell">
<p>Usando a fun√ß√£o <code>bool()</code>, voc√™ pode avaliar se algo √© <code>True</code> ou <code>False</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="nb">print</span><span class="p">(</span><span class="nb">bool</span><span class="p">(</span><span class="s2">"Hello"</span><span class="p">))</span>
<span class="nb">print</span><span class="p">(</span><span class="nb">bool</span><span class="p">(</span><span class="mi">15</span><span class="p">))</span>
<span class="nb">print</span><span class="p">(</span><span class="nb">bool</span><span class="p">(</span><span class="mi">0</span><span class="p">))</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>True
True
False
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h4 id="2.6.1.-Outros-tipos-de-dados-Verdadeiro-ou-Falso">2.6.1. Outros tipos de dados Verdadeiro ou Falso<a class="anchor-link" href="#2.6.1.-Outros-tipos-de-dados-Verdadeiro-ou-Falso"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h4>
</section>

<section class="section-block-markdown-cell">
<p>Os dados a seguir s√£o <code>True</code>:</p>
<ul>
<li>Qualquer string n√£o vazia</li>
<li>Qualquer n√∫mero, exceto 0</li>
<li>Qualquer lista, tupla, dicion√°rio ou conjunto n√£o vazio</li>
</ul>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="nb">print</span><span class="p">(</span><span class="nb">bool</span><span class="p">(</span><span class="s2">"Hola"</span><span class="p">))</span>
<span class="nb">print</span><span class="p">(</span><span class="nb">bool</span><span class="p">(</span><span class="s2">""</span><span class="p">))</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>True
False
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="nb">print</span><span class="p">(</span><span class="nb">bool</span><span class="p">(</span><span class="mi">3</span><span class="p">))</span>
<span class="nb">print</span><span class="p">(</span><span class="nb">bool</span><span class="p">(</span><span class="mi">0</span><span class="p">))</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>True
False
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">lista</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">]</span>
<span class="nb">print</span><span class="p">(</span><span class="nb">bool</span><span class="p">(</span><span class="n">lista</span><span class="p">))</span>

<span class="n">lista</span> <span class="o">=</span> <span class="p">[]</span>
<span class="nb">print</span><span class="p">(</span><span class="nb">bool</span><span class="p">(</span><span class="n">lista</span><span class="p">))</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>True
False
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">tupla</span> <span class="o">=</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="nb">bool</span><span class="p">(</span><span class="n">tupla</span><span class="p">))</span>

<span class="n">tupla</span> <span class="o">=</span> <span class="p">()</span>
<span class="nb">print</span><span class="p">(</span><span class="nb">bool</span><span class="p">(</span><span class="n">tupla</span><span class="p">))</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>True
False
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">diccionario</span> <span class="o">=</span> <span class="p">{opening_brace}</span>
  <span class="s2">"brand"</span><span class="p">:</span> <span class="s2">"Ford"</span><span class="p">,</span>
  <span class="s2">"model"</span><span class="p">:</span> <span class="s2">"Mustang"</span><span class="p">,</span>
  <span class="s2">"year"</span><span class="p">:</span> <span class="mi">1964</span><span class="p">,</span>
  <span class="s2">"colors"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"red"</span><span class="p">,</span> <span class="s2">"white"</span><span class="p">,</span> <span class="s2">"blue"</span><span class="p">]</span>
<span class="p">}</span>
<span class="nb">print</span><span class="p">(</span><span class="nb">bool</span><span class="p">(</span><span class="n">diccionario</span><span class="p">))</span>

<span class="n">diccionario</span><span class="o">.</span><span class="n">clear</span><span class="p">()</span>
<span class="nb">print</span><span class="p">(</span><span class="nb">bool</span><span class="p">(</span><span class="n">diccionario</span><span class="p">))</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>True
False
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">set_</span> <span class="o">=</span> <span class="p">{opening_brace}</span><span class="s1">'item0'</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mf">5.3</span><span class="p">,</span> <span class="s2">"item4"</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mf">6.6</span><span class="p">}</span>
<span class="nb">print</span><span class="p">(</span><span class="nb">bool</span><span class="p">(</span><span class="n">set_</span><span class="p">))</span>

<span class="n">set_</span><span class="o">.</span><span class="n">clear</span><span class="p">()</span>
<span class="nb">print</span><span class="p">(</span><span class="nb">bool</span><span class="p">(</span><span class="n">set_</span><span class="p">))</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>True
False
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h3 id="2.7.-Bin%C3%A1rios">2.7. Bin√°rios<a class="anchor-link" href="#2.7.-Bin%C3%A1rios"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h3>
</section>

<section class="section-block-markdown-cell">
<h4 id="2.7.1.-Bytes">2.7.1. Bytes<a class="anchor-link" href="#2.7.1.-Bytes"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h4>
</section>

<section class="section-block-markdown-cell">
<p>O tipo <code>bytes</code> √© uma sequ√™ncia imut√°vel de bytes. Somente caracteres ASCII s√£o suportados. Os bytes tamb√©m podem ser representados por inteiros cujos valores devem satisfazer <code>0 &lt;= x &lt; 256</code>.</p>
</section>

<section class="section-block-markdown-cell">
<p>Para criar um tipo de byte, devemos primeiro inserir o caractere <code>b</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">byte</span> <span class="o">=</span> <span class="sa">b</span><span class="s2">"MaximoFN"</span>
<span class="n">byte</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[145]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>b'MaximoFN'</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Eles tamb√©m podem ser criados por seu construtor <code>bytes()</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">byte</span> <span class="o">=</span> <span class="nb">bytes</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span>
<span class="n">byte</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[146]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'</pre>
</div>
</div>
</div>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">byte</span> <span class="o">=</span> <span class="nb">bytes</span><span class="p">(</span><span class="nb">range</span><span class="p">(</span><span class="mi">10</span><span class="p">))</span>
<span class="n">byte</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[147]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>b'\x00\x01\x02\x03\x04\x05\x06\x07\x08\t'</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Os bytes podem ser concatenados usando o operador <code>+</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">byte1</span> <span class="o">=</span> <span class="sa">b</span><span class="s1">'DeepMax'</span>
<span class="n">byte2</span> <span class="o">=</span> <span class="sa">b</span><span class="s1">'FN'</span>
<span class="n">byte3</span> <span class="o">=</span> <span class="n">byte1</span> <span class="o">+</span> <span class="n">byte2</span>
<span class="n">byte3</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[148]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>b'DeepMaxFN'</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Ou por meio de repeti√ß√£o com o operador <code>*</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">byte1</span> <span class="o">=</span> <span class="sa">b</span><span class="s1">'MaximoFN '</span>
<span class="n">byte2</span> <span class="o">=</span> <span class="n">byte1</span> <span class="o">*</span> <span class="mi">3</span>
<span class="n">byte2</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[149]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>b'MaximoFN MaximoFN MaximoFN '</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Podemos verificar se um caractere est√° dentro da cadeia de caracteres</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="sa">b</span><span class="s1">'D'</span> <span class="ow">in</span> <span class="n">byte1</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[150]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>False</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Esses s√£o os [m√©todos] (<a href="https://plataforma.josedomingo.org/pledin/cursos/python3/curso/u30/#m%C3%A9todos-de-bytes-y-bytearray">https://plataforma.josedomingo.org/pledin/cursos/python3/curso/u30/#m%C3%A9todos-de-bytes-y-bytearray</a>) que podem ser usados nos <code>bytes</code>.</p>
</section>

<section class="section-block-markdown-cell">
<h4 id="2.7.2-Bytearray">2.7.2 Bytearray<a class="anchor-link" href="#2.7.2-Bytearray"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h4>
</section>

<section class="section-block-markdown-cell">
<p>Os <code>bytearray</code>s s√£o iguais aos <code>bytes</code>, mas s√£o mut√°veis.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">byte_array</span> <span class="o">=</span> <span class="nb">bytearray</span><span class="p">(</span><span class="sa">b</span><span class="s1">'MaximoFN'</span><span class="p">)</span>
<span class="n">byte_array</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[151]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>bytearray(b'MaximoFN')</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h4 id="2.7.3.-visualiza%C3%A7%C3%A3o-de-mem%C3%B3ria">2.7.3. visualiza√ß√£o de mem√≥ria<a class="anchor-link" href="#2.7.3.-visualiza%C3%A7%C3%A3o-de-mem%C3%B3ria"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h4>
</section>

<section class="section-block-markdown-cell">
<p>Os objetos de visualiza√ß√£o de mem√≥ria permitem que o c√≥digo Python acesse os dados internos de um objeto que suporta o protocolo de buffer sem fazer c√≥pias.</p>
<p>A fun√ß√£o <code>memoryview()</code> permite o acesso direto de leitura e grava√ß√£o aos dados orientados a bytes de um objeto sem a necessidade de copi√°-los primeiro. Isso pode gerar grandes ganhos de desempenho ao operar em objetos grandes, pois n√£o cria uma c√≥pia ao cortar.</p>
<p>Buffer, voc√™ pode criar outro objeto de acesso para modificar os big data sem copi√°-los. Isso faz com que o programa use menos mem√≥ria e aumenta a velocidade de execu√ß√£o.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">byte_array</span> <span class="o">=</span> <span class="nb">bytearray</span><span class="p">(</span><span class="s1">'XYZ'</span><span class="p">,</span> <span class="s1">'utf-8'</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s1">'Antes de acceder a la memoria: </span><span class="si">{opening_brace}</span><span class="n">byte_array</span><span class="si">}</span><span class="s1">'</span><span class="p">)</span>

<span class="n">mem_view</span> <span class="o">=</span> <span class="nb">memoryview</span><span class="p">(</span><span class="n">byte_array</span><span class="p">)</span>

<span class="n">mem_view</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">=</span> <span class="mi">74</span>
<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s1">'Despu√©s de acceder a la memoria: </span><span class="si">{opening_brace}</span><span class="n">byte_array</span><span class="si">}</span><span class="s1">'</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>Antes de acceder a la memoria: bytearray(b'XYZ')
Despu√©s de acceder a la memoria: bytearray(b'XYJ')
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h2 id="3.-Operadores">3. Operadores<a class="anchor-link" href="#3.-Operadores"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h2>
</section>

<section class="section-block-markdown-cell">
<h3 id="3.1.-Operadores-aritm%C3%A9ticos">3.1. Operadores aritm√©ticos<a class="anchor-link" href="#3.1.-Operadores-aritm%C3%A9ticos"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h3>
</section>

<section class="section-block-markdown-cell">
<p>Operador de soma <code>+</code></p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="mi">3</span> <span class="o">+</span> <span class="mi">5</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[153]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>8</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Oeprador subtrai <code>-</code></p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="mi">3</span> <span class="o">-</span> <span class="mi">5</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[154]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>-2</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Operador de multiplica√ß√£o <code>*</code></p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="mi">3</span> <span class="o">*</span> <span class="mi">5</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[155]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>15</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Divis√£o de operadores <code>/</code></p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="mi">3</span> <span class="o">/</span> <span class="mi">5</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[156]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>0.6</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Operador de m√≥dulo <code>%</code>. Retorna o resto de uma divis√£o</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="mi">25</span> <span class="o">%</span> <span class="mi">2</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[157]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>1</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Operador de expoente <code>**</code></p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="mi">5</span> <span class="o">**</span> <span class="mi">2</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[158]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>25</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Operador de divis√£o de n√∫meros inteiros <code>//</code></p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="mi">25</span> <span class="o">//</span> <span class="mi">2</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[159]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>12</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h3 id="3.2.-Operadores-de-compara%C3%A7%C3%A3o">3.2. Operadores de compara√ß√£o<a class="anchor-link" href="#3.2.-Operadores-de-compara%C3%A7%C3%A3o"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h3>
</section>

<section class="section-block-markdown-cell">
<p>Operador igual a <code>==</code></p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="mi">1</span> <span class="o">==</span> <span class="mi">1</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[160]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>True</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>O operador √© distinto <code>!=</code></p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="mi">1</span> <span class="o">!=</span> <span class="mi">2</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[161]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>True</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>O operador √© maior que <code>&gt;</code></p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="mi">3</span> <span class="o">&gt;</span> <span class="mi">2</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[162]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>True</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>O operador √© menor que <code>&lt;</code></p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="mi">2</span> <span class="o">&lt;</span> <span class="mi">3</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[163]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>True</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>O operador √© maior ou igual a <code>&gt;=</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="mi">3</span> <span class="o">&gt;=</span> <span class="mi">3</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[164]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>True</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>O operador √© menor ou igual a <code>&lt;=</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="mi">3</span> <span class="o">&lt;=</span> <span class="mi">3</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[165]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>True</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h3 id="Operadores-l%C3%B3gicos">Operadores l√≥gicos<a class="anchor-link" href="#Operadores-l%C3%B3gicos"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h3>
</section>

<section class="section-block-markdown-cell">
<p>Operador <code>e</code></p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="kc">True</span> <span class="ow">and</span> <span class="kc">True</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[166]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>True</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Operador <code>ou</code></p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="kc">True</span> <span class="ow">or</span> <span class="kc">False</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[167]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>True</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Operador <code>not</code></p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="ow">not</span> <span class="kc">False</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[168]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>True</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h3 id="3.4.-Operadores-de-identidade">3.4. Operadores de identidade<a class="anchor-link" href="#3.4.-Operadores-de-identidade"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h3>
</section>

<section class="section-block-markdown-cell">
<p>Operador <code>is</code></p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="mf">5.3</span> <span class="ow">is</span> <span class="mf">5.3</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[169]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>True</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Operador <code>n√£o √©</code></p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="mf">5.3</span> <span class="ow">is</span> <span class="ow">not</span> <span class="mi">5</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[170]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>True</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h3 id="3.5.-Operadores-de-associa%C3%A7%C3%A3o">3.5. Operadores de associa√ß√£o<a class="anchor-link" href="#3.5.-Operadores-de-associa%C3%A7%C3%A3o"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h3>
</section>

<section class="section-block-markdown-cell">
<p>Operador <code>in</code></p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">x</span> <span class="o">=</span> <span class="p">[</span><span class="s2">"apple"</span><span class="p">,</span> <span class="s2">"banana"</span><span class="p">]</span>

<span class="s2">"banana"</span> <span class="ow">in</span> <span class="n">x</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[171]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>True</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Operador "Not in</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">x</span> <span class="o">=</span> <span class="p">[</span><span class="s2">"apple"</span><span class="p">,</span> <span class="s2">"banana"</span><span class="p">]</span>

<span class="s2">"orange"</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">x</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[172]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>True</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h3 id="3.6.-Operadores-bit-a-bit">3.6. Operadores bit a bit<a class="anchor-link" href="#3.6.-Operadores-bit-a-bit"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h3>
</section>

<section class="section-block-markdown-cell">
<p>Operador AND <code>&amp;</code></p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">a</span> <span class="o">=</span> <span class="mi">60</span>            <span class="c1"># 60 = 0011 1100 </span>
<span class="n">b</span> <span class="o">=</span> <span class="mi">13</span>            <span class="c1"># 13 = 0000 1101 </span>

<span class="n">c</span> <span class="o">=</span> <span class="n">a</span> <span class="o">&amp;</span> <span class="n">b</span><span class="p">;</span>        <span class="c1"># 12 = 0000 1100</span>
<span class="n">c</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[173]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>12</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Operador OR <code>|</code></p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">a</span> <span class="o">=</span> <span class="mi">60</span>            <span class="c1"># 60 = 0011 1100 </span>
<span class="n">b</span> <span class="o">=</span> <span class="mi">13</span>            <span class="c1"># 13 = 0000 1101 </span>

<span class="n">c</span> <span class="o">=</span> <span class="n">a</span> <span class="o">|</span> <span class="n">b</span><span class="p">;</span>        <span class="c1"># 61 = 0011 1101</span>
<span class="n">c</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[174]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>61</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Operador XOR <code>^</code></p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">a</span> <span class="o">=</span> <span class="mi">60</span>            <span class="c1"># 60 = 0011 1100 </span>
<span class="n">b</span> <span class="o">=</span> <span class="mi">13</span>            <span class="c1"># 13 = 0000 1101 </span>

<span class="n">c</span> <span class="o">=</span> <span class="n">a</span> <span class="o">^</span> <span class="n">b</span><span class="p">;</span>        <span class="c1"># 49 = 0011 0001</span>
<span class="n">c</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[175]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>49</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Operador NOT <code>~</code></p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">a</span> <span class="o">=</span> <span class="mi">60</span>            <span class="c1"># 60 = 0011 1100 </span>

<span class="n">c</span> <span class="o">=</span> <span class="o">~</span><span class="n">a</span><span class="p">;</span>           <span class="c1"># -61 = 1100 0011</span>
<span class="n">c</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[176]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>-61</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Operador de deslocamento √† esquerda <code>&lt;&lt;</code> operador</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">a</span> <span class="o">=</span> <span class="mi">60</span>            <span class="c1"># 60 = 0011 1100 </span>

<span class="n">c</span> <span class="o">=</span> <span class="n">a</span> <span class="o">&lt;&lt;</span> <span class="mi">2</span><span class="p">;</span>       <span class="c1"># 240 = 1111 0000</span>
<span class="n">c</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[177]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>240</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Operador shift right <code>&gt;&gt;&gt;</code> operador</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">a</span> <span class="o">=</span> <span class="mi">60</span>            <span class="c1"># 60 = 0011 1100 </span>

<span class="n">c</span> <span class="o">=</span> <span class="n">a</span> <span class="o">&gt;&gt;</span> <span class="mi">2</span><span class="p">;</span>       <span class="c1"># 15 = 0000 1111</span>
<span class="n">c</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[178]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>15</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h3 id="3.7.-Operadores-de-atribui%C3%A7%C3%A3o">3.7. Operadores de atribui√ß√£o<a class="anchor-link" href="#3.7.-Operadores-de-atribui%C3%A7%C3%A3o"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h3>
</section>

<section class="section-block-markdown-cell">
<p>Operador <code>=</code></p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">a</span> <span class="o">=</span> <span class="mi">5</span>
<span class="n">a</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[179]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>5</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Operador <code>+=</code>. <code>x += y</code> √© equivalente a <code>x = x + y</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">a</span> <span class="o">+=</span> <span class="mi">5</span>
<span class="n">a</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[180]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>10</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Operador <code>-=</code>. <code>x -= y</code> √© equivalente a `x = x - y</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">a</span> <span class="o">-=</span> <span class="mi">5</span>
<span class="n">a</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[181]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>5</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Operador <code>*=</code>. <code>x *= y</code> √© equivalente a `x = x * y</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">a</span> <span class="o">*=</span> <span class="mi">3</span>
<span class="n">a</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[182]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>15</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Operador <code>/=</code>. <code>x /= y</code> √© equivalente a `x = x / y</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">a</span> <span class="o">/=</span> <span class="mi">3</span>
<span class="n">a</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[183]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>5.0</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Operador <code>%=</code>. <code>x %= y</code> √© equivalente a `x = x % y</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">a</span> <span class="o">=</span> <span class="mi">25</span>
<span class="n">a</span> <span class="o">%=</span> <span class="mi">2</span>
<span class="n">a</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[184]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>1</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Operador <code>//=</code>. <code>x //= y</code> √© equivalente a `x = x // y</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">a</span> <span class="o">=</span> <span class="mi">25</span>
<span class="n">a</span> <span class="o">//=</span> <span class="mi">2</span>
<span class="n">a</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[185]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>12</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Operador <code>**=</code>. <code>x **= y</code> √© equivalente a `x = x ** y</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">a</span> <span class="o">=</span> <span class="mi">5</span>
<span class="n">a</span> <span class="o">**=</span> <span class="mi">2</span>
<span class="n">a</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[186]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>25</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Operador <code>&amp;=</code>. <code>x &amp;= y</code> √© equivalente a `x = x &amp; y</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">a</span> <span class="o">=</span> <span class="mi">60</span>            <span class="c1"># 60 = 0011 1100 </span>
<span class="n">b</span> <span class="o">=</span> <span class="mi">13</span>            <span class="c1"># 13 = 0000 1101 </span>

<span class="n">a</span> <span class="o">&amp;=</span> <span class="n">b</span><span class="p">;</span>           <span class="c1"># 12 = 0000 1100</span>
<span class="n">a</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[187]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>12</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Operador <code>|=</code>. <code>x |= y</code> √© equivalente a `x = x | y</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">a</span> <span class="o">=</span> <span class="mi">60</span>            <span class="c1"># 60 = 0011 1100 </span>
<span class="n">b</span> <span class="o">=</span> <span class="mi">13</span>            <span class="c1"># 13 = 0000 1101 </span>

<span class="n">a</span> <span class="o">|=</span> <span class="n">b</span><span class="p">;</span>           <span class="c1"># 61 = 0011 1101</span>
<span class="n">a</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[188]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>61</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Operador <code>^=</code>. <code>x ^= y</code> √© equivalente a `x = x ^ y</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">a</span> <span class="o">=</span> <span class="mi">60</span>            <span class="c1"># 60 = 0011 1100 </span>
<span class="n">b</span> <span class="o">=</span> <span class="mi">13</span>            <span class="c1"># 13 = 0000 1101 </span>

<span class="n">a</span> <span class="o">^=</span> <span class="n">b</span><span class="p">;</span>           <span class="c1"># 49 = 0011 0001</span>
<span class="n">a</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[189]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>49</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Operador <code>&gt;&gt;=</code>. <code>x &gt;&gt;= y</code> √© equivalente a `x = x &gt;&gt; y</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">a</span> <span class="o">=</span> <span class="mi">60</span>            <span class="c1"># 60 = 0011 1100 </span>

<span class="n">a</span> <span class="o">&lt;&lt;=</span> <span class="mi">2</span><span class="p">;</span>          <span class="c1"># 240 = 1111 0000</span>
<span class="n">a</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[190]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>240</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Operador <code>&lt;&lt;=</code>. <code>x &lt;&lt;= y</code> √© equivalente a `x = x &lt;&lt; y</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">a</span> <span class="o">=</span> <span class="mi">60</span>            <span class="c1"># 60 = 0011 1100 </span>

<span class="n">a</span> <span class="o">&gt;&gt;=</span> <span class="mi">2</span><span class="p">;</span>          <span class="c1"># 15 = 0000 1111</span>
<span class="n">a</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[191]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>15</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h2 id="Controle-de-fluxo">Controle de fluxo<a class="anchor-link" href="#Controle-de-fluxo"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h2>
</section>

<section class="section-block-markdown-cell">
<p>Para poder usar as ferramentas de controle de fluxo, √© necess√°rio adicionar a instru√ß√£o, dois pontos <code>:</code> e, em uma nova linha, escrever o c√≥digo com indenta√ß√£o</p>
<p>Diferentemente de outras linguagens, o Python requer indenta√ß√£o (adi√ß√£o de espa√ßo em branco) para definir o c√≥digo dentro de uma ferramenta de fluxo de controle.</p>
</section>

<section class="section-block-markdown-cell">
<h3 id="Se">Se<a class="anchor-link" href="#Se"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h3>
</section>

<section class="section-block-markdown-cell">
<p>Usando <code>if</code>, podemos criar condi√ß√µes</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="s1">'MaximoFN'</span><span class="p">)</span> <span class="o">==</span> <span class="mi">8</span><span class="p">:</span>
  <span class="nb">print</span><span class="p">(</span><span class="s1">'MaximoFN tiene 8 caracteres'</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>MaximoFN tiene 8 caracteres
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Se quisermos criar mais de uma condi√ß√£o, podemos usar <code>elif</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="s1">'MaximoFN'</span><span class="p">)</span> <span class="o">&lt;</span> <span class="mi">8</span><span class="p">:</span>
  <span class="nb">print</span><span class="p">(</span><span class="s1">'MaximoFN tiene menos de 8 caracteres'</span><span class="p">)</span>
<span class="k">elif</span> <span class="nb">len</span><span class="p">(</span><span class="s1">'MaximoFN'</span><span class="p">)</span> <span class="o">==</span> <span class="mi">8</span><span class="p">:</span>
  <span class="nb">print</span><span class="p">(</span><span class="s1">'MaximoFN tiene 8 caracteres'</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>MaximoFN tiene 8 caracteres
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Se quisermos que algo seja executado se nenhuma das condi√ß√µes acima for atendida, podemos usar <code>else</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="s1">'MaximoFN'</span><span class="p">)</span> <span class="o">&lt;</span> <span class="mi">8</span><span class="p">:</span>
  <span class="nb">print</span><span class="p">(</span><span class="s1">'MaximoFN tiene menos de 8 caracteres'</span><span class="p">)</span>
<span class="k">elif</span> <span class="nb">len</span><span class="p">(</span><span class="s1">'MaximoFN'</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">8</span><span class="p">:</span>
  <span class="nb">print</span><span class="p">(</span><span class="s1">'MaximoFN tiene m√°s de 8 caracteres'</span><span class="p">)</span>
<span class="k">else</span><span class="p">:</span>
  <span class="nb">print</span><span class="p">(</span><span class="s1">'MaximoFN tiene 8 caracteres'</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>MaximoFN tiene 8 caracteres
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Se quisermos escrever tudo em uma √∫nica linha</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="s1">'MaximoFN'</span><span class="p">)</span> <span class="o">==</span> <span class="mi">8</span><span class="p">:</span> <span class="nb">print</span><span class="p">(</span><span class="s1">'MaximoFN tiene 8 caracteres'</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>MaximoFN tiene 8 caracteres
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>O mesmo acontece se quisermos escrever tudo em uma linha, mas com v√°rias condi√ß√µes</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="nb">print</span><span class="p">(</span><span class="s1">'MaximoFN tiene menos de 8 caracteres'</span><span class="p">)</span> <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="s1">'MaximoFN'</span><span class="p">)</span> <span class="o">&lt;</span> <span class="mi">8</span> <span class="k">else</span> <span class="nb">print</span><span class="p">(</span><span class="s1">'MaximoFN tiene m√°s de 8 caracteres'</span><span class="p">)</span> <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="s1">'MaximoFN'</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">8</span> <span class="k">else</span> <span class="nb">print</span><span class="p">(</span><span class="s1">'MaximoFN tiene 8 caracteres'</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>MaximoFN tiene 8 caracteres
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Se, por exemplo, quisermos criar a estrutura <code>if</code>, mas n√£o quisermos codificar uma das condi√ß√µes no momento, podemos usar <code>pass</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="s1">'MaximoFN'</span><span class="p">)</span> <span class="o">&lt;</span> <span class="mi">8</span><span class="p">:</span>
  <span class="nb">print</span><span class="p">(</span><span class="s1">'MaximoFN tiene menos de 8 caracteres'</span><span class="p">)</span>
<span class="k">elif</span> <span class="nb">len</span><span class="p">(</span><span class="s1">'MaximoFN'</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">8</span><span class="p">:</span>
  <span class="k">pass</span>
<span class="k">else</span><span class="p">:</span>
  <span class="nb">print</span><span class="p">(</span><span class="s1">'MaximoFN tiene 8 caracteres'</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>MaximoFN tiene 8 caracteres
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h3 id="4.2.-enquanto">4.2. enquanto<a class="anchor-link" href="#4.2.-enquanto"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h3>
</section>

<section class="section-block-markdown-cell">
<p>O loop <code>while</code> √© executado enquanto a condi√ß√£o for <code>True</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">i</span> <span class="o">=</span> <span class="mi">0</span>
<span class="n">string</span> <span class="o">=</span> <span class="s1">'MaximoFN'</span>
<span class="k">while</span> <span class="nb">len</span><span class="p">(</span><span class="n">string</span><span class="p">)</span> <span class="o">&gt;</span> <span class="n">i</span><span class="p">:</span>
  <span class="nb">print</span><span class="p">(</span><span class="n">string</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">end</span><span class="o">=</span><span class="s1">''</span><span class="p">)</span>
  <span class="n">i</span> <span class="o">+=</span> <span class="mi">1</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>MaximoFN</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Se quisermos que o loop seja interrompido por alguma condi√ß√£o, usaremos <code>break</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">i</span> <span class="o">=</span> <span class="mi">0</span>
<span class="n">string</span> <span class="o">=</span> <span class="s1">'MaximoFN'</span>
<span class="k">while</span> <span class="nb">len</span><span class="p">(</span><span class="n">string</span><span class="p">)</span> <span class="o">&gt;</span> <span class="n">i</span><span class="p">:</span>
  <span class="k">if</span> <span class="n">string</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="s1">'F'</span><span class="p">:</span>
    <span class="k">break</span>
  <span class="nb">print</span><span class="p">(</span><span class="n">string</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">end</span><span class="o">=</span><span class="s1">''</span><span class="p">)</span>
  <span class="n">i</span> <span class="o">+=</span> <span class="mi">1</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>Maximo</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Se quisermos que uma das itera√ß√µes n√£o seja executada por algum motivo, usaremos <code>continue</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">i</span> <span class="o">=</span> <span class="mi">0</span>
<span class="n">string</span> <span class="o">=</span> <span class="s1">'Maximo FN'</span>
<span class="k">while</span> <span class="nb">len</span><span class="p">(</span><span class="n">string</span><span class="p">)</span> <span class="o">&gt;</span> <span class="n">i</span><span class="p">:</span>
  <span class="k">if</span> <span class="n">string</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="s1">' '</span><span class="p">:</span>
    <span class="n">i</span> <span class="o">+=</span> <span class="mi">1</span>
    <span class="k">continue</span>
  <span class="nb">print</span><span class="p">(</span><span class="n">string</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">end</span><span class="o">=</span><span class="s1">''</span><span class="p">)</span>
  <span class="n">i</span> <span class="o">+=</span> <span class="mi">1</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>MaximoFN</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Usando <code>else</code>, voc√™ pode executar um bloco de c√≥digo se a condi√ß√£o <code>while</code> n√£o for <code>True</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">i</span> <span class="o">=</span> <span class="mi">0</span>
<span class="n">string</span> <span class="o">=</span> <span class="s1">'MaximoFN'</span>

<span class="k">while</span> <span class="nb">len</span><span class="p">(</span><span class="n">string</span><span class="p">)</span> <span class="o">&gt;</span> <span class="n">i</span><span class="p">:</span>
  <span class="nb">print</span><span class="p">(</span><span class="n">string</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">end</span><span class="o">=</span><span class="s1">''</span><span class="p">)</span>
  <span class="n">i</span> <span class="o">+=</span> <span class="mi">1</span>
<span class="k">else</span><span class="p">:</span>
  <span class="nb">print</span><span class="p">(</span><span class="s2">"</span><span class="se">\n</span><span class="s2">Se ha terminado el while"</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>MaximoFN
Se ha terminado el while
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h3 id="4.3.-Para">4.3. Para<a class="anchor-link" href="#4.3.-Para"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h3>
</section>

<section class="section-block-markdown-cell">
<p>O loop <code>for</code> √© usado para executar c√≥digo durante a itera√ß√£o em uma sequ√™ncia, que pode ser qualquer elemento Python iter√°vel (<code>string</code>, <code>list</code>, <code>tuple</code>, <code>range</code>, <code>dictionary</code>, <code>set</code>).</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">string</span> <span class="o">=</span> <span class="s1">'MaximoFN'</span>

<span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">string</span><span class="p">:</span>
  <span class="nb">print</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s1">''</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>MaximoFN</pre>
</div>
</div>
</div>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">lista</span> <span class="o">=</span> <span class="p">[</span><span class="s1">'M'</span><span class="p">,</span> <span class="s1">'a'</span><span class="p">,</span> <span class="s1">'x'</span><span class="p">,</span> <span class="s1">'i'</span><span class="p">,</span> <span class="s1">'m'</span><span class="p">,</span> <span class="s1">'o'</span><span class="p">,</span> <span class="s1">'F'</span><span class="p">,</span> <span class="s1">'N'</span><span class="p">]</span>

<span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">lista</span><span class="p">:</span>
  <span class="nb">print</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s1">''</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>MaximoFN</pre>
</div>
</div>
</div>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">tupla</span> <span class="o">=</span> <span class="p">(</span><span class="s1">'M'</span><span class="p">,</span> <span class="s1">'a'</span><span class="p">,</span> <span class="s1">'x'</span><span class="p">,</span> <span class="s1">'i'</span><span class="p">,</span> <span class="s1">'m'</span><span class="p">,</span> <span class="s1">'o'</span><span class="p">,</span> <span class="s1">'F'</span><span class="p">,</span> <span class="s1">'N'</span><span class="p">)</span>

<span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">tupla</span><span class="p">:</span>
  <span class="nb">print</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s1">''</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>MaximoFN</pre>
</div>
</div>
</div>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">string</span> <span class="o">=</span> <span class="s1">'MaximoFN'</span>

<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">string</span><span class="p">)):</span>
  <span class="nb">print</span><span class="p">(</span><span class="n">string</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">end</span><span class="o">=</span><span class="s1">''</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>MaximoFN</pre>
</div>
</div>
</div>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">diccionario</span> <span class="o">=</span> <span class="p">{opening_brace}</span>
  <span class="s2">"letra1"</span><span class="p">:</span> <span class="s2">"M"</span><span class="p">,</span>
  <span class="s2">"letra2"</span><span class="p">:</span> <span class="s2">"a"</span><span class="p">,</span>
  <span class="s2">"letra3"</span><span class="p">:</span> <span class="s2">"x"</span><span class="p">,</span>
  <span class="s2">"letra4"</span><span class="p">:</span> <span class="s2">"i"</span><span class="p">,</span>
  <span class="s2">"letra5"</span><span class="p">:</span> <span class="s2">"m"</span><span class="p">,</span>
  <span class="s2">"letra6"</span><span class="p">:</span> <span class="s2">"o"</span><span class="p">,</span>
  <span class="s2">"letra7"</span><span class="p">:</span> <span class="s2">"F"</span><span class="p">,</span>
  <span class="s2">"letra8"</span><span class="p">:</span> <span class="s2">"N"</span><span class="p">,</span>
<span class="p">}</span>

<span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">diccionario</span><span class="o">.</span><span class="n">values</span><span class="p">():</span>
  <span class="nb">print</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s1">''</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>MaximoFN</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Tamb√©m √© poss√≠vel iterar pelos <code>set</code>s, mas como eles s√£o elementos n√£o ordenados, n√£o h√° controle sobre a ordem de execu√ß√£o.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">set_</span> <span class="o">=</span> <span class="p">{opening_brace}</span><span class="s1">'M'</span><span class="p">,</span> <span class="s1">'a'</span><span class="p">,</span> <span class="s1">'x'</span><span class="p">,</span> <span class="s1">'i'</span><span class="p">,</span> <span class="s1">'m'</span><span class="p">,</span> <span class="s1">'o'</span><span class="p">,</span> <span class="s1">'F'</span><span class="p">,</span> <span class="s1">'N'</span><span class="p">}</span>

<span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">set_</span><span class="p">:</span>
  <span class="nb">print</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s1">''</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>NximoaMF</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Se quisermos que o loop seja interrompido por alguma condi√ß√£o, usaremos <code>break</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">string</span> <span class="o">=</span> <span class="s1">'MaximoFN'</span>

<span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">string</span><span class="p">:</span>
  <span class="k">if</span> <span class="n">x</span> <span class="o">==</span> <span class="s1">'F'</span><span class="p">:</span>
    <span class="k">break</span>
  <span class="nb">print</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s1">''</span><span class="p">)</span> 
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>Maximo</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Se quisermos que uma das itera√ß√µes n√£o seja executada por algum motivo, usaremos <code>continue</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">string</span> <span class="o">=</span> <span class="s1">'Maximo FN'</span>

<span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">string</span><span class="p">:</span>
  <span class="k">if</span> <span class="n">x</span> <span class="o">==</span> <span class="s1">' '</span><span class="p">:</span>
    <span class="k">continue</span>
  <span class="nb">print</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s1">''</span><span class="p">)</span> 
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>MaximoFN</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Usando <code>else</code>, voc√™ pode executar um bloco de c√≥digo se a condi√ß√£o <code>while</code> n√£o for <code>True</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">string</span> <span class="o">=</span> <span class="s1">'MaximoFN'</span>

<span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">string</span><span class="p">:</span>
  <span class="nb">print</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s1">''</span><span class="p">)</span> 
<span class="k">else</span><span class="p">:</span>
  <span class="nb">print</span><span class="p">(</span><span class="s2">"</span><span class="se">\n</span><span class="s2">Se ha terminado el for"</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>MaximoFN
Se ha terminado el for
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Se, por exemplo, quisermos criar a estrutura do <code>for</code>, mas n√£o quisermos, no momento, codificar o interior, poderemos usar o <code>pass</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">string</span> <span class="o">=</span> <span class="s1">'MaximoFN'</span>
<span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">string</span><span class="p">:</span>
  <span class="k">pass</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">'Interior del for no codificado'</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>Interior del for no codificado
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h2 id="5.-fun%C3%A7%C3%B5es">5. fun√ß√µes<a class="anchor-link" href="#5.-fun%C3%A7%C3%B5es"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h2>
</section>

<section class="section-block-markdown-cell">
<p>Uma fun√ß√£o √© um trecho de c√≥digo que pode ser executado quantas vezes voc√™ quiser. Ela pode receber argumentos e retornar dados como resultado.</p>
</section>

<section class="section-block-markdown-cell">
<p>Para definir uma fun√ß√£o, voc√™ come√ßa com a palavra reservada <code>def</code> seguida pelo nome da fun√ß√£o, colchetes <code>()</code>, dois pontos <code>:</code> e, em seguida, em uma nova linha, recua o c√≥digo da fun√ß√£o</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="k">def</span> <span class="nf">funcion</span><span class="p">():</span>
  <span class="nb">print</span><span class="p">(</span><span class="s1">'MaximoFN'</span><span class="p">)</span>
</pre></div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Para chamar a fun√ß√£o, √© necess√°rio apenas escrever seu nome</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">funcion</span><span class="p">()</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>MaximoFN
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>As fun√ß√µes podem receber quantos argumentos voc√™ quiser, entre par√™nteses e separados por v√≠rgulas.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="k">def</span> <span class="nf">funcion</span><span class="p">(</span><span class="n">string1</span><span class="p">,</span> <span class="n">string2</span><span class="p">):</span>
  <span class="nb">print</span><span class="p">(</span><span class="n">string1</span> <span class="o">+</span> <span class="s1">' '</span> <span class="o">+</span> <span class="n">string2</span><span class="p">)</span>

<span class="n">funcion</span><span class="p">(</span><span class="s2">"Hola"</span><span class="p">,</span> <span class="s2">"MaximoFN"</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>Hola MaximoFN
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Ao chamar a fun√ß√£o, voc√™ deve passar o mesmo n√∫mero de argumentos declarados; se voc√™ passar mais ou menos, receber√° um erro.</p>
<p>Se voc√™ n√£o souber os argumentos que a fun√ß√£o receber√°, poder√° usar <code>*args</code>, ou seja, ao colocar um <code>*</code> antes dos argumentos, voc√™ indica que o n√∫mero de argumentos √© livre.</p>
<p>Isso √© feito passando uma <code>tupla</code> (lembre-se, ela √© imut√°vel) com os argumentos</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="k">def</span> <span class="nf">funcion</span><span class="p">(</span><span class="o">*</span><span class="n">argumentos</span><span class="p">):</span>
  <span class="n">numero_argumentos</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">argumentos</span><span class="p">)</span>

  <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">numero_argumentos</span><span class="p">):</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">argumentos</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">end</span><span class="o">=</span><span class="s1">' '</span><span class="p">)</span>

<span class="n">funcion</span><span class="p">(</span><span class="s2">"funcion"</span><span class="p">,</span> <span class="s2">"con"</span><span class="p">,</span> <span class="s2">"varios"</span><span class="p">,</span> <span class="s2">"argumentos"</span><span class="p">,</span> <span class="s2">"sin"</span><span class="p">,</span> <span class="s2">"especificar"</span><span class="p">,</span> <span class="s2">"cuantos"</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>funcion con varios argumentos sin especificar cuantos </pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Caso n√£o saibamos a ordem dos argumentos de uma fun√ß√£o, podemos indicar o argumento que queremos passar para ela, indicando seu nome</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="k">def</span> <span class="nf">funcion</span><span class="p">(</span><span class="n">argumento1</span><span class="p">,</span> <span class="n">argumento2</span><span class="p">,</span> <span class="n">argumento3</span><span class="p">):</span>
  <span class="nb">print</span><span class="p">(</span><span class="n">argumento1</span> <span class="o">+</span> <span class="s1">' '</span><span class="o">+</span> <span class="n">argumento2</span> <span class="o">+</span> <span class="s1">' '</span> <span class="o">+</span> <span class="n">argumento3</span><span class="p">)</span>

<span class="n">funcion</span><span class="p">(</span><span class="n">argumento3</span> <span class="o">=</span> <span class="s2">"MaximoFN"</span><span class="p">,</span> <span class="n">argumento1</span> <span class="o">=</span> <span class="s2">"Blog"</span><span class="p">,</span> <span class="n">argumento2</span> <span class="o">=</span> <span class="s2">"de"</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>Blog de MaximoFN
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Caso queira passar os argumentos com seus nomes, mas n√£o saiba quantos argumentos passar, voc√™ pode usar <code>**kargs</code>. Nesse caso, um dicion√°rio de argumentos ser√° passado para ele</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="k">def</span> <span class="nf">funcion</span><span class="p">(</span><span class="o">**</span><span class="n">kargumentos</span><span class="p">):</span>
  <span class="nb">print</span><span class="p">(</span><span class="s2">"Autor del blog: "</span> <span class="o">+</span> <span class="n">kargumentos</span><span class="p">[</span><span class="s2">"autor"</span><span class="p">])</span>

<span class="n">funcion</span><span class="p">(</span><span class="n">blog</span> <span class="o">=</span> <span class="s2">"Blog"</span><span class="p">,</span> <span class="n">pertenencia</span> <span class="o">=</span> <span class="s2">"de"</span><span class="p">,</span> <span class="n">autor</span> <span class="o">=</span> <span class="s2">"MaximoFN"</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>Autor del blog: MaximoFN
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Se quisermos que um argumento tenha um valor padr√£o, podemos indic√°-lo entre os par√™nteses da fun√ß√£o. Dessa forma, se no momento da chamada da fun√ß√£o esse argumento n√£o for passado, ele ter√° o valor padr√£o na fun√ß√£o</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="k">def</span> <span class="nf">funcion</span><span class="p">(</span><span class="n">argumento1</span><span class="p">,</span> <span class="n">argumento2</span><span class="p">,</span> <span class="n">argumento3</span> <span class="o">=</span> <span class="s2">"MaximoFN"</span><span class="p">):</span>
  <span class="nb">print</span><span class="p">(</span><span class="n">argumento1</span> <span class="o">+</span> <span class="s1">' '</span><span class="o">+</span> <span class="n">argumento2</span> <span class="o">+</span> <span class="s1">' '</span> <span class="o">+</span> <span class="n">argumento3</span><span class="p">)</span>

<span class="n">funcion</span><span class="p">(</span><span class="s2">"Blog"</span><span class="p">,</span> <span class="s2">"de"</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>Blog de MaximoFN
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Voc√™ pode passar qualquer tipo de dados como argumento; por exemplo, se voc√™ passar uma <code>lista</code> como argumento, dentro da fun√ß√£o, esse argumento ser√° tratado como uma <code>lista</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="k">def</span> <span class="nf">funcion</span><span class="p">(</span><span class="n">argumento</span><span class="p">):</span>
  <span class="n">longitud_lista</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">argumento</span><span class="p">)</span>

  <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">longitud_lista</span><span class="p">):</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">argumento</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">end</span><span class="o">=</span><span class="s1">' '</span><span class="p">)</span>

<span class="n">funcion</span><span class="p">([</span><span class="s2">"Blog"</span><span class="p">,</span> <span class="s2">"de"</span><span class="p">,</span> <span class="s2">"MaximoFN"</span><span class="p">])</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>Blog de MaximoFN </pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>As fun√ß√µes podem retornar dados, o que √© feito pela palavra reservada <code>return</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="k">def</span> <span class="nf">funcion</span><span class="p">(</span><span class="n">argumento</span><span class="p">):</span>
  <span class="n">longitud_lista</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">argumento</span><span class="p">)</span>
  <span class="n">string</span> <span class="o">=</span> <span class="s2">""</span>

  <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">longitud_lista</span><span class="p">):</span>
    <span class="n">string</span> <span class="o">=</span> <span class="n">string</span> <span class="o">+</span> <span class="n">argumento</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">+</span> <span class="s1">' '</span>

  <span class="k">return</span> <span class="n">string</span>

<span class="nb">print</span><span class="p">(</span><span class="n">funcion</span><span class="p">([</span><span class="s2">"Blog"</span><span class="p">,</span> <span class="s2">"de"</span><span class="p">,</span> <span class="s2">"MaximoFN"</span><span class="p">]))</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>Blog de MaximoFN 
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Pode retornar mais de uma parte dos dados</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="k">def</span> <span class="nf">funcion</span><span class="p">(</span><span class="n">argumento</span><span class="p">):</span>
  <span class="n">longitud_lista</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">argumento</span><span class="p">)</span>
  <span class="n">string0</span> <span class="o">=</span> <span class="n">argumento</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
  <span class="n">string1</span> <span class="o">=</span> <span class="n">argumento</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
  <span class="n">string2</span> <span class="o">=</span> <span class="n">argumento</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span>

  <span class="k">return</span> <span class="n">string0</span><span class="p">,</span> <span class="n">string1</span><span class="p">,</span> <span class="n">string2</span>

<span class="n">dato0</span><span class="p">,</span> <span class="n">dato1</span><span class="p">,</span> <span class="n">dato2</span> <span class="o">=</span> <span class="n">funcion</span><span class="p">([</span><span class="s2">"Blog"</span><span class="p">,</span> <span class="s2">"de"</span><span class="p">,</span> <span class="s2">"MaximoFN"</span><span class="p">])</span>

<span class="nb">print</span><span class="p">(</span><span class="n">dato0</span> <span class="o">+</span> <span class="s1">' '</span> <span class="o">+</span> <span class="n">dato1</span> <span class="o">+</span> <span class="s1">' '</span> <span class="o">+</span> <span class="n">dato2</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>Blog de MaximoFN
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Se n√£o estivermos interessados em um dos dados retornados, podemos ignor√°-lo com <code>_</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="k">def</span> <span class="nf">funcion</span><span class="p">(</span><span class="n">argumento</span><span class="p">):</span>
  <span class="n">longitud_lista</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">argumento</span><span class="p">)</span>
  <span class="n">string0</span> <span class="o">=</span> <span class="n">argumento</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
  <span class="n">string1</span> <span class="o">=</span> <span class="n">argumento</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
  <span class="n">string2</span> <span class="o">=</span> <span class="n">argumento</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span>

  <span class="k">return</span> <span class="n">string0</span><span class="p">,</span> <span class="n">string1</span><span class="p">,</span> <span class="n">string2</span>

<span class="n">_</span><span class="p">,</span> <span class="n">_</span><span class="p">,</span> <span class="n">dato_de_interes</span> <span class="o">=</span> <span class="n">funcion</span><span class="p">([</span><span class="s2">"Blog"</span><span class="p">,</span> <span class="s2">"de"</span><span class="p">,</span> <span class="s2">"MaximoFN"</span><span class="p">])</span>

<span class="nb">print</span><span class="p">(</span><span class="n">dato_de_interes</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>MaximoFN
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Se, por exemplo, quisermos criar a estrutura da fun√ß√£o, mas n√£o quisermos codificar a parte interna no momento, poderemos usar <code>pass</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="k">def</span> <span class="nf">funcion</span><span class="p">():</span>
  <span class="k">pass</span>

<span class="n">funcion</span><span class="p">()</span>
</pre></div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Uma fun√ß√£o pode chamar a si mesma, o que √© chamado de recurs√£o de fun√ß√£o ou recurs√£o de fun√ß√£o.</p>
<p>Por exemplo, podemos usar essa qualidade para calcular o fatorial de um n√∫mero</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="k">def</span> <span class="nf">factorial</span><span class="p">(</span><span class="n">n</span><span class="p">):</span>
  <span class="k">if</span> <span class="n">n</span> <span class="o">==</span> <span class="mi">0</span> <span class="ow">or</span> <span class="n">n</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
    <span class="k">return</span> <span class="mi">1</span>
  <span class="k">else</span><span class="p">:</span>
    <span class="k">return</span> <span class="n">n</span> <span class="o">*</span> <span class="n">factorial</span><span class="p">(</span><span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>

<span class="n">factorial</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[34]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>120</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h3 id="5.1.-Fun%C3%A7%C3%B5es-incorporadas">5.1. Fun√ß√µes incorporadas<a class="anchor-link" href="#5.1.-Fun%C3%A7%C3%B5es-incorporadas"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h3>
</section>

<section class="section-block-markdown-cell">
<p>H√° v√°rias fun√ß√µes j√° definidas no Python que podem ser usadas, como a fun√ß√£o <code>abs()</code>, que retorna o valor absoluto</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="nb">abs</span><span class="p">(</span><span class="o">-</span><span class="mi">5</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[35]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>5</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>A seguir, uma lista dessas fun√ß√µes</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="kn">import</span> <span class="nn">builtins</span>

<span class="nb">dir</span><span class="p">(</span><span class="n">builtins</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[36]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>['ArithmeticError',
 'AssertionError',
 'AttributeError',
 'BaseException',
 'BlockingIOError',
 'BrokenPipeError',
 'BufferError',
 'BytesWarning',
 'ChildProcessError',
 'ConnectionAbortedError',
 'ConnectionError',
 'ConnectionRefusedError',
 'ConnectionResetError',
 'DeprecationWarning',
 'EOFError',
 'Ellipsis',
 'EnvironmentError',
 'Exception',
 'False',
 'FileExistsError',
 'FileNotFoundError',
 'FloatingPointError',
 'FutureWarning',
 'GeneratorExit',
 'IOError',
 'ImportError',
 'ImportWarning',
 'IndentationError',
 'IndexError',
 'InterruptedError',
 'IsADirectoryError',
 'KeyError',
 'KeyboardInterrupt',
 'LookupError',
 'MemoryError',
 'ModuleNotFoundError',
 'NameError',
 'None',
 'NotADirectoryError',
 'NotImplemented',
 'NotImplementedError',
 'OSError',
 'OverflowError',
 'PendingDeprecationWarning',
 'PermissionError',
 'ProcessLookupError',
 'RecursionError',
 'ReferenceError',
 'ResourceWarning',
 'RuntimeError',
 'RuntimeWarning',
 'StopAsyncIteration',
 'StopIteration',
 'SyntaxError',
 'SyntaxWarning',
 'SystemError',
 'SystemExit',
 'TabError',
 'TimeoutError',
 'True',
 'TypeError',
 'UnboundLocalError',
 'UnicodeDecodeError',
 'UnicodeEncodeError',
 'UnicodeError',
 'UnicodeTranslateError',
 'UnicodeWarning',
 'UserWarning',
 'ValueError',
 'Warning',
 'ZeroDivisionError',
 '__IPYTHON__',
 '__build_class__',
 '__debug__',
 '__doc__',
 '__import__',
 '__loader__',
 '__name__',
 '__package__',
 '__spec__',
 'abs',
 'all',
 'any',
 'ascii',
 'bin',
 'bool',
 'breakpoint',
 'bytearray',
 'bytes',
 'callable',
 'chr',
 'classmethod',
 'compile',
 'complex',
 'copyright',
 'credits',
 'delattr',
 'dict',
 'dir',
 'display',
 'divmod',
 'enumerate',
 'eval',
 'exec',
 'filter',
 'float',
 'format',
 'frozenset',
 'get_ipython',
 'getattr',
 'globals',
 'hasattr',
 'hash',
 'help',
 'hex',
 'id',
 'input',
 'int',
 'isinstance',
 'issubclass',
 'iter',
 'len',
 'license',
 'list',
 'locals',
 'map',
 'max',
 'memoryview',
 'min',
 'next',
 'object',
 'oct',
 'open',
 'ord',
 'pow',
 'print',
 'property',
 'range',
 'repr',
 'reversed',
 'round',
 'set',
 'setattr',
 'slice',
 'sorted',
 'staticmethod',
 'str',
 'sum',
 'super',
 'tuple',
 'type',
 'vars',
 'zip']</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h3 id="5.2.-Documenta%C3%A7%C3%A3o-de-uma-fun%C3%A7%C3%A3o">5.2. Documenta√ß√£o de uma fun√ß√£o<a class="anchor-link" href="#5.2.-Documenta%C3%A7%C3%A3o-de-uma-fun%C3%A7%C3%A3o"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h3>
</section>

<section class="section-block-markdown-cell">
<p>Uma explica√ß√£o de uma fun√ß√£o que criamos pode ser adicionada como um coment√°rio no in√≠cio da fun√ß√£o, de modo que, quando chamarmos a fun√ß√£o <code>built in</code> <code>help()</code>, ela mostrar√° essa explica√ß√£o.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="k">def</span> <span class="nf">funcion</span><span class="p">():</span>
  <span class="s2">"Esta es la explicaci√≥n de la funci√≥n"</span>

  <span class="kc">None</span>

<span class="n">help</span><span class="p">(</span><span class="n">funcion</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>Help on function funcion in module __main__:

funcion()
    Esta es la explicaci√≥n de la funci√≥n

</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Outra op√ß√£o para ver a explica√ß√£o da fun√ß√£o √© usar o m√©todo <code>__doc__</code> da fun√ß√£o</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">funcion</span><span class="o">.</span><span class="vm">__doc__</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[38]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>'Esta es la explicaci√≥n de la funci√≥n'</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h3 id="5.3.-Decoradores">5.3. Decoradores<a class="anchor-link" href="#5.3.-Decoradores"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h3>
</section>

<section class="section-block-markdown-cell">
<p>Os decoradores s√£o um recurso do Python que permite adicionar novos recursos a uma fun√ß√£o.</p>
<p>Uma fun√ß√£o decoradora √© criada com outra fun√ß√£o como par√¢metro. Em seguida, a fun√ß√£o decoradora adiciona o novo recurso √† fun√ß√£o que recebe.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="k">def</span> <span class="nf">decorador</span><span class="p">(</span><span class="n">parametro_funcion</span><span class="p">):</span>
<span class="w">  </span><span class="sd">"""Agrega barritas arriba y abajo de la funcion"""</span>

  <span class="k">def</span> <span class="nf">envoltorio</span><span class="p">():</span>
<span class="w">    </span><span class="sd">"""Aplica las barritas al texto"""</span>

    <span class="nb">print</span><span class="p">(</span><span class="s2">"=================="</span><span class="p">)</span>
    <span class="n">parametro_funcion</span><span class="p">()</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">"=================="</span><span class="p">)</span>
      
  <span class="k">return</span> <span class="n">envoltorio</span>

<span class="k">def</span> <span class="nf">funcion</span><span class="p">():</span>
  <span class="nb">print</span><span class="p">(</span><span class="s2">"MaximoFN"</span><span class="p">)</span>

<span class="n">funcion_envoltorio</span> <span class="o">=</span> <span class="n">decorador</span><span class="p">(</span><span class="n">funcion</span><span class="p">)</span>

<span class="nb">print</span><span class="p">(</span><span class="s1">'Funci√≥n sin decoradores: '</span><span class="p">)</span>
<span class="n">funcion</span><span class="p">()</span>

<span class="nb">print</span><span class="p">(</span><span class="s1">'</span><span class="se">\n</span><span class="s1">Funci√≥n con decoradores: '</span><span class="p">)</span>
<span class="n">funcion_envoltorio</span><span class="p">()</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>Funci√≥n sin decoradores: 
MaximoFN

Funci√≥n con decoradores: 
==================
MaximoFN
==================
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Mas outra maneira mais eficiente de usar decoradores √© usar <code>@</code> e o nome do decorador antes da fun√ß√£o.</p>
<p>Ou seja, primeiro o decorador √© definido e, em seguida, uma fun√ß√£o √© chamada com o decorador definido.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="k">def</span> <span class="nf">decorador2</span><span class="p">(</span><span class="n">parametro_funcion2</span><span class="p">):</span>
<span class="w">  </span><span class="sd">"""Agrega barritas arriba y abajo de la funcion"""</span>

  <span class="k">def</span> <span class="nf">envoltorio2</span><span class="p">():</span>
<span class="w">    </span><span class="sd">"""Aplica las barritas al texto"""</span>

    <span class="nb">print</span><span class="p">(</span><span class="s2">"=================="</span><span class="p">)</span>
    <span class="n">parametro_funcion2</span><span class="p">()</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">"=================="</span><span class="p">)</span>
      
  <span class="k">return</span> <span class="n">envoltorio2</span>

<span class="nd">@decorador2</span>
<span class="k">def</span> <span class="nf">funcion2</span><span class="p">():</span>
  <span class="nb">print</span><span class="p">(</span><span class="s2">"MaximoFN"</span><span class="p">)</span>

<span class="nb">print</span><span class="p">(</span><span class="s1">'Funci√≥n con decoradores: '</span><span class="p">)</span>
<span class="n">funcion2</span><span class="p">()</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>Funci√≥n con decoradores: 
==================
MaximoFN
==================
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h3 id="5.4.-*args-e-**kwargs.">5.4. <code>*args</code> e <code>**kwargs</code>.<a class="anchor-link" href="#5.4.-*args-e-**kwargs."><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h3>
</section>

<section class="section-block-markdown-cell">
<p><code>*args</code> e <code>**kwargs</code> s√£o argumentos opcionais que podem ser usados ao definir uma fun√ß√£o em Python. A sintaxe √© a seguinte:</p>
<div class="highlight"><pre><span></span><span class="k">def</span> <span class="nf">my_function</span><span class="p">(</span><span class="n">arg1</span><span class="p">,</span> <span class="n">arg2</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">):</span>
    <span class="c1"># c√≥digo de fun√ß√£o aqui</span>
</pre></div>
</section>

<section class="section-block-markdown-cell">
<h4 id="5.4.1.-*args.">5.4.1. <code>*args</code>.<a class="anchor-link" href="#5.4.1.-*args."><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h4>
</section>

<section class="section-block-markdown-cell">
<p>O <code>*args</code> √© usado para enviar um n√∫mero vari√°vel de argumentos a uma fun√ß√£o. Ao usar <code>*args</code>, voc√™ pode enviar um n√∫mero vari√°vel de argumentos para a fun√ß√£o sem precisar especificar o n√∫mero exato de argumentos de que a fun√ß√£o precisa. Os argumentos s√£o recebidos pela fun√ß√£o como uma tupla.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="k">def</span> <span class="nf">saludo</span><span class="p">(</span><span class="n">saludo</span><span class="p">,</span> <span class="o">*</span><span class="n">nombres</span><span class="p">):</span>
    <span class="k">for</span> <span class="n">nombre</span> <span class="ow">in</span> <span class="n">nombres</span><span class="p">:</span>
        <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"</span><span class="si">{opening_brace}</span><span class="n">saludo</span><span class="si">}</span><span class="s2">, </span><span class="si">{opening_brace}</span><span class="n">nombre</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>

<span class="n">saludo</span><span class="p">(</span><span class="s2">"Hola"</span><span class="p">,</span> <span class="s2">"Alicia"</span><span class="p">,</span> <span class="s2">"Roberto"</span><span class="p">,</span> <span class="s2">"Carlos"</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>Hola, Alicia
Hola, Roberto
Hola, Carlos
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h4 id="5.4.2.-**kwargs.">5.4.2. <code>**kwargs</code>.<a class="anchor-link" href="#5.4.2.-**kwargs."><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h4>
</section>

<section class="section-block-markdown-cell">
<p>O <code>**kwargs</code> √© usado da mesma forma, mas para enviar um n√∫mero vari√°vel de <code>argumentos de palavras-chave</code> a uma fun√ß√£o. Ao usar <code>**kwargs</code>, voc√™ pode enviar um n√∫mero vari√°vel de argumentos para a fun√ß√£o e especificar o valor de cada argumento usando seu nome. Os argumentos s√£o recebidos pela fun√ß√£o como um dicion√°rio.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="k">def</span> <span class="nf">saludo</span><span class="p">(</span><span class="n">saludo</span><span class="p">,</span> <span class="o">**</span><span class="n">personas</span><span class="p">):</span>
    <span class="k">for</span> <span class="n">key</span><span class="p">,</span> <span class="n">value</span> <span class="ow">in</span> <span class="n">personas</span><span class="o">.</span><span class="n">items</span><span class="p">():</span>
        <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"</span><span class="si">{opening_brace}</span><span class="n">saludo</span><span class="si">}</span><span class="s2"> </span><span class="si">{opening_brace}</span><span class="n">key</span><span class="si">}</span><span class="s2">, tu edad es </span><span class="si">{opening_brace}</span><span class="n">value</span><span class="si">}</span><span class="s2"> a√±os"</span><span class="p">)</span>

<span class="n">saludo</span><span class="p">(</span><span class="s2">"Hola"</span><span class="p">,</span> <span class="n">Juan</span><span class="o">=</span><span class="mi">22</span><span class="p">,</span> <span class="n">Maria</span><span class="o">=</span><span class="mi">32</span><span class="p">,</span> <span class="n">Pedro</span><span class="o">=</span><span class="mi">25</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>Hola Juan, tu edad es 22 a√±os
Hola Maria, tu edad es 32 a√±os
Hola Pedro, tu edad es 25 a√±os
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h2 id="6.-fun%C3%A7%C3%B5es-adicionais">6. fun√ß√µes adicionais<a class="anchor-link" href="#6.-fun%C3%A7%C3%B5es-adicionais"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h2>
</section>

<section class="section-block-markdown-cell">
<h3 id="6.1.-Fun%C3%A7%C3%B5es-*lambda">6.1. Fun√ß√µes *lambda<a class="anchor-link" href="#6.1.-Fun%C3%A7%C3%B5es-*lambda"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h3>
</section>

<section class="section-block-markdown-cell">
<p>Uma fun√ß√£o <em>call</em> √© uma pequena fun√ß√£o an√¥nima.</p>
<p>Uma fun√ß√£o <em>call</em> pode receber qualquer n√∫mero de argumentos, mas s√≥ pode ter uma express√£o.</p>
<p>As fun√ß√µes <em>lambda</em> s√£o definidas da seguinte forma:</p>
<pre><code>    argumentos lambda : express√£o
</code></pre>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">x</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">a</span> <span class="p">:</span> <span class="n">a</span> <span class="o">+</span> <span class="mi">10</span>
<span class="nb">print</span><span class="p">(</span><span class="n">x</span><span class="p">(</span><span class="mi">5</span><span class="p">))</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>15
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">x</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">,</span> <span class="n">c</span> <span class="p">:</span> <span class="n">a</span> <span class="o">+</span> <span class="n">b</span> <span class="o">+</span> <span class="n">c</span>
<span class="nb">print</span><span class="p">(</span><span class="n">x</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">2</span><span class="p">))</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>13
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>O poder do <em>lambda</em> √© melhor demonstrado quando usado como uma fun√ß√£o an√¥nima dentro de outra fun√ß√£o.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="k">def</span> <span class="nf">myfunc</span><span class="p">(</span><span class="n">n</span><span class="p">):</span>
  <span class="k">return</span> <span class="k">lambda</span> <span class="n">a</span> <span class="p">:</span> <span class="n">a</span> <span class="o">*</span> <span class="n">n</span>

<span class="n">mydoubler</span> <span class="o">=</span> <span class="n">myfunc</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
<span class="n">mytripler</span> <span class="o">=</span> <span class="n">myfunc</span><span class="p">(</span><span class="mi">3</span><span class="p">)</span>

<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"mydoubler: </span><span class="si">{opening_brace}</span><span class="n">mydoubler</span><span class="p">(</span><span class="mi">11</span><span class="p">)</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"mytripler: </span><span class="si">{opening_brace}</span><span class="n">mytripler</span><span class="p">(</span><span class="mi">11</span><span class="p">)</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>mydoubler: 22
mytripler: 33
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h3 id="6.2.-Fun%C3%A7%C3%A3o-de-mapa">6.2. Fun√ß√£o de mapa<a class="anchor-link" href="#6.2.-Fun%C3%A7%C3%A3o-de-mapa"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h3>
</section>

<section class="section-block-markdown-cell">
<p>A fun√ß√£o <code>map</code> permite que voc√™ aplique uma fun√ß√£o a cada elemento de uma estrutura iter√°vel.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">lista</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">]</span>

<span class="k">def</span> <span class="nf">funcion_mas_1</span><span class="p">(</span><span class="n">valor</span><span class="p">):</span>
  <span class="k">return</span> <span class="n">valor</span> <span class="o">+</span> <span class="mi">1</span>

<span class="n">lista_modificada</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="nb">map</span><span class="p">(</span><span class="n">funcion_mas_1</span><span class="p">,</span> <span class="n">lista</span><span class="p">))</span>
<span class="n">lista_modificada</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[44]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>[2, 3, 4]</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Isso √© equivalente a usar a <code>compreens√£o de lista</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">lista_modificada</span> <span class="o">=</span> <span class="p">[</span><span class="n">funcion_mas_1</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">lista</span><span class="p">]</span>
<span class="n">lista_modificada</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[45]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>[2, 3, 4]</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h3 id="6.3.-Fun%C3%A7%C3%A3o-de-filtro">6.3. Fun√ß√£o de filtro<a class="anchor-link" href="#6.3.-Fun%C3%A7%C3%A3o-de-filtro"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h3>
</section>

<section class="section-block-markdown-cell">
<p>A fun√ß√£o <code>filter</code> permite que voc√™ selecione os elementos de uma estrutura iter√°vel que atendam a uma caracter√≠stica.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">lista</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">7</span><span class="p">]</span>

<span class="k">def</span> <span class="nf">esPar</span><span class="p">(</span><span class="n">valor</span><span class="p">):</span>
  <span class="k">return</span> <span class="n">valor</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span>

<span class="n">lista_filtrada</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="nb">filter</span><span class="p">(</span><span class="n">esPar</span><span class="p">,</span> <span class="n">lista</span><span class="p">))</span>
<span class="n">lista_filtrada</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[46]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>[2, 4, 6]</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Isso √© equivalente a usar a <code>compreens√£o de lista</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">lista_filtrada</span> <span class="o">=</span> <span class="p">[</span><span class="n">x</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">lista</span> <span class="k">if</span> <span class="n">esPar</span><span class="p">(</span><span class="n">x</span><span class="p">)]</span>
<span class="n">lista_filtrada</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[47]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>[2, 4, 6]</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h3 id="6.4.-Fun%C3%A7%C3%A3o-reduce.">6.4. Fun√ß√£o <code>reduce</code>.<a class="anchor-link" href="#6.4.-Fun%C3%A7%C3%A3o-reduce."><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h3>
</section>

<section class="section-block-markdown-cell">
<p>A fun√ß√£o <code>reduce</code> permite a execu√ß√£o de tarefas cumulativas em estruturas iter√°veis.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="kn">from</span> <span class="nn">functools</span> <span class="kn">import</span> <span class="n">reduce</span>

<span class="n">lista</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">22</span><span class="p">,</span> <span class="mi">33</span><span class="p">]</span>

<span class="k">def</span> <span class="nf">acumular</span><span class="p">(</span><span class="n">valor</span><span class="p">,</span> <span class="n">acumulador</span><span class="p">):</span>
  <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s1">'valor = </span><span class="si">{opening_brace}</span><span class="n">valor</span><span class="si">}</span><span class="s1">, acumulador = </span><span class="si">{opening_brace}</span><span class="n">acumulador</span><span class="si">}</span><span class="s1">, acumulacion = </span><span class="si">{opening_brace}</span><span class="n">valor</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">acumulador</span><span class="si">}</span><span class="s1">'</span><span class="p">)</span>
  <span class="k">return</span> <span class="n">valor</span> <span class="o">+</span> <span class="n">acumulador</span>

<span class="n">acumulacion</span> <span class="o">=</span> <span class="n">reduce</span><span class="p">(</span><span class="n">acumular</span><span class="p">,</span> <span class="n">lista</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s1">'</span><span class="se">\n</span><span class="s1">acumulacion = </span><span class="si">{opening_brace}</span><span class="n">acumulacion</span><span class="si">}</span><span class="s1">'</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>valor = 1, acumulador = 22, acumulacion = 23
valor = 23, acumulador = 33, acumulacion = 56

acumulacion = 56
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h3 id="6.5.-Fun%C3%A7%C3%A3o-Zip">6.5. Fun√ß√£o Zip<a class="anchor-link" href="#6.5.-Fun%C3%A7%C3%A3o-Zip"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h3>
</section>

<section class="section-block-markdown-cell">
<p>Com a fun√ß√£o <code>zip</code> √© poss√≠vel compactar v√°rias estruturas iter√°veis em uma √∫nica, ou seja, √© poss√≠vel agrupar v√°rias estruturas <em>A<sub>x</sub></em> em uma √∫nica estrutura <em>B</em>. A estrutura <em>B</em> consiste em tuplas dos elementos das estruturas <em>A<sub>x</sub></em>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">nombres</span> <span class="o">=</span> <span class="p">[</span><span class="s2">"Manolo"</span><span class="p">,</span> <span class="s2">"Andres"</span><span class="p">,</span> <span class="s2">"Fernando"</span><span class="p">]</span>
<span class="n">altura</span> <span class="o">=</span> <span class="p">[</span><span class="mi">181</span><span class="p">,</span> <span class="mi">178</span><span class="p">,</span> <span class="mi">180</span><span class="p">]</span>

<span class="n">my_zip</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="nb">zip</span><span class="p">(</span><span class="n">nombres</span><span class="p">,</span> <span class="n">altura</span><span class="p">))</span>
<span class="n">my_zip</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[51]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>[('Manolo', 181), ('Andres', 178), ('Fernando', 180)]</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h3 id="6.5.-Geradores">6.5. Geradores<a class="anchor-link" href="#6.5.-Geradores"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h3>
</section>

<section class="section-block-markdown-cell">
<p>Suponha que queiramos iterar em uma sequ√™ncia de n√∫meros, mas de uma forma especial que n√£o nos d√™ nenhum tipo de loop. Para poder fazer isso, a fun√ß√£o geradora n√£o precisa retornar o valor com <code>return</code>, mas com <code>yield</code> para que saiba que deve continuar a itera√ß√£o.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="k">def</span> <span class="nf">iterador_custom</span><span class="p">(</span><span class="n">N</span><span class="p">):</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span> <span class="p">(</span><span class="n">N</span><span class="p">):</span>
        <span class="k">if</span> <span class="n">i</span> <span class="o">%</span> <span class="mi">3</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
            <span class="k">yield</span> <span class="n">i</span>

<span class="n">generador</span> <span class="o">=</span> <span class="n">iterador_custom</span><span class="p">(</span><span class="mi">20</span><span class="p">)</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">generador</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>0
3
6
9
12
15
18
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Acabamos de criar um iterador para n√∫meros m√∫ltiplos de 3</p>
</section>

<section class="section-block-markdown-cell">
<h3 id="6.6.-Fun%C3%A7%C3%B5es-de-alta-ordem">6.6. Fun√ß√µes de alta ordem<a class="anchor-link" href="#6.6.-Fun%C3%A7%C3%B5es-de-alta-ordem"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h3>
</section>

<section class="section-block-markdown-cell">
<p>Podemos criar fun√ß√µes que recebem outras fun√ß√µes como par√¢metros, de modo que a fun√ß√£o que recebe outra fun√ß√£o como par√¢metro √© chamada de fun√ß√£o de alta ordem. Vamos dar uma olhada em um exemplo</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="k">def</span> <span class="nf">increment</span><span class="p">(</span><span class="n">x</span><span class="p">):</span>
    <span class="k">return</span> <span class="n">x</span> <span class="o">+</span> <span class="mi">1</span>

<span class="k">def</span> <span class="nf">hof</span><span class="p">(</span><span class="n">f</span><span class="p">,</span> <span class="n">x</span><span class="p">):</span>
    <span class="k">return</span> <span class="mi">2</span><span class="o">*</span><span class="n">f</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>

<span class="nb">print</span><span class="p">(</span><span class="n">hof</span><span class="p">(</span><span class="n">increment</span><span class="p">,</span> <span class="mi">3</span><span class="p">))</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>8
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h2 id="Classes-e-objetos">Classes e objetos<a class="anchor-link" href="#Classes-e-objetos"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h2>
</section>

<section class="section-block-markdown-cell">
<p>Python √© uma linguagem de programa√ß√£o orientada a objetos. Quase tudo em Python √© um objeto, com suas propriedades e m√©todos.</p>
<p>Uma classe √© como um construtor de objetos ou um "projeto" para a cria√ß√£o de objetos.</p>
<p>Para criar uma classe, use a palavra reservada <code>class</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="k">class</span> <span class="nc">Clase</span><span class="p">:</span>
  <span class="n">variable</span> <span class="o">=</span> <span class="s1">'MaximoFN'</span>
</pre></div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Depois que a classe for criada, um objeto dessa classe poder√° ser criado.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">objeto</span> <span class="o">=</span> <span class="n">Clase</span><span class="p">()</span>
<span class="n">Clase</span><span class="o">.</span><span class="n">variable</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[53]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>'MaximoFN'</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Normalmente, as classes t√™m uma fun√ß√£o inicial, que √© executada quando um objeto da classe √© criado. Essa fun√ß√£o √© chamada de <em>dunder init</em> e √© escrita <code>__init__()</code>. A fun√ß√£o <em>dunder init</em> deve sempre receber a vari√°vel <code>self</code>, que indica a pr√≥pria classe e, em seguida, as vari√°veis que voc√™ deseja usar</p>
<p>Essa fun√ß√£o √© usada para inicializar as vari√°veis da classe ou para executar o c√≥digo necess√°rio ao criar um objeto da classe.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="k">class</span> <span class="nc">Persona</span><span class="p">:</span>
  <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">nombre</span><span class="p">,</span> <span class="n">edad</span><span class="p">):</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">nombre</span> <span class="o">=</span> <span class="n">nombre</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">edad</span> <span class="o">=</span> <span class="n">edad</span>

<span class="n">objeto_persona</span> <span class="o">=</span> <span class="n">Persona</span><span class="p">(</span><span class="s2">"Miguel"</span><span class="p">,</span> <span class="mi">36</span><span class="p">)</span>

<span class="nb">print</span><span class="p">(</span><span class="n">objeto_persona</span><span class="o">.</span><span class="n">nombre</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="n">objeto_persona</span><span class="o">.</span><span class="n">edad</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>Miguel
36
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Al√©m da fun√ß√£o inicial <em>dunder init</em>, outras fun√ß√µes podem ser criadas. Essas fun√ß√µes s√£o chamadas de <em>m√©todos</em> da classe. Esses <em>m√©todos</em> devem sempre receber a vari√°vel <code>self</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="k">class</span> <span class="nc">Persona</span><span class="p">:</span>
  <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">nombre</span><span class="p">,</span> <span class="n">edad</span><span class="p">):</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">nombre</span> <span class="o">=</span> <span class="n">nombre</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">edad</span> <span class="o">=</span> <span class="n">edad</span>

  <span class="k">def</span> <span class="nf">saludar</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s1">'Hola mi nombre es </span><span class="si">{opening_brace}</span><span class="bp">self</span><span class="o">.</span><span class="n">nombre</span><span class="si">}</span><span class="s1"> y tengo </span><span class="si">{opening_brace}</span><span class="bp">self</span><span class="o">.</span><span class="n">edad</span><span class="si">}</span><span class="s1"> a√±os'</span><span class="p">)</span>

<span class="n">objeto_persona</span> <span class="o">=</span> <span class="n">Persona</span><span class="p">(</span><span class="s2">"Miguel"</span><span class="p">,</span> <span class="mi">36</span><span class="p">)</span>

<span class="n">objeto_persona</span><span class="o">.</span><span class="n">saludar</span><span class="p">()</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>Hola mi nombre es Miguel y tengo 36 a√±os
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>A vari√°vel <code>self</code> n√£o precisa se chamar <code>self</code>, ela pode ter qualquer nome, mas dentro de cada classe ela deve ser sempre a mesma. Mas, por conven√ß√£o, √© comum usar <code>self</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="k">class</span> <span class="nc">Persona</span><span class="p">:</span>
  <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="n">yo_mismo</span><span class="p">,</span> <span class="n">nombre</span><span class="p">,</span> <span class="n">edad</span><span class="p">):</span>
    <span class="n">yo_mismo</span><span class="o">.</span><span class="n">nombre</span> <span class="o">=</span> <span class="n">nombre</span>
    <span class="n">yo_mismo</span><span class="o">.</span><span class="n">edad</span> <span class="o">=</span> <span class="n">edad</span>

  <span class="k">def</span> <span class="nf">saludar</span><span class="p">(</span><span class="n">yo_mismo</span><span class="p">):</span>
    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s1">'Hola mi nombre es </span><span class="si">{opening_brace}</span><span class="n">yo_mismo</span><span class="o">.</span><span class="n">nombre</span><span class="si">}</span><span class="s1"> y tengo </span><span class="si">{opening_brace}</span><span class="n">yo_mismo</span><span class="o">.</span><span class="n">edad</span><span class="si">}</span><span class="s1"> a√±os'</span><span class="p">)</span>

<span class="n">objeto_persona</span> <span class="o">=</span> <span class="n">Persona</span><span class="p">(</span><span class="s2">"Miguel"</span><span class="p">,</span> <span class="mi">36</span><span class="p">)</span>

<span class="n">objeto_persona</span><span class="o">.</span><span class="n">saludar</span><span class="p">()</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>Hola mi nombre es Miguel y tengo 36 a√±os
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>As vari√°veis de objeto podem ser modificadas</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">objeto_persona</span><span class="o">.</span><span class="n">nombre</span> <span class="o">=</span> <span class="s1">'Marta'</span>
<span class="n">objeto_persona</span><span class="o">.</span><span class="n">saludar</span><span class="p">()</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>Hola mi nombre es Marta y tengo 36 a√±os
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>At√© mesmo elimin√°-los</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="k">del</span> <span class="n">objeto_persona</span><span class="o">.</span><span class="n">nombre</span>
</pre></div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Voc√™ tamb√©m pode excluir o objeto inteiro</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="k">del</span> <span class="n">objeto_persona</span>
</pre></div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Se, por exemplo, quisermos criar a estrutura da classe, mas n√£o quisermos codificar o interior da classe no momento, poderemos usar <code>pass</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="k">class</span> <span class="nc">Persona</span><span class="p">:</span>
  <span class="k">pass</span>

<span class="n">objeto_persona</span> <span class="o">=</span> <span class="n">Persona</span><span class="p">()</span>
</pre></div>
</div>
</section>

<section class="section-block-markdown-cell">
<h3 id="7.1.-Heran%C3%A7a">7.1. Heran√ßa<a class="anchor-link" href="#7.1.-Heran%C3%A7a"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h3>
</section>

<section class="section-block-markdown-cell">
<p>A heran√ßa nos permite definir uma classe que herda todos os m√©todos e propriedades de outra classe.</p>
<p>A <strong>classe pai</strong> √© a classe da qual ela √© herdada, tamb√©m chamada de <strong>classe base</strong>.</p>
<p>A <strong>classe filha</strong> √© a classe que herda de outra classe, tamb√©m chamada de <strong>classe derivada</strong>.</p>
</section>

<section class="section-block-markdown-cell">
<p>Criamos uma classe pai</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="k">class</span> <span class="nc">Persona</span><span class="p">:</span>
  <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">nombre</span><span class="p">,</span> <span class="n">apellido</span><span class="p">):</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">nombre</span> <span class="o">=</span> <span class="n">nombre</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">apellido</span> <span class="o">=</span> <span class="n">apellido</span>

  <span class="k">def</span> <span class="nf">imprimir_nombre</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s1">'Me llamo </span><span class="si">{opening_brace}</span><span class="bp">self</span><span class="o">.</span><span class="n">nombre</span><span class="si">}</span><span class="s1"> </span><span class="si">{opening_brace}</span><span class="bp">self</span><span class="o">.</span><span class="n">apellido</span><span class="si">}</span><span class="s1">'</span><span class="p">)</span>

<span class="n">objeto_padre</span> <span class="o">=</span> <span class="n">Persona</span><span class="p">(</span><span class="s2">"Laura"</span><span class="p">,</span> <span class="s2">"Perez"</span><span class="p">)</span>
<span class="n">objeto_padre</span><span class="o">.</span><span class="n">imprimir_nombre</span><span class="p">()</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>Me llamo Laura Perez
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Para criar a classe filha, √© necess√°rio indicar entre par√™nteses, ao declarar a classe, de qual classe ela herda.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="k">class</span> <span class="nc">Estudiante</span><span class="p">(</span><span class="n">Persona</span><span class="p">):</span>
  <span class="k">pass</span>
</pre></div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>E ao criar o objeto da classe filha, os par√¢metros de que a classe pai precisa s√£o passados para ela.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">objeto_hijo</span> <span class="o">=</span> <span class="n">Estudiante</span><span class="p">(</span><span class="s2">"Mariano"</span><span class="p">,</span> <span class="s2">"Sanz"</span><span class="p">)</span>
<span class="n">objeto_hijo</span><span class="o">.</span><span class="n">imprimir_nombre</span><span class="p">()</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>Me llamo Mariano Sanz
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>At√© agora, a classe filha herdou as fun√ß√µes da classe pai, mas podemos modific√°-las reescrevendo-as. Por exemplo, reescrevendo a fun√ß√£o <em>duder init</em>.</p>
<p>Se voc√™ reescrever a fun√ß√£o <em>dunder init</em>, se quiser que a fun√ß√£o <em>dunder init</em> da classe pai seja chamada, voc√™ dever√° cham√°-la.</p>
<p>H√° duas maneiras de fazer isso: uma √© por meio do nome da classe pai; nesse caso, voc√™ deve passar a vari√°vel <code>self</code> para ela.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="k">class</span> <span class="nc">Estudiante</span><span class="p">(</span><span class="n">Persona</span><span class="p">):</span>
  <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">nombre</span><span class="p">,</span> <span class="n">apellido</span><span class="p">):</span>
    <span class="n">Persona</span><span class="o">.</span><span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">nombre</span><span class="p">,</span> <span class="n">apellido</span><span class="p">)</span>

<span class="n">objeto_hijo</span> <span class="o">=</span> <span class="n">Estudiante</span><span class="p">(</span><span class="s2">"Mariano"</span><span class="p">,</span> <span class="s2">"Sanz"</span><span class="p">)</span>
<span class="n">objeto_hijo</span><span class="o">.</span><span class="n">imprimir_nombre</span><span class="p">()</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>Me llamo Mariano Sanz
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Outra forma √© por meio de <code>super()</code>, caso em que voc√™ n√£o precisa passar a vari√°vel <code>self</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="k">class</span> <span class="nc">Estudiante</span><span class="p">(</span><span class="n">Persona</span><span class="p">):</span>
  <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">nombre</span><span class="p">,</span> <span class="n">apellido</span><span class="p">):</span>
    <span class="nb">super</span><span class="p">()</span><span class="o">.</span><span class="fm">__init__</span><span class="p">(</span><span class="n">nombre</span><span class="p">,</span> <span class="n">apellido</span><span class="p">)</span>

<span class="n">objeto_hijo</span> <span class="o">=</span> <span class="n">Estudiante</span><span class="p">(</span><span class="s2">"Mariano"</span><span class="p">,</span> <span class="s2">"Sanz"</span><span class="p">)</span>
<span class="n">objeto_hijo</span><span class="o">.</span><span class="n">imprimir_nombre</span><span class="p">()</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>Me llamo Mariano Sanz
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Ao modificar fun√ß√µes, um novo c√≥digo pode ser adicionado</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="k">class</span> <span class="nc">Estudiante</span><span class="p">(</span><span class="n">Persona</span><span class="p">):</span>
  <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">nombre</span><span class="p">,</span> <span class="n">apellido</span><span class="p">,</span> <span class="n">curso</span><span class="p">):</span>
    <span class="n">Persona</span><span class="o">.</span><span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">nombre</span><span class="p">,</span> <span class="n">apellido</span><span class="p">)</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">curso</span> <span class="o">=</span> <span class="n">curso</span>

  <span class="k">def</span> <span class="nf">imprimir_nombre</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="n">Persona</span><span class="o">.</span><span class="n">imprimir_nombre</span><span class="p">(</span><span class="bp">self</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s1">'Estoy en el curso n√∫mero </span><span class="si">{opening_brace}</span><span class="bp">self</span><span class="o">.</span><span class="n">curso</span><span class="si">}</span><span class="s1">'</span><span class="p">)</span>

<span class="n">objeto_hijo</span> <span class="o">=</span> <span class="n">Estudiante</span><span class="p">(</span><span class="s2">"Mariano"</span><span class="p">,</span> <span class="s2">"Sanz"</span><span class="p">,</span> <span class="mi">4</span><span class="p">)</span>
<span class="n">objeto_hijo</span><span class="o">.</span><span class="n">imprimir_nombre</span><span class="p">()</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>Me llamo Mariano Sanz
Estoy en el curso n√∫mero 4
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Por fim, novos m√©todos podem ser adicionados</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="k">class</span> <span class="nc">Estudiante</span><span class="p">(</span><span class="n">Persona</span><span class="p">):</span>
  <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">nombre</span><span class="p">,</span> <span class="n">apellido</span><span class="p">,</span> <span class="n">curso</span><span class="p">):</span>
    <span class="n">Persona</span><span class="o">.</span><span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">nombre</span><span class="p">,</span> <span class="n">apellido</span><span class="p">)</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">curso</span> <span class="o">=</span> <span class="n">curso</span>

  <span class="k">def</span> <span class="nf">imprimir_nombre</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="n">Persona</span><span class="o">.</span><span class="n">imprimir_nombre</span><span class="p">(</span><span class="bp">self</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s1">'Estoy en el curso n√∫mero </span><span class="si">{opening_brace}</span><span class="bp">self</span><span class="o">.</span><span class="n">curso</span><span class="si">}</span><span class="s1">'</span><span class="p">)</span>

  <span class="k">def</span> <span class="nf">imprimir_estudiante</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"Soy un estudiante del curso n√∫mero </span><span class="si">{opening_brace}</span><span class="bp">self</span><span class="o">.</span><span class="n">curso</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>

<span class="n">objeto_hijo</span> <span class="o">=</span> <span class="n">Estudiante</span><span class="p">(</span><span class="s2">"Mariano"</span><span class="p">,</span> <span class="s2">"Sanz"</span><span class="p">,</span> <span class="mi">4</span><span class="p">)</span>
<span class="n">objeto_hijo</span><span class="o">.</span><span class="n">imprimir_nombre</span><span class="p">()</span>
<span class="n">objeto_hijo</span><span class="o">.</span><span class="n">imprimir_estudiante</span><span class="p">()</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>Me llamo Mariano Sanz
Estoy en el curso n√∫mero 4
Soy un estudiante del curso n√∫mero 4
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h3 id="7.2.-Sobrecarga-do-operador">7.2. Sobrecarga do operador<a class="anchor-link" href="#7.2.-Sobrecarga-do-operador"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h3>
</section>

<section class="section-block-markdown-cell">
<p>Podemos definir opera√ß√µes b√°sicas, como a adi√ß√£o, entre v√°rios objetos de uma classe. Por exemplo, se tivermos uma classe que representa um vetor, podemos definir a adi√ß√£o e a multiplica√ß√£o entre os objetos dessa classe</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="k">class</span> <span class="nc">Vector</span><span class="p">:</span>
    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">):</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">x</span> <span class="o">=</span> <span class="n">x</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">y</span> <span class="o">=</span> <span class="n">y</span>
    
    <span class="k">def</span> <span class="fm">__add__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">other</span><span class="p">):</span>
        <span class="k">return</span> <span class="n">Vector</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">x</span> <span class="o">+</span> <span class="n">other</span><span class="o">.</span><span class="n">x</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">y</span> <span class="o">+</span> <span class="n">other</span><span class="o">.</span><span class="n">y</span><span class="p">)</span>
    
    <span class="k">def</span> <span class="fm">__mul__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">other</span><span class="p">):</span>
        <span class="k">return</span> <span class="n">Vector</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">x</span> <span class="o">*</span> <span class="n">other</span><span class="o">.</span><span class="n">x</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">y</span> <span class="o">*</span> <span class="n">other</span><span class="o">.</span><span class="n">y</span><span class="p">)</span>
    
    <span class="k">def</span> <span class="fm">__str__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">return</span> <span class="sa">f</span><span class="s2">"Vector (</span><span class="si">{opening_brace}</span><span class="bp">self</span><span class="o">.</span><span class="n">x</span><span class="si">}</span><span class="s2">, </span><span class="si">{opening_brace}</span><span class="bp">self</span><span class="o">.</span><span class="n">y</span><span class="si">}</span><span class="s2">)"</span>

<span class="n">v1</span> <span class="o">=</span> <span class="n">Vector</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>
<span class="n">v2</span> <span class="o">=</span> <span class="n">Vector</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="n">v1</span> <span class="o">+</span> <span class="n">v2</span><span class="p">)</span>  <span class="c1"># Vector (4, 6)</span>
<span class="nb">print</span><span class="p">(</span><span class="n">v1</span> <span class="o">*</span> <span class="n">v2</span><span class="p">)</span>  <span class="c1"># Vector (3, 8)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>Vector (4, 6)
Vector (3, 8)
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Todas as poss√≠veis sobrecargas operacionais s√£o:</p>
<ul>
<li><code>__add__(self, other)</code>: sobrecarrega o operador de adi√ß√£o (<code>+</code>).</li>
<li><code>__sub__(self, other)</code>: sobrecarrega o operador de subtra√ß√£o (<code>-</code>).</li>
<li><code>__mul__(self, other)</code>: sobrecarrega o operador de multiplica√ß√£o (<code>*</code>).</li>
<li><code>__truediv__(self, other)</code>: sobrecarrega o operador de divis√£o (<code>/</code>).</li>
<li><code>__floordiv__(self, other)</code>: sobrecarrega o operador de divis√£o de arredondamento (<code>//</code>).</li>
<li><code>__mod__(self, other)</code>: sobrecarrega o operador de m√≥dulo (<code>%</code>).</li>
<li><code>__divmod__(self, other)</code>: sobrecarrega a fun√ß√£o <code>divmod()</code>.</li>
<li><code>__pow__(self, other)</code>: sobrecarrega o operador de pot√™ncia (<code>**</code>).</li>
<li><code>__lshift__(self, other)</code>: sobrecarrega o operador de deslocamento √† esquerda (<code>&lt;&lt;</code>).</li>
<li><code>__rshift__(self, other)</code>: sobrecarrega o operador de deslocamento √† direita (<code>&gt;&gt;</code>).</li>
<li><code>__and__(self, other)</code>: sobrecarrega o operador and (<code>&amp;</code>).</li>
<li><code>__or__(self, other)</code>: sobrecarrega o operador or (<code>|</code>).</li>
<li><code>__xor__(self, other)</code>: sobrecarrega o operador xor (<code>^</code>).</li>
<li><code>__lt__(self, other)</code>: sobrecarrega o operador de compara√ß√£o menor que (<code>&lt;</code>).</li>
<li><code>__le__(self, other)</code>: sobrecarrega o operador de compara√ß√£o menor que ou igual a (<code>&lt;=</code>).</li>
<li><code>__eq__(self, other)</code>: sobrecarrega o operador de compara√ß√£o igual a (<code>==</code>).</li>
<li><code>__ne__(self, other)</code>: sobrecarrega o operador de compara√ß√£o diferente de (<code>!=</code>).</li>
<li><code>__gt__(self, other)</code>: sobrecarrega o operador de compara√ß√£o maior que (<code>&gt;</code>).</li>
<li><code>__ge__(self, other)</code>: sobrecarrega o operador de compara√ß√£o maior que ou igual a (<code>&gt;=</code>).</li>
<li><code>__neg__(self)</code>: sobrecarrega o operador de nega√ß√£o (<code>-</code>).</li>
<li><code>__pos__(self)</code>: sobrecarrega o operador de posi√ß√£o (<code>+</code>).</li>
<li><code>__abs__(self)</code>: sobrecarrega a fun√ß√£o <code>abs()</code>.</li>
<li><code>__invert__(self)</code>: sobrecarrega o operador de invers√£o (<code>~</code>).</li>
<li><code>__complex__(self)</code>: sobrecarrega a fun√ß√£o <code>complex()</code>.</li>
<li><code>__int__(self)</code>: sobrecarrega a fun√ß√£o <code>int()</code>.</li>
<li><code>__float__(self)</code>: sobrecarrega a fun√ß√£o <code>float()</code>.</li>
</ul>
</section>

<section class="section-block-markdown-cell">
<h3 id="7.3.-Iteradores-personalizados">7.3. Iteradores personalizados<a class="anchor-link" href="#7.3.-Iteradores-personalizados"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h3>
</section>

<section class="section-block-markdown-cell">
<p>Como vimos na se√ß√£o <a href="https://maximofn.com/introduccion-a-python/#2.-Tipos-de-datos-de-Python">2 (Python data types)</a>, existem alguns tipos de dados que podem ser iterados. Mas podemos criar nossa pr√≥pria classe iter√°vel, desde que ela tenha as fun√ß√µes <code>__len__</code> e <code>__getitem__</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="k">class</span> <span class="nc">custonIterator</span><span class="p">:</span>
    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">n</span><span class="p">):</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">items</span> <span class="o">=</span> <span class="p">[</span><span class="n">i</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">n</span><span class="p">)]</span>
    
    <span class="k">def</span> <span class="fm">__len__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">return</span> <span class="nb">len</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">items</span><span class="p">)</span>
    
    <span class="k">def</span> <span class="fm">__getitem__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">index</span><span class="p">):</span>
        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">items</span><span class="p">[</span><span class="n">index</span><span class="p">]</span>

<span class="n">iterator</span> <span class="o">=</span> <span class="n">custonIterator</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">iterator</span><span class="p">))</span>  <span class="c1"># 10</span>
<span class="nb">print</span><span class="p">(</span><span class="n">iterator</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>  <span class="c1"># 0</span>
<span class="nb">print</span><span class="p">(</span><span class="n">iterator</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>  <span class="c1"># 1</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>10
0
1
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Agora podemos iterar com o objeto de nossa classe com loops <code>for</code>, por exemplo.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">iterator</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s2">" "</span><span class="p">)</span>  <span class="c1"># 0 1 2 3 4 5 6 7 8 9</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>0 1 2 3 4 5 6 7 8 9 </pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h3 id="7.4.-Chamada-de-objetos-como-fun%C3%A7%C3%B5es">7.4. Chamada de objetos como fun√ß√µes<a class="anchor-link" href="#7.4.-Chamada-de-objetos-como-fun%C3%A7%C3%B5es"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h3>
</section>

<section class="section-block-markdown-cell">
<p>Talvez desejemos chamar um objeto de uma fun√ß√£o como uma classe, o que pode ser feito adicionando a fun√ß√£o <code>__call__</code> √† classe.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="k">class</span> <span class="nc">potencia</span><span class="p">:</span>
    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">base</span><span class="p">):</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">base</span> <span class="o">=</span> <span class="n">base</span>
    
    <span class="k">def</span> <span class="fm">__call__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">potencia</span><span class="p">):</span>
        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">base</span> <span class="o">**</span> <span class="n">potencia</span>
    
<span class="n">potencia_cuadrado</span> <span class="o">=</span> <span class="n">potencia</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="n">potencia_cuadrado</span><span class="p">(</span><span class="mi">3</span><span class="p">))</span>  <span class="c1"># 8</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>8
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h3 id="7.5.-Atributos-e-fun%C3%A7%C3%B5es-privados">7.5. Atributos e fun√ß√µes privados<a class="anchor-link" href="#7.5.-Atributos-e-fun%C3%A7%C3%B5es-privados"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h3>
</section>

<section class="section-block-markdown-cell">
<p>Ao criar uma classe, podemos tornar alguns atributos ou fun√ß√µes privados e n√£o acess√≠veis de fora da classe, adicionando <code>__</code> antes do atributo class.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="k">class</span> <span class="nc">Privados</span><span class="p">:</span>
    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">publico</span> <span class="o">=</span> <span class="s2">"Soy p√∫blico"</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">__privado</span> <span class="o">=</span> <span class="s2">"Soy privado"</span>
    
    <span class="k">def</span> <span class="nf">getPrivado</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">__privado</span>
    
    <span class="k">def</span> <span class="nf">setPrivado</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">valor</span><span class="p">):</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">__privado</span> <span class="o">=</span> <span class="n">valor</span>
    
    <span class="k">def</span> <span class="nf">__funcion_privada</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">return</span> <span class="s2">"Soy una funci√≥n privada"</span>
    
    <span class="k">def</span> <span class="nf">funcion_publica</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">__funcion_privada</span><span class="p">()</span>

<span class="n">privados</span> <span class="o">=</span> <span class="n">Privados</span><span class="p">()</span>

<span class="nb">print</span><span class="p">(</span><span class="s2">"Acceso al atributo publico: "</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s2">""</span><span class="p">)</span>
<span class="k">try</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"</span><span class="si">{opening_brace}</span><span class="n">privados</span><span class="o">.</span><span class="n">publico</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>
<span class="k">except</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">"</span><span class="se">\t</span><span class="s2">No se puede acceder al atributo privado"</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="s2">"Acceso al atributo privado: "</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s2">""</span><span class="p">)</span>
<span class="k">try</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"</span><span class="si">{opening_brace}</span><span class="n">privados</span><span class="o">.</span><span class="n">__privado</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>
<span class="k">except</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">"</span><span class="se">\t</span><span class="s2">No se puede acceder al atributo privado"</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="s2">"Acceso al atributo privado mediante el accesor: "</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s2">""</span><span class="p">)</span>
<span class="k">try</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"</span><span class="si">{opening_brace}</span><span class="n">privados</span><span class="o">.</span><span class="n">getPrivado</span><span class="p">()</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>
<span class="k">except</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">"</span><span class="se">\t</span><span class="s2">No se puede acceder al atributo privado mediante el accesor"</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="s2">"Llamada a la funci√≥n privada: "</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s2">""</span><span class="p">)</span>
<span class="k">try</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"</span><span class="si">{opening_brace}</span><span class="n">privados</span><span class="o">.</span><span class="n">__funcion_privada</span><span class="p">()</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>
<span class="k">except</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">"</span><span class="se">\t</span><span class="s2">No se puede llamar a la funci√≥n privada"</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="s2">"Llamada a la funci√≥n p√∫blica: "</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s2">""</span><span class="p">)</span>
<span class="k">try</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"</span><span class="si">{opening_brace}</span><span class="n">privados</span><span class="o">.</span><span class="n">funcion_publica</span><span class="p">()</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>
<span class="k">except</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">"</span><span class="se">\t</span><span class="s2">No se puede llamar a la funci√≥n p√∫blica"</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>Acceso al atributo publico: Soy p√∫blico
Acceso al atributo privado: 	No se puede acceder al atributo privado
Acceso al atributo privado mediante el accesor: Soy privado
Llamada a la funci√≥n privada: 	No se puede llamar a la funci√≥n privada
Llamada a la funci√≥n p√∫blica: Soy una funci√≥n privada
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h2 id="Iteradores">Iteradores<a class="anchor-link" href="#Iteradores"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h2>
</section>

<section class="section-block-markdown-cell">
<p>Um iterador √© um objeto que cont√©m um n√∫mero cont√°vel de valores.</p>
<p>Um iterador √© um objeto que pode ser iterado, o que significa que ele pode percorrer todos os valores.</p>
<p>Tecnicamente, em Python, um iterador √© um objeto que implementa o protocolo do iterador, que consiste nos m√©todos <code>__iter__()</code> e <code>__next__()</code>.</p>
</section>

<section class="section-block-markdown-cell">
<p>Listas, tuplas, dicion√°rios e conjuntos s√£o todos objetos iter√°veis. Eles s√£o cont√™ineres iter√°veis dos quais voc√™ pode obter um iterador.</p>
<p>Todos esses objetos t√™m um m√©todo <code>iter()</code> que √© usado para obter um iterador:</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">tupla</span> <span class="o">=</span> <span class="p">(</span><span class="s2">"manzana"</span><span class="p">,</span> <span class="s2">"pl√°tano"</span><span class="p">,</span> <span class="s2">"cereza"</span><span class="p">)</span>
<span class="n">iterable</span> <span class="o">=</span> <span class="nb">iter</span><span class="p">(</span><span class="n">tupla</span><span class="p">)</span>

<span class="nb">print</span><span class="p">(</span><span class="nb">next</span><span class="p">(</span><span class="n">iterable</span><span class="p">))</span>
<span class="nb">print</span><span class="p">(</span><span class="nb">next</span><span class="p">(</span><span class="n">iterable</span><span class="p">))</span>
<span class="nb">print</span><span class="p">(</span><span class="nb">next</span><span class="p">(</span><span class="n">iterable</span><span class="p">))</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>manzana
pl√°tano
cereza
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">string</span> <span class="o">=</span> <span class="s2">"pl√°tano"</span>
<span class="n">iterable</span> <span class="o">=</span> <span class="nb">iter</span><span class="p">(</span><span class="n">string</span><span class="p">)</span>

<span class="nb">print</span><span class="p">(</span><span class="nb">next</span><span class="p">(</span><span class="n">iterable</span><span class="p">),</span> <span class="n">end</span><span class="o">=</span><span class="s1">' '</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="nb">next</span><span class="p">(</span><span class="n">iterable</span><span class="p">),</span> <span class="n">end</span><span class="o">=</span><span class="s1">' '</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="nb">next</span><span class="p">(</span><span class="n">iterable</span><span class="p">),</span> <span class="n">end</span><span class="o">=</span><span class="s1">' '</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="nb">next</span><span class="p">(</span><span class="n">iterable</span><span class="p">),</span> <span class="n">end</span><span class="o">=</span><span class="s1">' '</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="nb">next</span><span class="p">(</span><span class="n">iterable</span><span class="p">),</span> <span class="n">end</span><span class="o">=</span><span class="s1">' '</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="nb">next</span><span class="p">(</span><span class="n">iterable</span><span class="p">),</span> <span class="n">end</span><span class="o">=</span><span class="s1">' '</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="nb">next</span><span class="p">(</span><span class="n">iterable</span><span class="p">),</span> <span class="n">end</span><span class="o">=</span><span class="s1">' '</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>p l √° t a n o </pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>O loop <code>for</code> na verdade cria um objeto iterador e executa o m√©todo <code>next()</code> para cada loop.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">tupla</span> <span class="o">=</span> <span class="p">(</span><span class="s2">"manzana"</span><span class="p">,</span> <span class="s2">"pl√°tano"</span><span class="p">,</span> <span class="s2">"cereza"</span><span class="p">)</span>

<span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">tupla</span><span class="p">:</span>
  <span class="nb">print</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>manzana
pl√°tano
cereza
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">string</span> <span class="o">=</span> <span class="s2">"pl√°tano"</span>

<span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">string</span><span class="p">:</span>
  <span class="nb">print</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s1">' '</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>p l √° t a n o </pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h3 id="8.1.-Criar-um-objeto-iterador">8.1. Criar um objeto iterador<a class="anchor-link" href="#8.1.-Criar-um-objeto-iterador"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h3>
</section>

<section class="section-block-markdown-cell">
<p>Para criar um objeto/classe como um iterador, os m√©todos <code>__iter__()</code> e <code>__next__()</code> devem ser implementados.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="k">class</span> <span class="nc">Numeros</span><span class="p">:</span>
  <span class="k">def</span> <span class="fm">__iter__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">a</span> <span class="o">=</span> <span class="mi">1</span>
    <span class="k">return</span> <span class="bp">self</span>

  <span class="k">def</span> <span class="fm">__next__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="n">x</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">a</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">a</span> <span class="o">+=</span> <span class="mi">1</span>
    <span class="k">return</span> <span class="n">x</span>

<span class="n">objeto_iterador</span> <span class="o">=</span> <span class="n">Numeros</span><span class="p">()</span>
<span class="n">iterador</span> <span class="o">=</span> <span class="nb">iter</span><span class="p">(</span><span class="n">objeto_iterador</span><span class="p">)</span>

<span class="nb">print</span><span class="p">(</span><span class="nb">next</span><span class="p">(</span><span class="n">iterador</span><span class="p">),</span> <span class="n">end</span><span class="o">=</span><span class="s1">' '</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="nb">next</span><span class="p">(</span><span class="n">iterador</span><span class="p">),</span> <span class="n">end</span><span class="o">=</span><span class="s1">' '</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="nb">next</span><span class="p">(</span><span class="n">iterador</span><span class="p">),</span> <span class="n">end</span><span class="o">=</span><span class="s1">' '</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="nb">next</span><span class="p">(</span><span class="n">iterador</span><span class="p">),</span> <span class="n">end</span><span class="o">=</span><span class="s1">' '</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="nb">next</span><span class="p">(</span><span class="n">iterador</span><span class="p">),</span> <span class="n">end</span><span class="o">=</span><span class="s1">' '</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>1 2 3 4 5 </pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>O exemplo acima continuaria para sempre se voc√™ tivesse chamadas suficientes para <code>next()</code> ou se fosse usado em um loop <code>for</code>.</p>
<p>Para evitar que a itera√ß√£o continue para sempre, podemos usar a instru√ß√£o <code>StopIteration</code>.</p>
<p>No m√©todo <code>__next__()</code>, podemos adicionar uma condi√ß√£o de t√©rmino para gerar um erro se a itera√ß√£o for executada um n√∫mero especificado de vezes:</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="k">class</span> <span class="nc">Numeros</span><span class="p">:</span>
  <span class="k">def</span> <span class="fm">__iter__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">a</span> <span class="o">=</span> <span class="mi">1</span>
    <span class="k">return</span> <span class="bp">self</span>

  <span class="k">def</span> <span class="fm">__next__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
    <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">a</span> <span class="o">&lt;=</span> <span class="mi">20</span><span class="p">:</span>
      <span class="n">x</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">a</span>
      <span class="bp">self</span><span class="o">.</span><span class="n">a</span> <span class="o">+=</span> <span class="mi">1</span>
      <span class="k">return</span> <span class="n">x</span>
    <span class="k">else</span><span class="p">:</span>
      <span class="k">raise</span> <span class="ne">StopIteration</span>

<span class="n">objeto_iterador</span> <span class="o">=</span> <span class="n">Numeros</span><span class="p">()</span>
<span class="n">iterador</span> <span class="o">=</span> <span class="nb">iter</span><span class="p">(</span><span class="n">objeto_iterador</span><span class="p">)</span>

<span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">iterador</span><span class="p">:</span>
  <span class="nb">print</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s1">' '</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 </pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h3 id="8.2.-Iterar-obtendo-o-%C3%ADndice-e-o-valor">8.2. Iterar obtendo o √≠ndice e o valor<a class="anchor-link" href="#8.2.-Iterar-obtendo-o-%C3%ADndice-e-o-valor"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h3>
</section>

<section class="section-block-markdown-cell">
<p>Podemos iterar por um objeto iter√°vel obtendo, em cada itera√ß√£o, seu √≠ndice e seu valor por meio do m√©todo <code>enumerate()</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">string</span> <span class="o">=</span> <span class="s2">"MaximoFN"</span>

<span class="k">for</span> <span class="n">index</span><span class="p">,</span> <span class="n">valor</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">string</span><span class="p">):</span>
  <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"En la posici√≥n </span><span class="si">{opening_brace}</span><span class="n">index</span><span class="si">}</span><span class="s2">, est√° el caracter </span><span class="si">{opening_brace}</span><span class="n">valor</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>En la posici√≥n 0, est√° el caracter M
En la posici√≥n 1, est√° el caracter a
En la posici√≥n 2, est√° el caracter x
En la posici√≥n 3, est√° el caracter i
En la posici√≥n 4, est√° el caracter m
En la posici√≥n 5, est√° el caracter o
En la posici√≥n 6, est√° el caracter F
En la posici√≥n 7, est√° el caracter N
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h3 id="8.3.-Iterar-por-dois-objetos-iter%C3%A1veis-ao-mesmo-tempo.">8.3. Iterar por dois objetos iter√°veis ao mesmo tempo.<a class="anchor-link" href="#8.3.-Iterar-por-dois-objetos-iter%C3%A1veis-ao-mesmo-tempo."><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h3>
</section>

<section class="section-block-markdown-cell">
<p>Se tivermos dois objetos iter√°veis, cujo comprimento seja o mesmo, poderemos iterar por ambos ao mesmo tempo usando o m√©todo <code>zip()</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">string1</span> <span class="o">=</span> <span class="s1">'MaximoFN__'</span>
<span class="n">string2</span> <span class="o">=</span> <span class="s1">'PythonPost'</span>

<span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">string1</span><span class="p">)</span> <span class="o">==</span> <span class="nb">len</span><span class="p">(</span><span class="n">string2</span><span class="p">):</span>
  <span class="k">for</span> <span class="n">valor1</span><span class="p">,</span> <span class="n">valor2</span> <span class="ow">in</span> <span class="nb">zip</span><span class="p">(</span><span class="n">string1</span><span class="p">,</span> <span class="n">string2</span><span class="p">):</span>
    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"En el primer string hay </span><span class="si">{opening_brace}</span><span class="n">valor1</span><span class="si">}</span><span class="s2">, en el segundo string hay </span><span class="si">{opening_brace}</span><span class="n">valor2</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>En el primer string hay M, en el segundo string hay P
En el primer string hay a, en el segundo string hay y
En el primer string hay x, en el segundo string hay t
En el primer string hay i, en el segundo string hay h
En el primer string hay m, en el segundo string hay o
En el primer string hay o, en el segundo string hay n
En el primer string hay F, en el segundo string hay P
En el primer string hay N, en el segundo string hay o
En el primer string hay _, en el segundo string hay s
En el primer string hay _, en el segundo string hay t
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h2 id="Escopo-das-vari%C3%A1veis">Escopo das vari√°veis<a class="anchor-link" href="#Escopo-das-vari%C3%A1veis"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h2>
</section>

<section class="section-block-markdown-cell">
<p>Uma vari√°vel s√≥ est√° dispon√≠vel na regi√£o em que foi criada. Isso √© chamado de <em>escopo</em>.</p>
</section>

<section class="section-block-markdown-cell">
<h3 id="9.1.-Escopo-local">9.1. Escopo local<a class="anchor-link" href="#9.1.-Escopo-local"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h3>
</section>

<section class="section-block-markdown-cell">
<p>Uma vari√°vel criada em uma fun√ß√£o pertence ao escopo local dessa fun√ß√£o e s√≥ pode ser usada dentro dela.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="k">def</span> <span class="nf">funcion</span><span class="p">():</span>
  <span class="n">x</span> <span class="o">=</span> <span class="mi">300</span>
  <span class="nb">print</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>

<span class="n">funcion</span><span class="p">()</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>300
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>A vari√°vel <code>x</code> n√£o est√° dispon√≠vel fora da fun√ß√£o, mas est√° dispon√≠vel para qualquer fun√ß√£o dentro da fun√ß√£o.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="k">def</span> <span class="nf">funcion</span><span class="p">():</span>
  <span class="n">x</span> <span class="o">=</span> <span class="mi">300</span>
  <span class="k">def</span> <span class="nf">funcion_interna</span><span class="p">():</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
  <span class="n">funcion_interna</span><span class="p">()</span>

<span class="n">funcion</span><span class="p">()</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>300
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h3 id="9.2.-Escopo-global">9.2. Escopo global<a class="anchor-link" href="#9.2.-Escopo-global"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h3>
</section>

<section class="section-block-markdown-cell">
<p>Uma vari√°vel criada no corpo principal do c√≥digo Python √© uma vari√°vel global e pertence ao escopo global.</p>
<p>As vari√°veis globais est√£o dispon√≠veis em qualquer escopo, global e local.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">x</span> <span class="o">=</span> <span class="mi">300</span>

<span class="k">def</span> <span class="nf">funcion</span><span class="p">():</span>
  <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s1">'√Åmbito local: </span><span class="si">{opening_brace}</span><span class="n">x</span><span class="si">}</span><span class="s1">'</span><span class="p">)</span>

<span class="n">funcion</span><span class="p">()</span>

<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s1">'√Åmbito global: </span><span class="si">{opening_brace}</span><span class="n">x</span><span class="si">}</span><span class="s1">'</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>√Åmbito local: 300
√Åmbito global: 300
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Se voc√™ criar duas vari√°veis, uma global e uma local, ambas com o mesmo nome, o Python as criar√° como duas vari√°veis diferentes.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">x</span> <span class="o">=</span> <span class="mi">300</span>

<span class="k">def</span> <span class="nf">funcion</span><span class="p">():</span>
  <span class="n">x</span> <span class="o">=</span> <span class="mi">200</span>
  <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s1">'Variable local: </span><span class="si">{opening_brace}</span><span class="n">x</span><span class="si">}</span><span class="s1">'</span><span class="p">)</span>

<span class="n">funcion</span><span class="p">()</span>

<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s1">'Variable global: </span><span class="si">{opening_brace}</span><span class="n">x</span><span class="si">}</span><span class="s1">'</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>Variable local: 200
Variable global: 300
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Se voc√™ precisar criar uma vari√°vel global, mas ela for declarada localmente, poder√° usar a palavra-chave <code>global</code>.</p>
<p>A palavra-chave <code>global</code> torna a vari√°vel global.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="k">def</span> <span class="nf">funcion</span><span class="p">():</span>
  <span class="k">global</span> <span class="n">x</span>
  <span class="n">x</span> <span class="o">=</span> <span class="mi">300</span>

<span class="n">funcion</span><span class="p">()</span>

<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s1">'Variable global: </span><span class="si">{opening_brace}</span><span class="n">x</span><span class="si">}</span><span class="s1">'</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>Variable global: 300
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Al√©m disso, o uso da palavra-chave <code>global</code> faz uma altera√ß√£o em uma vari√°vel global dentro de uma fun√ß√£o.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="n">x</span> <span class="o">=</span> <span class="mi">300</span>

<span class="k">def</span> <span class="nf">funcion</span><span class="p">():</span>
  <span class="k">global</span> <span class="n">x</span>
  <span class="n">x</span> <span class="o">=</span> <span class="mi">200</span>

<span class="n">funcion</span><span class="p">()</span>

<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s1">'Variable global: </span><span class="si">{opening_brace}</span><span class="n">x</span><span class="si">}</span><span class="s1">'</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>Variable global: 200
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h2 id="M%C3%B3dulos">M√≥dulos<a class="anchor-link" href="#M%C3%B3dulos"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h2>
</section>

<section class="section-block-markdown-cell">
<p>Um m√≥dulo √© um arquivo que cont√©m um conjunto de fun√ß√µes que voc√™ deseja incluir em seu aplicativo.</p>
<p>Para criar um m√≥dulo, basta salvar o c√≥digo desejado em um arquivo com a extens√£o <code>.py</code>.</p>
</section>

<section class="section-block-markdown-cell">
<blockquote>
<p>Dica: nos notebooks Jupyter (o Colab √© um notebook Jupyter on-line), se voc√™ digitar o caractere <code>!</code> antes de um comando, poder√° executar comandos do console.</p>
</blockquote>
</section>

<section class="section-block-markdown-cell">
<p>Primeiro, vamos ver em que diret√≥rio estamos. Para isso, usamos o comando <code>pwd</code> (<em>imprimir diret√≥rio de trabalho</em>).</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="o">!</span>pwd
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>/home/wallabot/Documentos/web/portafolio/posts
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Vamos criar uma pasta para criar nossos m√≥dulos com o comando <code>mkdir</code> (criar diret√≥rio).</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="o">!</span>mkdir<span class="w"> </span>introduccion_python
</pre></div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Em seguida, vamos ver quais arquivos est√£o em nossa pasta. Para isso, usamos o comando <code>ls</code> (<em>list</em>).</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="o">!</span>ls<span class="w"> </span>introduccion_python
</pre></div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Vemos que ele est√° vazio, criamos um novo arquivo <code>.py</code> no qual criaremos nosso m√≥dulo.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="o">%%writefile</span> introduccion_python/modulo1.py

<span class="k">def</span> <span class="nf">funcion_del_modulo</span><span class="p">(</span><span class="n">nombre</span><span class="p">):</span>
  <span class="nb">print</span><span class="p">(</span><span class="s2">"Hola, "</span> <span class="o">+</span> <span class="n">nombre</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>Writing introduccion_python/modulo1.py
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Voltamos para ver quais arquivos est√£o em nossa pasta</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="o">!</span>ls<span class="w"> </span>introduccion_python
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>modulo1.py  __pycache__
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Vemos que um arquivo <code>module1.py</code> foi criado. Agora podemos us√°-lo</p>
</section>

<section class="section-block-markdown-cell">
<p>Para usar um m√≥dulo externo, use a palavra <code>import</code>. Para usar as fun√ß√µes do m√≥dulo, voc√™ deve primeiro colocar o nome do m√≥dulo, um <code>.</code> e, em seguida, o nome da fun√ß√£o que deseja usar.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="kn">import</span> <span class="nn">introduccion_python.modulo1</span>

<span class="n">introduccion_python</span><span class="o">.</span><span class="n">modulo1</span><span class="o">.</span><span class="n">funcion_del_modulo</span><span class="p">(</span><span class="s1">'MaximoFN'</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>Hola, MaximoFN
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Se quisermos que o m√≥dulo tenha um nome espec√≠fico em nosso c√≥digo, podemos usar a palavra <code>as</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="kn">import</span> <span class="nn">introduccion_python.modulo1</span> <span class="k">as</span> <span class="nn">mod1</span>

<span class="n">mod1</span><span class="o">.</span><span class="n">funcion_del_modulo</span><span class="p">(</span><span class="s1">'MaximoFN'</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>Hola, MaximoFN
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Se o m√≥dulo tiver v√°rias fun√ß√µes, mas quisermos importar apenas uma, podemos usar as palavras <code>from</code> e <code>import</code>. A forma seria</p>
<pre><code>de &lt;m√≥dulo&gt; importar &lt;fun√ß√£o&gt;
</code></pre>
<p>Nesse caso, n√£o √© necess√°rio indicar o nome do m√≥dulo ao chamar a fun√ß√£o</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="o">%%writefile</span> introduccion_python/modulo2.py

<span class="k">def</span> <span class="nf">funcion1_del_modulo</span><span class="p">(</span><span class="n">nombre</span><span class="p">):</span>
  <span class="nb">print</span><span class="p">(</span><span class="s2">"Hola, "</span> <span class="o">+</span> <span class="n">nombre</span> <span class="o">+</span> <span class="s2">", funcion 1"</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">funcion2_del_modulo</span><span class="p">(</span><span class="n">nombre</span><span class="p">):</span>
  <span class="nb">print</span><span class="p">(</span><span class="s2">"Hola, "</span> <span class="o">+</span> <span class="n">nombre</span> <span class="o">+</span> <span class="s2">", funcion 2"</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">funcion3_del_modulo</span><span class="p">(</span><span class="n">nombre</span><span class="p">):</span>
  <span class="nb">print</span><span class="p">(</span><span class="s2">"Hola, "</span> <span class="o">+</span> <span class="n">nombre</span> <span class="o">+</span> <span class="s2">", funcion 3"</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>Writing introduccion_python/modulo2.py
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="kn">from</span> <span class="nn">introduccion_python.modulo2</span> <span class="kn">import</span> <span class="n">funcion2_del_modulo</span>

<span class="n">funcion2_del_modulo</span><span class="p">(</span><span class="s1">'MaximoFN'</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>Hola, MaximoFN, funcion 2
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Podemos usar n√£o apenas os m√≥dulos que criamos, mas tamb√©m os m√≥dulos que j√° est√£o instalados (m√≥dulos embutidos).</p>
<p>Por exemplo, podemos usar o m√≥dulo <code>platform</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="kn">import</span> <span class="nn">platform</span>

<span class="n">x</span> <span class="o">=</span> <span class="n">platform</span><span class="o">.</span><span class="n">system</span><span class="p">()</span>
<span class="n">x</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[8]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>'Linux'</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h3 id="Pontos-de-entrada:-arquivos-como-m%C3%B3dulos-e-n%C3%A3o-como-scripts">Pontos de entrada: arquivos como m√≥dulos e n√£o como scripts<a class="anchor-link" href="#Pontos-de-entrada:-arquivos-como-m%C3%B3dulos-e-n%C3%A3o-como-scripts"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h3>
</section>

<section class="section-block-markdown-cell">
<p>Agora, vamos criar um arquivo chamado <code>module3.py</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="o">%%writefile</span> introduccion_python/modulo3.py

<span class="nb">print</span><span class="p">(</span><span class="s2">"Hola desde modulo3"</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">funcion_del_modulo</span><span class="p">():</span>
  <span class="k">return</span> <span class="s2">"Hola desde la funci√≥n del modulo3"</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>Overwriting introduccion_python/modulo3.py
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Se agora importarmos <code>module3.py</code> para usar a fun√ß√£o <code>module_function</code>, vamos ver o que acontece.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="kn">import</span> <span class="nn">introduccion_python.modulo3</span> <span class="k">as</span> <span class="nn">mod3</span>

<span class="nb">print</span><span class="p">(</span><span class="n">mod3</span><span class="o">.</span><span class="n">funcion_del_modulo</span><span class="p">())</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>Hola desde modulo3
Hola desde la funci√≥n del modulo3
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Podemos ver que o <code>print</code> do <code>modulo3.py</code> foi executado, mas n√£o √© o que quer√≠amos. Isso ocorre porque, quando o arquivo <code>modulo3.py</code> √© chamado, o python o executa como um script.</p>
</section>

<section class="section-block-markdown-cell">
<p>Mas e se quisermos executar o <code>introduction_python/main.py</code> como um script?</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="o">!</span>python<span class="w"> </span>introduccion_python/modulo3.py
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>Hola desde modulo3
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Vemos que apenas o <code>print</code> √© executado, mas n√£o a fun√ß√£o <code>module_function</code>. Se quisermos ter a dualidade de funcionalidade do arquivo <code>module3.py</code>, ou seja, podemos import√°-lo de outro m√≥dulo sem que ele seja executado como um script, execut√°-lo sozinho e fazer com que ele execute a fun√ß√£o que desejamos, usaremos um <code>entry point</code>. Ou seja, usamos a condi√ß√£o <code>if __name__ == '__main__':</code> e, em seguida, indicamos o que queremos que seja executado. Vamos ver isso com um exemplo, vou reescrever o arquivo <code>module3.py</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="o">%%writefile</span> introduccion_python/modulo3.py

<span class="nb">print</span><span class="p">(</span><span class="s2">"Hola desde modulo3"</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">funcion_del_modulo</span><span class="p">():</span>
  <span class="k">return</span> <span class="s2">"Hola desde la funci√≥n del modulo3"</span>

<span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s2">"__main__"</span><span class="p">:</span>
  <span class="n">funcion_del_modulo</span><span class="p">()</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>Overwriting introduccion_python/modulo3.py
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Se eu agora chamar o <code>main.py</code> de outro m√≥dulo, o <code>print</code> n√£o ser√° mais executado.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="kn">import</span> <span class="nn">introduccion_python.modulo3</span> <span class="k">as</span> <span class="nn">mod3</span>

<span class="nb">print</span><span class="p">(</span><span class="n">mod3</span><span class="o">.</span><span class="n">funcion_del_modulo</span><span class="p">())</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>Hola desde la funci√≥n del modulo3
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>E se eu o executar como um script aut√¥nomo, a fun√ß√£o <code>module_function</code> ser√° executada.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="o">!</span>python<span class="w"> </span>introduccion_python/modulo3.py
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>Hola desde modulo3
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h2 id="Pacotes">Pacotes<a class="anchor-link" href="#Pacotes"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h2>
</section>

<section class="section-block-markdown-cell">
<p>No python, podemos criar nossos pr√≥prios pacotes. Para isso, criamos uma pasta com o nome do pacote</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="o">!</span>mkdir<span class="w"> </span>mi_paquete_de_python
</pre></div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Agora, criamos dois arquivos dentro de</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="o">!</span>touch<span class="w"> </span>mi_paquete_de_python/modulo1.py<span class="w"> </span>mi_paquete_de_python/modulo2.py
</pre></div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>E escrevemos nelas</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="o">%%writefile</span> mi_paquete_de_python/modulo1.py

<span class="k">def</span> <span class="nf">funcion1</span><span class="p">():</span>
  <span class="nb">print</span><span class="p">(</span><span class="s2">"Hola desde la funci√≥n 1 del m√≥dulo 1"</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">funcion2</span><span class="p">():</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">"Hola desde la funci√≥n 2 del m√≥dulo 1"</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>Overwriting mi_paquete_de_python/modulo1.py
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="o">%%writefile</span> mi_paquete_de_python/modulo2.py

<span class="k">def</span> <span class="nf">funcion1</span><span class="p">():</span>
  <span class="nb">print</span><span class="p">(</span><span class="s2">"Hola desde la funci√≥n 1 del m√≥dulo 2"</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">funcion2</span><span class="p">():</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">"Hola desde la funci√≥n 2 del m√≥dulo 2"</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>Overwriting mi_paquete_de_python/modulo2.py
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Agora podemos chamar as fun√ß√µes do nosso pacote</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="kn">from</span> <span class="nn">mi_paquete_de_python</span> <span class="kn">import</span> <span class="n">modulo1</span> <span class="k">as</span> <span class="n">mod1</span>
<span class="kn">from</span> <span class="nn">mi_paquete_de_python</span> <span class="kn">import</span> <span class="n">modulo2</span> <span class="k">as</span> <span class="n">mod2</span>

<span class="n">mod1</span><span class="o">.</span><span class="n">funcion1</span><span class="p">()</span>
<span class="n">mod1</span><span class="o">.</span><span class="n">funcion2</span><span class="p">()</span>
<span class="n">mod2</span><span class="o">.</span><span class="n">funcion1</span><span class="p">()</span>
<span class="n">mod2</span><span class="o">.</span><span class="n">funcion2</span><span class="p">()</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>Hola desde la funci√≥n 1 del m√≥dulo 1
Hola desde la funci√≥n 2 del m√≥dulo 1
Hola desde la funci√≥n 1 del m√≥dulo 2
Hola desde la funci√≥n 2 del m√≥dulo 2
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Mas e se o nosso pacote tiver dezenas de arquivos com fun√ß√µes que queremos usar, teremos que importar todos os arquivos um por um. Para evitar isso, voc√™ pode criar um arquivo <code>__init__.py</code> dentro do pacote, onde toda a importa√ß√£o de arquivos √© feita.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="o">!</span>touch<span class="w"> </span>mi_paquete_de_python/__init__.py
</pre></div>
</div>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="o">%%writefile</span> mi_paquete_de_python/__init__.py

<span class="kn">import</span> <span class="nn">modulo1</span>
<span class="kn">import</span> <span class="nn">modulo2</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>Overwriting mi_paquete_de_python/__init__.py
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Agora podemos simplesmente importar nosso pacote, pois todos os m√≥dulos j√° foram importados internamente.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="kn">import</span> <span class="nn">mi_paquete_de_python</span> <span class="k">as</span> <span class="nn">mi_paquete</span>

<span class="n">mi_paquete</span><span class="o">.</span><span class="n">modulo1</span><span class="o">.</span><span class="n">funcion1</span><span class="p">()</span>
<span class="n">mi_paquete</span><span class="o">.</span><span class="n">modulo1</span><span class="o">.</span><span class="n">funcion2</span><span class="p">()</span>
<span class="n">mi_paquete</span><span class="o">.</span><span class="n">modulo2</span><span class="o">.</span><span class="n">funcion1</span><span class="p">()</span>
<span class="n">mi_paquete</span><span class="o">.</span><span class="n">modulo2</span><span class="o">.</span><span class="n">funcion2</span><span class="p">()</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>Hola desde la funci√≥n 1 del m√≥dulo 1
Hola desde la funci√≥n 2 del m√≥dulo 1
Hola desde la funci√≥n 1 del m√≥dulo 2
Hola desde la funci√≥n 2 del m√≥dulo 2
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Dessa forma, s√≥ precisamos fazer uma "importa√ß√£o".</p>
</section>

<section class="section-block-markdown-cell">
<h2 id="12.-Tente...-Exceto">12. Tente... Exceto<a class="anchor-link" href="#12.-Tente...-Exceto"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h2>
</section>

<section class="section-block-markdown-cell">
<p>Quando ocorre um erro, ou uma exce√ß√£o como √© realmente chamado, o Python normalmente para e gera uma mensagem de erro.</p>
<p>Essas exce√ß√µes podem ser tratadas com as instru√ß√µes <code>try</code> e <code>except</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="k">try</span><span class="p">:</span>
  <span class="nb">print</span><span class="p">(</span><span class="n">variable_no_declarada</span><span class="p">)</span>
<span class="k">except</span><span class="p">:</span>
  <span class="nb">print</span><span class="p">(</span><span class="s2">"Ha ocurrido una excepci√≥n"</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>Ha ocurrido una excepci√≥n
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Como o bloco <code>try</code> gera um erro, o bloco <code>except</code> ser√° executado.</p>
<p>Sem o bloco <code>try</code>, o programa travaria e geraria um erro.</p>
</section>

<section class="section-block-markdown-cell">
<p>Voc√™ pode definir quantos blocos de exce√ß√£o desejar, por exemplo, se quiser executar um bloco de c√≥digo especial para um tipo especial de erro</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="k">try</span><span class="p">:</span>
  <span class="nb">print</span><span class="p">(</span><span class="n">variable_no_declarada</span><span class="p">)</span>
<span class="k">except</span> <span class="ne">NameError</span><span class="p">:</span>
  <span class="nb">print</span><span class="p">(</span><span class="s2">"La variable </span><span class="se">\'</span><span class="s2">variable_no_declarada</span><span class="se">\'</span><span class="s2"> no est√° definida"</span><span class="p">)</span>
<span class="k">except</span><span class="p">:</span>
  <span class="nb">print</span><span class="p">(</span><span class="s2">"Algo inesperado ha ocurrido"</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>La variable 'variable_no_declarada' no est√° definida
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>A palavra <code>else</code> pode ser usada para indicar o caso em que n√£o ocorreu um erro.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="k">try</span><span class="p">:</span>
  <span class="nb">print</span><span class="p">(</span><span class="s1">'MaximoFN'</span><span class="p">)</span>
<span class="k">except</span> <span class="ne">NameError</span><span class="p">:</span>
  <span class="nb">print</span><span class="p">(</span><span class="s2">"Ha ocurrido una excepci√≥n"</span><span class="p">)</span>
<span class="k">else</span><span class="p">:</span>
  <span class="nb">print</span><span class="p">(</span><span class="s1">'Todo OK'</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>MaximoFN
Todo OK
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>com a palavra <code>finally</code>, um c√≥digo ser√° executado no final, independentemente de ter ocorrido uma exce√ß√£o ou n√£o.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="k">try</span><span class="p">:</span>
  <span class="nb">print</span><span class="p">(</span><span class="n">variable_no_declarada</span><span class="p">)</span>
<span class="k">except</span><span class="p">:</span>
  <span class="nb">print</span><span class="p">(</span><span class="s2">"Ha ocurrido una excepci√≥n"</span><span class="p">)</span>
<span class="k">finally</span><span class="p">:</span>
  <span class="nb">print</span><span class="p">(</span><span class="s2">"'try except' finallizado"</span><span class="p">)</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>Ha ocurrido una excepci√≥n
'try except' finallizado
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>Isso pode ser √∫til para fechar objetos e limpar recursos.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="k">class</span> <span class="nc">Clase</span><span class="p">:</span>
  <span class="n">variable</span> <span class="o">=</span> <span class="s1">'MaximoFN'</span>

<span class="n">objeto</span> <span class="o">=</span> <span class="n">Clase</span><span class="p">()</span>

<span class="k">try</span><span class="p">:</span>
  <span class="nb">print</span><span class="p">(</span><span class="n">Clase</span><span class="o">.</span><span class="n">mi_variable</span><span class="p">)</span>
<span class="k">except</span><span class="p">:</span>
  <span class="nb">print</span><span class="p">(</span><span class="s2">"Ha ocurrido una excepci√≥n"</span><span class="p">)</span>
<span class="k">finally</span><span class="p">:</span>
  <span class="k">del</span> <span class="n">objeto</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>Ha ocurrido una excepci√≥n
</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h3 id="Criando-uma-exce%C3%A7%C3%A3o">Criando uma exce√ß√£o<a class="anchor-link" href="#Criando-uma-exce%C3%A7%C3%A3o"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h3>
</section>

<section class="section-block-markdown-cell">
<p>Como desenvolvedor Python, voc√™ pode optar por lan√ßar uma exce√ß√£o se ocorrer uma condi√ß√£o.</p>
<p>Para lan√ßar (ou gerar) uma exce√ß√£o, use a palavra-chave <code>raise</code>.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="k">def</span> <span class="nf">division</span><span class="p">(</span><span class="n">numerador</span><span class="p">,</span> <span class="n">denominador</span><span class="p">):</span>
  <span class="k">if</span> <span class="n">denominador</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
    <span class="k">raise</span> <span class="ne">Exception</span><span class="p">(</span><span class="s2">"El denominador no puede ser 0"</span><span class="p">)</span>
  
  <span class="k">return</span> <span class="n">numerador</span><span class="o">/</span><span class="n">denominador</span>

<span class="nb">print</span><span class="p">(</span><span class="n">division</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">0</span><span class="p">))</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-text-output-error">
<pre>
<span class="ansi-red-fg">---------------------------------------------------------------------------</span>
<span class="ansi-red-fg">Exception</span>                                 Traceback (most recent call last)
<span class="ansi-green-fg">&lt;ipython-input-16-33fb6066fa78&gt;</span> in <span class="ansi-cyan-fg">&lt;module&gt;</span>
<span class="ansi-green-intense-fg ansi-bold">      5</span>   <span class="ansi-green-fg">return</span> numerador<span class="ansi-blue-fg">/</span>denominador
<span class="ansi-green-intense-fg ansi-bold">      6</span> 
<span class="ansi-green-fg">----&gt; 7</span><span class="ansi-red-fg"> </span>print<span class="ansi-blue-fg">(</span>division<span class="ansi-blue-fg">(</span><span class="ansi-cyan-fg">10</span><span class="ansi-blue-fg">,</span> <span class="ansi-cyan-fg">0</span><span class="ansi-blue-fg">)</span><span class="ansi-blue-fg">)</span>

<span class="ansi-green-fg">&lt;ipython-input-16-33fb6066fa78&gt;</span> in <span class="ansi-cyan-fg">division</span><span class="ansi-blue-fg">(numerador, denominador)</span>
<span class="ansi-green-intense-fg ansi-bold">      1</span> <span class="ansi-green-fg">def</span> division<span class="ansi-blue-fg">(</span>numerador<span class="ansi-blue-fg">,</span> denominador<span class="ansi-blue-fg">)</span><span class="ansi-blue-fg">:</span>
<span class="ansi-green-intense-fg ansi-bold">      2</span>   <span class="ansi-green-fg">if</span> denominador <span class="ansi-blue-fg">==</span> <span class="ansi-cyan-fg">0</span><span class="ansi-blue-fg">:</span>
<span class="ansi-green-fg">----&gt; 3</span><span class="ansi-red-fg">     </span><span class="ansi-green-fg">raise</span> Exception<span class="ansi-blue-fg">(</span><span class="ansi-blue-fg">"El denominador no puede ser 0"</span><span class="ansi-blue-fg">)</span>
<span class="ansi-green-intense-fg ansi-bold">      4</span> 
<span class="ansi-green-intense-fg ansi-bold">      5</span>   <span class="ansi-green-fg">return</span> numerador<span class="ansi-blue-fg">/</span>denominador

<span class="ansi-red-fg">Exception</span>: El denominador no puede ser 0</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<p>√â poss√≠vel definir o tipo de erro a ser gerado e o texto a ser impresso para o usu√°rio.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="k">def</span> <span class="nf">division</span><span class="p">(</span><span class="n">numerador</span><span class="p">,</span> <span class="n">denominador</span><span class="p">):</span>
  <span class="k">if</span> <span class="n">denominador</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
    <span class="k">raise</span> <span class="ne">TypeError</span><span class="p">(</span><span class="s2">"El denominador no puede ser 0"</span><span class="p">)</span>
  
  <span class="k">return</span> <span class="n">numerador</span><span class="o">/</span><span class="n">denominador</span>

<span class="nb">print</span><span class="p">(</span><span class="n">division</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">0</span><span class="p">))</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-text-output-error">
<pre>
<span class="ansi-red-fg">---------------------------------------------------------------------------</span>
<span class="ansi-red-fg">TypeError</span>                                 Traceback (most recent call last)
<span class="ansi-green-fg">&lt;ipython-input-17-26bfa63ae44c&gt;</span> in <span class="ansi-cyan-fg">&lt;module&gt;</span>
<span class="ansi-green-intense-fg ansi-bold">      5</span>   <span class="ansi-green-fg">return</span> numerador<span class="ansi-blue-fg">/</span>denominador
<span class="ansi-green-intense-fg ansi-bold">      6</span> 
<span class="ansi-green-fg">----&gt; 7</span><span class="ansi-red-fg"> </span>print<span class="ansi-blue-fg">(</span>division<span class="ansi-blue-fg">(</span><span class="ansi-cyan-fg">10</span><span class="ansi-blue-fg">,</span> <span class="ansi-cyan-fg">0</span><span class="ansi-blue-fg">)</span><span class="ansi-blue-fg">)</span>

<span class="ansi-green-fg">&lt;ipython-input-17-26bfa63ae44c&gt;</span> in <span class="ansi-cyan-fg">division</span><span class="ansi-blue-fg">(numerador, denominador)</span>
<span class="ansi-green-intense-fg ansi-bold">      1</span> <span class="ansi-green-fg">def</span> division<span class="ansi-blue-fg">(</span>numerador<span class="ansi-blue-fg">,</span> denominador<span class="ansi-blue-fg">)</span><span class="ansi-blue-fg">:</span>
<span class="ansi-green-intense-fg ansi-bold">      2</span>   <span class="ansi-green-fg">if</span> denominador <span class="ansi-blue-fg">==</span> <span class="ansi-cyan-fg">0</span><span class="ansi-blue-fg">:</span>
<span class="ansi-green-fg">----&gt; 3</span><span class="ansi-red-fg">     </span><span class="ansi-green-fg">raise</span> TypeError<span class="ansi-blue-fg">(</span><span class="ansi-blue-fg">"El denominador no puede ser 0"</span><span class="ansi-blue-fg">)</span>
<span class="ansi-green-intense-fg ansi-bold">      4</span> 
<span class="ansi-green-intense-fg ansi-bold">      5</span>   <span class="ansi-green-fg">return</span> numerador<span class="ansi-blue-fg">/</span>denominador

<span class="ansi-red-fg">TypeError</span>: El denominador no puede ser 0</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h2 id="Palavras-chave-ou-palavras-reservadas">Palavras-chave ou palavras reservadas<a class="anchor-link" href="#Palavras-chave-ou-palavras-reservadas"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h2>
</section>

<section class="section-block-markdown-cell">
<p>Durante esta postagem, em v√°rias ocasi√µes, apareceram palavras reservadas do Python ou "keywords", que s√£o uma s√©rie de palavras reservadas pelo Python.</p>
<p>A seguir, uma lista das "palavras-chave</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="kn">import</span> <span class="nn">keyword</span>

<span class="n">keyword</span><span class="o">.</span><span class="n">kwlist</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt-output-prompt">Out[18]:</div>
<div class="output-text-output-subareaoutput_execute_result">
<pre>['False',
 'None',
 'True',
 'and',
 'as',
 'assert',
 'async',
 'await',
 'break',
 'class',
 'continue',
 'def',
 'del',
 'elif',
 'else',
 'except',
 'finally',
 'for',
 'from',
 'global',
 'if',
 'import',
 'in',
 'is',
 'lambda',
 'nonlocal',
 'not',
 'or',
 'pass',
 'raise',
 'return',
 'try',
 'while',
 'with',
 'yield']</pre>
</div>
</div>
</div>
</section>

<section class="section-block-markdown-cell">
<h2 id="O-Zen-do-Python">O Zen do Python<a class="anchor-link" href="#O-Zen-do-Python"><img class="link-img" alt="link-svg" src={svg_paths.link_svg_path}/></a></h2>
</section>

<section class="section-block-markdown-cell">
<p>Ao importar o m√≥dulo <code>this</code>, podemos ler o <code>zen</code> do Python, ou seja, sua filosofia ou princ√≠pios.</p>
</section>

<section class="section-block-code-cell-">
<div class="input-code">
<div class="highlight hl-ipython3"><pre><span></span><span class="kn">import</span> <span class="nn">this</span>
</pre></div>
</div>
<div class="output-wrapper">
<div class="output-area">
<div class="prompt"></div>
<div class="output-subarea-output-stream-output-stdout-output-text">
<pre>The Zen of Python, by Tim Peters

Beautiful is better than ugly.
Explicit is better than implicit.
Simple is better than complex.
Complex is better than complicated.
Flat is better than nested.
Sparse is better than dense.
Readability counts.
Special cases aren't special enough to break the rules.
Although practicality beats purity.
Errors should never pass silently.
Unless explicitly silenced.
In the face of ambiguity, refuse the temptation to guess.
There should be one-- and preferably only one --obvious way to do it.
Although that way may not be obvious at first unless you're Dutch.
Now is better than never.
Although never is often better than *right* now.
If the implementation is hard to explain, it's a bad idea.
If the implementation is easy to explain, it may be a good idea.
Namespaces are one honking great idea -- let's do more of those!
</pre>
</div>
</div>
</div>
</section>

    </div>

  </section>

</PostLayout>
