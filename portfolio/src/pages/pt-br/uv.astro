---
import PostLayout from '@layouts/PostLayout.astro';
import CodeBlockInputCell from '@components/CodeBlockInputCell.astro';
import CodeBlockOutputCell from '@components/CodeBlockOutputCell.astro';

const { metadata_page } = await import('@portfolio/consts.json');
const { colors } = await import('@portfolio/consts.json');
const { svg_paths } = await import('@portfolio/consts.json');

const page_title = 'Guia uv: A Alternativa Rápida ao conda e venv para Python';
const end_url = 'uv';
const description = 'Cansado da lentidão do conda e do venv? Descubra o uv, o gerenciador de pacotes para Python escrito em Rust. Aprenda a criar ambientes e instalar dependências até 100x mais rápido.';
const keywords = 'uv, python, ambiente, virtual, pacote, gerenciador, conda, venv, rápido, rust, tutorial, guia';
const languaje = 'PT';
const image_path = 'https://images.maximofn.com/uv_thumbnail.webp';
const opening_brace = '{';
const closing_brace = '}';
---

<PostLayout 
    title={page_title}
    languaje={languaje}
    description={description}
    keywords={keywords}
    author={metadata_page.author}
    theme_color={colors.background_color}
    end_url={end_url}
    image_path={image_path}
    image_width=800
    image_height=419
    image_extension=webp
    article_date=2025-03-10+T00:00:00Z
>

  <section class="post-body">


    <aside class="post-index">
      <a class="anchor-link" href="#Download do repositorio"><h2>Download do repositório</h2></a>
      <a class="anchor-link" href="#Instalar uv"><h2>Instalar <code>uv</code></h2></a>
      <a class="anchor-link" href="#Criar ambiente"><h2>Criar ambiente</h2></a>
      <a class="anchor-link" href="#Adicionar pacotes"><h2>Adicionar pacotes</h2></a>
      <a class="anchor-link" href="#Executar um script"><h2>Executar um script</h2></a>
    </aside>


    <div class="post-body-content">
      
      <section class="section-block-markdown-cell">
      </section>
      
      <section class="section-block-markdown-cell">
      <blockquote>
      <p>Aviso: Este post foi traduzido para o português usando um modelo de tradução automática. Por favor, me avise se encontrar algum erro.</p>
      </blockquote>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Até agora, eu tenho controlado meus ambientes com conda. Mas há algum tempo venho lendo muito sobre <code>poetry</code>, mas principalmente sobre <code>uv</code>. Quais são as vantagens do <code>uv</code>? A velocidade. <code>uv</code> é implementado em Rust, por isso gerencia os ambientes e instala pacotes de uma maneira extremamente rápida.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Na tabela a seguir, é mostrada a diferença de velocidade entre diferentes gerenciadores de pacotes. Fonte: <a href="https://github.com/rasbt/LLMs-from-scratch/blob/main/setup/01_optional-python-setup-preferences/native-uv.md#native-uv-python-and-package-management" target="_blank" rel="nofollow noreferrer">LLMs-from-scratch/setup/01_optional-python-setup-preferences/native-uv.md</a></p>
      <table>
        <thead>
          <tr>
            <th>Comando</th>
            <th>Velocidade</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td><code>conda install &#x3C;pkg&#x3E;</code></td>
            <td>lento</td>
          </tr>
          <tr>
            <td><code>uv pip install &#x3C;pkg&#x3E;</code></td>
            <td>entre 5 e 10 vezes mais rápido que o anterior</td>
          </tr>
          <tr>
            <td><code>uv add &#x3C;pkg&#x3E;</code></td>
            <td>entre 2 e 5 vezes mais rápido que o anterior</td>
          </tr>
        </tbody>
      </table>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Vendo a tabela, vale bastante a pena usar <code>uv</code>. Então vamos ver como criar um ambiente e instalar pacotes com <code>uv</code>.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h2 id="Download do repositorio">Download do repositório<a class="anchor-link" href="#Download do repositorio"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 13" src={svg_paths.link_svg_path}/></a></h2>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Como eu disse, estou usando <a href="https://github.com/rasbt/LLMs-from-scratch/blob/main/setup/01_optional-python-setup-preferences/native-uv.md" target="_blank" rel="nofollow noreferrer">LLMs-from-scratch/setup/01_optional-python-setup-preferences[native-uv.md</a> como fonte, então vamos baixar o repositório, instalar o ambiente que ele propõe e ver como executar um script</p>
      <p>Usamos <code>--depth 1</code> para baixar apenas o último commit do repositório e que seja clonado mais rapidamente, não nos interessa o histórico.</p>
      </section>
      
      <CodeBlockInputCell
        text={[
      '<span></span><span class="n">git</span> <span class="n">clone</span> <span class="n">https</span><span class="p">:</span><span class="o">//</span><span class="n">github</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">rasbt</span><span class="o">/</span><span class="n">LLMs</span><span class="o">-</span><span class="n">from</span><span class="o">-</span><span class="n">scratch</span><span class="o">.</span><span class="n">git</span> <span class="o">--</span><span class="n">depth</span> <span class="mi">1</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      
      <CodeBlockOutputCell
        text={[
          'Cloning into &#x27;LLMs-from-scratch&#x27;...',
          'remote: Enumerating objects: 260, done.',
          'remote: Counting objects: 100% (260/260), done.',
          'remote: Compressing objects: 100% (226/226), done.',
          'remote: Total 260 (delta 61), reused 121 (delta 22), pack-reused 0 (from 0)',
          'Receiving objects: 100% (260/260), 1.64 MiB | 6.94 MiB/s, done.',
          'Resolving deltas: 100% (61/61), done.',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Agora vamos ao repositório que baixamos</p>
      </section>
      
      <CodeBlockInputCell
        text={[
      '<span></span><span class="n">cd</span> <span class="n">LLMs</span><span class="o">-</span><span class="n">from</span><span class="o">-</span><span class="n">scratch</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      
      <section class="section-block-markdown-cell">
      <h2 id="Instalar uv">Instalar <code>uv</code><a class="anchor-link" href="#Instalar uv"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 14" src={svg_paths.link_svg_path}/></a></h2>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Se estamos em macOS ou Linux, podemos instalar através do comando</p>
      <div class='highlight'><pre><code class="language-bash">curl -LsSf https://astral.sh/uv/install.sh | sh</code></pre></div>
      <p>Se estamos no Windows</p>
      <div class='highlight'><pre><code class="language-bash">curl -LsSf https://astral.sh/uv/install.sh | sh</code></pre></div>
      </section>
      
      <section class="section-block-markdown-cell">
      <h2 id="Criar ambiente">Criar ambiente<a class="anchor-link" href="#Criar ambiente"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 15" src={svg_paths.link_svg_path}/></a></h2>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Se fizermos um <code>ls</code> podemos ver que há um arquivo chamado <code>pyproject.toml</code>, esse será o arquivo que o <code>uv</code> usará para criar o ambiente.</p>
      </section>
      
      <CodeBlockInputCell
        text={[
      '<span></span><span class="n">ls</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      
      <CodeBlockOutputCell
        text={[
          '2025-03-10-uv.ipynb appendix-D          ch04                pyproject.toml',
          'CITATION.cff        appendix-E          ch05                requirements.txt',
          'LICENSE.txt         ch01                ch06                setup',
          'README.md           ch02                ch07',
          'appendix-A          ch03                pixi.toml',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Então vamos ver o que tem no arquivo</p>
      </section>
      
      <CodeBlockInputCell
        text={[
      '<span></span><span class="n">cat</span> <span class="n">pyproject</span><span class="o">.</span><span class="n">toml</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      
      <CodeBlockOutputCell
        text={[
          '[project]',
          'name = &quot;llms-from-scratch&quot;',
          'version = &quot;0.1.0&quot;',
          'description = &quot;Implement a ChatGPT-like LLM in PyTorch from scratch, step by step&quot;',
          'readme = &quot;README.md&quot;',
          'requires-python = &quot;&amp;gt;=3.10&quot;',
          'dependencies = [',
          '&#x20;&#x20;&#x20;&#x20;&quot;torch&amp;gt;=2.3.0&quot;,',
          '&#x20;&#x20;&#x20;&#x20;&quot;jupyterlab&amp;gt;=4.0&quot;,',
          '&#x20;&#x20;&#x20;&#x20;&quot;tiktoken&amp;gt;=0.5.1&quot;,',
          '&#x20;&#x20;&#x20;&#x20;&quot;matplotlib&amp;gt;=3.7.1&quot;,',
          '&#x20;&#x20;&#x20;&#x20;&quot;tensorflow&amp;gt;=2.18.0&quot;,',
          '&#x20;&#x20;&#x20;&#x20;&quot;tqdm&amp;gt;=4.66.1&quot;,',
          '&#x20;&#x20;&#x20;&#x20;&quot;numpy&amp;gt;=1.26,&amp;lt;2.1&quot;,',
          '&#x20;&#x20;&#x20;&#x20;&quot;pandas&amp;gt;=2.2.1&quot;,',
          '&#x20;&#x20;&#x20;&#x20;&quot;pip&amp;gt;=25.0.1&quot;,',
          ']',
          '[tool.setuptools.packages]',
          'find = &#x7B;&#x7D;',
          '[tool.uv.sources]',
          'llms-from-scratch = &#x7B; workspace = true &#x7D;',
          '[dependency-groups]',
          'dev = [',
          '&#x20;&#x20;&#x20;&#x20;&quot;llms-from-scratch&quot;,',
          ']',
          '[tool.ruff]',
          'line-length = 140',
          '[tool.ruff.lint]',
          'exclude = [&quot;.venv&quot;]',
          '# Ignored rules (W504 removed)',
          'ignore = [',
          '&#x20;&#x20;&#x20;&#x20;&quot;C406&quot;, &quot;E226&quot;, &quot;E402&quot;, &quot;E702&quot;, &quot;E703&quot;,',
          '&#x20;&#x20;&#x20;&#x20;&quot;E722&quot;, &quot;E731&quot;, &quot;E741&quot;',
          ']',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Como pode ser visto, há dados como o nome, versão, etc, e as dependências, que são os pacotes que vamos instalar.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Para criar o ambiente usamos o comando <code>uv sync</code>, além de adicionar a flag <code>--dev</code> para instalar também as dependências de desenvolvimento e a flag <code>--python</code> para especificar a versão do Python que queremos usar.</p>
      </section>
      
      <CodeBlockInputCell
        text={[
      '<span></span><span class="n">uv</span> <span class="n">sync</span> <span class="o">--</span><span class="n">dev</span> <span class="o">--</span><span class="n">python</span> <span class="mf">3.11</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      
      <CodeBlockOutputCell
        text={[
          'Using CPython 3.11.11',
          'Creating virtual environment at: .venv',
          'Resolved 160 packages in 175ms',
          'Installed 139 packages in 1.46s',
          '+ absl-py==2.1.0',
          '+ anyio==4.8.0',
          '+ appnope==0.1.4',
          '+ argon2-cffi==23.1.0',
          '+ argon2-cffi-bindings==21.2.0',
          '+ arrow==1.3.0',
          '+ asttokens==3.0.0',
          '+ astunparse==1.6.3',
          '+ async-lru==2.0.4',
          '+ attrs==25.1.0',
          '+ babel==2.17.0',
          '+ beautifulsoup4==4.13.3',
          '+ bleach==6.2.0',
          '+ certifi==2025.1.31',
          '+ cffi==1.17.1',
          '+ charset-normalizer==3.4.1',
          '+ comm==0.2.2',
          '+ contourpy==1.3.1',
          '+ cycler==0.12.1',
          '+ debugpy==1.8.13',
          '+ decorator==5.2.1',
          '+ defusedxml==0.7.1',
          '+ executing==2.2.0',
          '+ fastjsonschema==2.21.1',
          '+ filelock==3.17.0',
          '+ flatbuffers==25.2.10',
          '+ fonttools==4.56.0',
          '+ fqdn==1.5.1',
          '+ fsspec==2025.3.0',
          '+ gast==0.6.0',
          '+ google-pasta==0.2.0',
          '+ grpcio==1.70.0',
          '+ h11==0.14.0',
          '+ h5py==3.13.0',
          '+ httpcore==1.0.7',
          '+ httpx==0.28.1',
          '+ idna==3.10',
          '+ ipykernel==6.29.5',
          '+ ipython==9.0.2',
          '+ ipython-pygments-lexers==1.1.1',
          '+ isoduration==20.11.0',
          '+ jedi==0.19.2',
          '+ jinja2==3.1.6',
          '+ json5==0.10.0',
          '+ jsonpointer==3.0.0',
          '+ jsonschema==4.23.0',
          '+ jsonschema-specifications==2024.10.1',
          '+ jupyter-client==8.6.3',
          '+ jupyter-core==5.7.2',
          '+ jupyter-events==0.12.0',
          '+ jupyter-lsp==2.2.5',
          '+ jupyter-server==2.15.0',
          '+ jupyter-server-terminals==0.5.3',
          '+ jupyterlab==4.3.5',
          '+ jupyterlab-pygments==0.3.0',
          '+ jupyterlab-server==2.27.3',
          '+ keras==3.9.0',
          '+ kiwisolver==1.4.8',
          '+ libclang==18.1.1',
          '+ markdown==3.7',
          '+ markdown-it-py==3.0.0',
          '+ markupsafe==3.0.2',
          '+ matplotlib==3.10.1',
          '+ matplotlib-inline==0.1.7',
          '+ mdurl==0.1.2',
          '+ mistune==3.1.2',
          '+ ml-dtypes==0.4.1',
          '+ mpmath==1.3.0',
          '+ namex==0.0.8',
          '+ nbclient==0.10.2',
          '+ nbconvert==7.16.6',
          '+ nbformat==5.10.4',
          '+ nest-asyncio==1.6.0',
          '+ networkx==3.4.2',
          '+ notebook-shim==0.2.4',
          '+ numpy==2.0.2',
          '+ opt-einsum==3.4.0',
          '+ optree==0.14.1',
          '+ overrides==7.7.0',
          '+ packaging==24.2',
          '+ pandas==2.2.3',
          '+ pandocfilters==1.5.1',
          '+ parso==0.8.4',
          '+ pexpect==4.9.0',
          '+ pillow==11.1.0',
          '+ pip==25.0.1',
          '+ platformdirs==4.3.6',
          '+ prometheus-client==0.21.1',
          '+ prompt-toolkit==3.0.50',
          '+ protobuf==5.29.3',
          '+ psutil==7.0.0',
          '+ ptyprocess==0.7.0',
          '+ pure-eval==0.2.3',
          '+ pycparser==2.22',
          '+ pygments==2.19.1',
          '+ pyparsing==3.2.1',
          '+ python-dateutil==2.9.0.post0',
          '+ python-json-logger==3.3.0',
          '+ pytz==2025.1',
          '+ pyyaml==6.0.2',
          '+ pyzmq==26.2.1',
          '+ referencing==0.36.2',
          '+ regex==2024.11.6',
          '+ requests==2.32.3',
          '+ rfc3339-validator==0.1.4',
          '+ rfc3986-validator==0.1.1',
          '+ rich==13.9.4',
          '+ rpds-py==0.23.1',
          '+ send2trash==1.8.3',
          '+ setuptools==76.0.0',
          '+ six==1.17.0',
          '+ sniffio==1.3.1',
          '+ soupsieve==2.6',
          '+ stack-data==0.6.3',
          '+ sympy==1.13.1',
          '+ tensorboard==2.18.0',
          '+ tensorboard-data-server==0.7.2',
          '+ tensorflow==2.18.0',
          '+ tensorflow-io-gcs-filesystem==0.37.1',
          '+ termcolor==2.5.0',
          '+ terminado==0.18.1',
          '+ tiktoken==0.9.0',
          '+ tinycss2==1.4.0',
          '+ torch==2.6.0',
          '+ tornado==6.4.2',
          '+ tqdm==4.67.1',
          '+ traitlets==5.14.3',
          '+ types-python-dateutil==2.9.0.20241206',
          '+ typing-extensions==4.12.2',
          '+ tzdata==2025.1',
          '+ uri-template==1.3.0',
          '+ urllib3==2.3.0',
          '+ wcwidth==0.2.13',
          '+ webcolors==24.11.1',
          '+ webencodings==0.5.1',
          '+ websocket-client==1.8.0',
          '+ werkzeug==3.1.3',
          '+ wheel==0.45.1',
          '+ wrapt==1.17.2',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Ele criou o ambiente e instalou os pacotes de uma maneira extremamente rápida</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Além disso, se voltarmos a fazer <code>ls</code> agora veremos uma nova pasta chamada <code>.venv</code>, essa é a pasta do ambiente virtual.</p>
      </section>
      
      <CodeBlockInputCell
        text={[
      '<span></span><span class="n">ls</span> <span class="o">-</span><span class="n">a</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      
      <CodeBlockOutputCell
        text={[
          '.                   CITATION.cff        ch02                pyproject.toml',
          '..                  LICENSE.txt         ch03                requirements.txt',
          '.git                README.md           ch04                setup',
          '.github             appendix-A          ch05                uv.lock',
          '.gitignore          appendix-D          ch06',
          '.venv               appendix-E          ch07',
          '2025-03-10-uv.ipynb ch01                pixi.toml',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <h2 id="Adicionar pacotes">Adicionar pacotes<a class="anchor-link" href="#Adicionar pacotes"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 16" src={svg_paths.link_svg_path}/></a></h2>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Se quisermos adicionar pacotes ao nosso ambiente que não estão no arquivo <code>pyproject.toml</code>, podemos fazer isso com o comando <code>uv add &#x3C;pkg&#x3E;</code>.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Por exemplo, se fizermos <code>cat pyproject.toml | grep dotenv</code> veremos que não está instalado o pacote <code>python-dotenv</code>.</p>
      </section>
      
      <CodeBlockInputCell
        text={[
      '<span></span><span class="n">cat</span> <span class="n">pyproject</span><span class="o">.</span><span class="n">toml</span> <span class="o">|</span> <span class="n">grep</span> <span class="n">dotenv</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      
      <section class="section-block-markdown-cell">
      <p>Então adicionamos o pacote</p>
      </section>
      
      <CodeBlockInputCell
        text={[
      '<span></span><span class="n">uv</span> <span class="n">add</span> <span class="n">dotenv</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      
      <CodeBlockOutputCell
        text={[
          'Resolved 162 packages in 92ms',
          'Installed 2 packages in 5ms                                      ░░░░░░░░░░░░░░░░░░░░ [0/0] Installing wheels...',
          '+ dotenv==0.9.9',
          '+ python-dotenv==1.0.1',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Se agora executarmos <code>cat pyproject.toml | grep dotenv</code> veremos que foi adicionado ao arquivo.</p>
      </section>
      
      <CodeBlockInputCell
        text={[
      '<span></span><span class="n">cat</span> <span class="n">pyproject</span><span class="o">.</span><span class="n">toml</span> <span class="o">|</span> <span class="n">grep</span> <span class="n">dotenv</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      
      <CodeBlockOutputCell
        text={[
          '&#x20;&#x20;&#x20;&#x20;&quot;dotenv&amp;gt;=0.9.9&quot;,',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Isso é muito bom, porque agora com esse novo arquivo <code>pyproject.toml</code> podemos recriar o ambiente com o comando <code>uv sync</code> em qualquer outro computador.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h2 id="Executar um script">Executar um script<a class="anchor-link" href="#Executar um script"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 17" src={svg_paths.link_svg_path}/></a></h2>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Agora que já temos um ambiente, podemos executar um script de duas maneiras, a primeira com <code>uv run python &#x3C;script&#x3E;.py</code>, que ativar o ambiente de <code>.venv</code> e executará o script.</p>
      </section>
      
      <CodeBlockInputCell
        text={[
      '<span></span><span class="n">uv</span> <span class="n">run</span> <span class="n">python</span> <span class="n">setup</span><span class="o">/</span><span class="mi">02</span><span class="n">_installing</span><span class="o">-</span><span class="n">python</span><span class="o">-</span><span class="n">libraries</span><span class="o">/</span><span class="n">python_environment_check</span><span class="o">.</span><span class="n">py</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      
      <CodeBlockOutputCell
        text={[
          '[OK] Your Python version is 3.11.11',
          '[OK] torch 2.6.0',
          '[OK] jupyterlab 4.3.5',
          '[OK] tiktoken 0.9.0',
          '[OK] matplotlib 3.10.1',
          '[OK] tensorflow 2.18.0',
          '[OK] tqdm 4.67.1',
          '[OK] numpy 2.0.2',
          '[OK] pandas 2.2.3',
          '[OK] psutil 7.0.0',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>No entanto, se o que queremos é executar o script diretamente com <code>python &#x3C;script&#x3E;.py</code>, precisamos ativar o ambiente manualmente primeiro.</p>
      </section>
      
      <CodeBlockInputCell
        text={[
      '<span></span><span class="n">source</span> <span class="o">.</span><span class="n">venv</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">activate</span> <span class="o">&amp;</span></span><span class="o">&amp;</span> <span class="n">python</span> <span class="n">setup</span><span class="o">/</span><span class="mi">02</span><span class="n">_installing</span><span class="o">-</span><span class="n">python</span><span class="o">-</span><span class="n">libraries</span><span class="o">/</span><span class="n">python_environment_check</span><span class="o">.</span><span class="n">py</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      
      <CodeBlockOutputCell
        text={[
          '[OK] Your Python version is 3.11.11',
          '[OK] torch 2.6.0',
          '[OK] jupyterlab 4.3.5',
          '[OK] tiktoken 0.9.0',
          '[OK] matplotlib 3.10.1',
          '[OK] tensorflow 2.18.0',
          '[OK] tqdm 4.67.1',
          '[OK] numpy 2.0.2',
          '[OK] pandas 2.2.3',
          '[OK] psutil 7.0.0',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>


























    </div>

  </section>

</PostLayout>
