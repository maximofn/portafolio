---
import PostLayout from '@layouts/PostLayout.astro';
import CodeBlockInputCell from '@components/CodeBlockInputCell.astro';
import CodeBlockOutputCell from '@components/CodeBlockOutputCell.astro';

const { metadata_page } = await import('@portfolio/consts.json');
const { colors } = await import('@portfolio/consts.json');
const { svg_paths } = await import('@portfolio/consts.json');

const page_title = 'Whisper';
const end_url = 'whisper';
const description = 'üëÇ Voc√™ n√£o pode fofocar o que as pessoas no primeiro dizem? Com o whisper, voc√™ pode n√£o apenas fazer isso, mas tamb√©m traduzir, se quiser. Fa√ßa login e saiba como';
const keywords = 'whisper, STT, speech to text, ASR, reconhecimento autom√°tico de voz, openai, python';
const languaje = 'PT';
const image_path = 'https://pub-fb664c455eca46a2ba762a065ac900f7.r2.dev/whisper.webp';
const opening_brace = '{';
const closing_brace = '}';
---

<PostLayout 
    title={page_title}
    languaje={languaje}
    description={description}
    keywords={keywords}
    author={metadata_page.author}
    theme_color={colors.background_color}
    end_url={end_url}
    image_path={image_path}
    image_width=1800
    image_height=1010
    image_extension=webp
    article_date=2023-03-19+T00:00:00Z
>

  <section class="post-body">


    <aside class="post-index">
      <a class="anchor-link" href="#Introdu%C3%A7%C3%A3o"><h2>Introdu√ß√£o</h2></a>
      <a class="anchor-link" href="#Instala%C3%A7%C3%A3o"><h2>Instala√ß√£o</h2></a>
      <a class="anchor-link" href="#Uso"><h2>Uso</h2></a>
    </aside>


    <div class="post-body-content">
      
      <section class="section-block-markdown-cell">
      <h1 id="Sussurro">Sussurro<a class="anchor-link" href="#Sussurro"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 8" src={svg_paths.link_svg_path}/></a></h1>
      </section>
      
      <section class="section-block-markdown-cell">
      <h2 id="Introdu%C3%A7%C3%A3o">Introdu√ß√£o<a class="anchor-link" href="#Introdu%C3%A7%C3%A3o"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 9" src={svg_paths.link_svg_path}/></a></h2>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Este caderno foi traduzido automaticamente para torn√°-lo acess√≠vel a mais pessoas, por favor me avise se voc√™ vir algum erro de digita√ß√£o..</p>
      <p>O Whisper √© um sistema de reconhecimento autom√°tico da fala (ASR) treinado em 680.000 horas de dados supervisionados multil√≠ngues e multitarefa coletados da web. O uso de um conjunto de dados t√£o grande e diversificado leva a uma maior robustez dos sotaques, do ru√≠do de fundo e da linguagem t√©cnica. Al√©m disso, permite a transcri√ß√£o em v√°rios idiomas, assim como a tradu√ß√£o desses idiomas para o ingl√™s.</p>
      <p><a href="https://openai.com/research/whisper" target="_blank" rel="nofollow noreferrer">Wesite</a></p>
      <p><a href="https://cdn.openai.com/papers/whisper.pdf" target="_blank" rel="nofollow noreferrer">Papel</a></p>
      <p><a href="https://github.com/openai/whisper" target="_blank" rel="nofollow noreferrer">GitHub</a></p>
      <p><a href="https://github.com/openai/whisper/blob/main/model-card.md" target="_blank" rel="nofollow noreferrer">Cart√£o modelo</a></p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h2 id="Instala%C3%A7%C3%A3o">Instala√ß√£o<a class="anchor-link" href="#Instala%C3%A7%C3%A3o"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 10" src={svg_paths.link_svg_path}/></a></h2>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>A fim de instalar esta ferramenta √© melhor criar um novo ambiente anaconda.</p>
      </section>
      
      <CodeBlockInputCell
        text={[
      '<span></span><span class="o">!</span>conda<span class="w"> </span>create<span class="w"> </span>-n<span class="w"> </span>whisper',
        ]}
        languaje='python'
      ></CodeBlockInputCell>






      
      <section class="section-block-markdown-cell">
      <p>Entramos no meio ambiente</p>
      </section>
      
      <CodeBlockInputCell
        text={[
      '<span></span><span class="o">!</span>conda<span class="w"> </span>create<span class="w"> </span>-n<span class="w"> </span>whisper',
      '<span></span><span class="o">!</span>conda<span class="w"> </span>activate<span class="w"> </span>whisper',
        ]}
        languaje='python'
      ></CodeBlockInputCell>






      
      <section class="section-block-markdown-cell">
      <p>Instalamos todos os pacotes necess√°rios</p>
      </section>
      
      <CodeBlockInputCell
        text={[
      '<span></span><span class="o">!</span>conda<span class="w"> </span>create<span class="w"> </span>-n<span class="w"> </span>whisper',
      '<span></span><span class="o">!</span>conda<span class="w"> </span>activate<span class="w"> </span>whisper',
      '<span></span><span class="o">!</span>conda<span class="w"> </span>install<span class="w"> </span>pytorch<span class="w"> </span>torchvision<span class="w"> </span>torchaudio<span class="w"> </span>pytorch-cuda<span class="o">=</span><span class="m">11</span>.6<span class="w"> </span>-c<span class="w"> </span>pytorch<span class="w"> </span>-c<span class="w"> </span>nvidia',
        ]}
        languaje='python'
      ></CodeBlockInputCell>






      
      <section class="section-block-markdown-cell">
      <p>Finalmente, instalamos o <code>whisper</code>.</p>
      </section>
      
      <CodeBlockInputCell
        text={[
      '<span></span><span class="o">!</span>conda<span class="w"> </span>create<span class="w"> </span>-n<span class="w"> </span>whisper',
      '<span></span><span class="o">!</span>conda<span class="w"> </span>activate<span class="w"> </span>whisper',
      '<span></span><span class="o">!</span>conda<span class="w"> </span>install<span class="w"> </span>pytorch<span class="w"> </span>torchvision<span class="w"> </span>torchaudio<span class="w"> </span>pytorch-cuda<span class="o">=</span><span class="m">11</span>.6<span class="w"> </span>-c<span class="w"> </span>pytorch<span class="w"> </span>-c<span class="w"> </span>nvidia',
      '<span></span><span class="o">!</span>pip<span class="w"> </span>install<span class="w"> </span>git+https://github.com/openai/whisper.git',
        ]}
        languaje='python'
      ></CodeBlockInputCell>






      
      <section class="section-block-markdown-cell">
      <p>E n√≥s atualizamos <code>ffmpeg</code>.</p>
      </section>
      
      <CodeBlockInputCell
        text={[
      '<span></span><span class="o">!</span>conda<span class="w"> </span>create<span class="w"> </span>-n<span class="w"> </span>whisper',
      '<span></span><span class="o">!</span>conda<span class="w"> </span>activate<span class="w"> </span>whisper',
      '<span></span><span class="o">!</span>conda<span class="w"> </span>install<span class="w"> </span>pytorch<span class="w"> </span>torchvision<span class="w"> </span>torchaudio<span class="w"> </span>pytorch-cuda<span class="o">=</span><span class="m">11</span>.6<span class="w"> </span>-c<span class="w"> </span>pytorch<span class="w"> </span>-c<span class="w"> </span>nvidia',
      '<span></span><span class="o">!</span>pip<span class="w"> </span>install<span class="w"> </span>git+https://github.com/openai/whisper.git',
      '<span></span><span class="o">!</span>sudo<span class="w"> </span>apt<span class="w"> </span>update<span class="w"> </span><span class="o">&amp;&amp;</span><span class="w"> </span>sudo<span class="w"> </span>apt<span class="w"> </span>install<span class="w"> </span>ffmpeg',
        ]}
        languaje='python'
      ></CodeBlockInputCell>






      
      <section class="section-block-markdown-cell">
      <h2 id="Uso">Uso<a class="anchor-link" href="#Uso"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 11" src={svg_paths.link_svg_path}/></a></h2>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Importamos "sussurros".</p>
      </section>
      
      <CodeBlockInputCell
        text={[
      '<span></span><span class="o">!</span>conda<span class="w"> </span>create<span class="w"> </span>-n<span class="w"> </span>whisper',
      '<span></span><span class="o">!</span>conda<span class="w"> </span>activate<span class="w"> </span>whisper',
      '<span></span><span class="o">!</span>conda<span class="w"> </span>install<span class="w"> </span>pytorch<span class="w"> </span>torchvision<span class="w"> </span>torchaudio<span class="w"> </span>pytorch-cuda<span class="o">=</span><span class="m">11</span>.6<span class="w"> </span>-c<span class="w"> </span>pytorch<span class="w"> </span>-c<span class="w"> </span>nvidia',
      '<span></span><span class="o">!</span>pip<span class="w"> </span>install<span class="w"> </span>git+https://github.com/openai/whisper.git',
      '<span></span><span class="o">!</span>sudo<span class="w"> </span>apt<span class="w"> </span>update<span class="w"> </span><span class="o">&amp;&amp;</span><span class="w"> </span>sudo<span class="w"> </span>apt<span class="w"> </span>install<span class="w"> </span>ffmpeg',
      '<span></span><span class="kn">import</span> <span class="nn">whisper</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>






      
      <section class="section-block-markdown-cell">
      <p>Selecionamos o modelo, quanto maior, melhor ele far√°.</p>
      </section>
      
      <CodeBlockInputCell
        text={[
      '<span></span><span class="o">!</span>conda<span class="w"> </span>create<span class="w"> </span>-n<span class="w"> </span>whisper',
      '<span></span><span class="o">!</span>conda<span class="w"> </span>activate<span class="w"> </span>whisper',
      '<span></span><span class="o">!</span>conda<span class="w"> </span>install<span class="w"> </span>pytorch<span class="w"> </span>torchvision<span class="w"> </span>torchaudio<span class="w"> </span>pytorch-cuda<span class="o">=</span><span class="m">11</span>.6<span class="w"> </span>-c<span class="w"> </span>pytorch<span class="w"> </span>-c<span class="w"> </span>nvidia',
      '<span></span><span class="o">!</span>pip<span class="w"> </span>install<span class="w"> </span>git+https://github.com/openai/whisper.git',
      '<span></span><span class="o">!</span>sudo<span class="w"> </span>apt<span class="w"> </span>update<span class="w"> </span><span class="o">&amp;&amp;</span><span class="w"> </span>sudo<span class="w"> </span>apt<span class="w"> </span>install<span class="w"> </span>ffmpeg',
      '<span></span><span class="kn">import</span> <span class="nn">whisper</span>',
      '<span></span><span class="c1"># model = "tiny"</span>',
      '      <span class="c1"># model = "base"</span>',
      '      <span class="c1"># model = "small"</span>',
      '      <span class="c1"># model = "medium"</span>',
      '      <span class="n">model</span> <span class="o">=</span> <span class="s2">"large"</span>',
      '      <span class="n">model</span> <span class="o">=</span> <span class="n">whisper</span><span class="o">.</span><span class="n">load_model</span><span class="p">(</span><span class="n">model</span><span class="p">)</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>











      
      <section class="section-block-markdown-cell">
      <p>Fizemos o upload do √°udio deste antigo (1987) an√∫ncio da Micro Machines.</p>
      <iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; giroscope; picture-in-picture; web-share" allowfullscreen="" frameborder="0" height="315" src="https://www.youtube.com/embed/zLP6oT3uqV8" title="YouTube video player" width="560"></iframe>
      </section>
      
      <CodeBlockInputCell
        text={[
      '<span></span><span class="o">!</span>conda<span class="w"> </span>create<span class="w"> </span>-n<span class="w"> </span>whisper',
      '<span></span><span class="o">!</span>conda<span class="w"> </span>activate<span class="w"> </span>whisper',
      '<span></span><span class="o">!</span>conda<span class="w"> </span>install<span class="w"> </span>pytorch<span class="w"> </span>torchvision<span class="w"> </span>torchaudio<span class="w"> </span>pytorch-cuda<span class="o">=</span><span class="m">11</span>.6<span class="w"> </span>-c<span class="w"> </span>pytorch<span class="w"> </span>-c<span class="w"> </span>nvidia',
      '<span></span><span class="o">!</span>pip<span class="w"> </span>install<span class="w"> </span>git+https://github.com/openai/whisper.git',
      '<span></span><span class="o">!</span>sudo<span class="w"> </span>apt<span class="w"> </span>update<span class="w"> </span><span class="o">&amp;&amp;</span><span class="w"> </span>sudo<span class="w"> </span>apt<span class="w"> </span>install<span class="w"> </span>ffmpeg',
      '<span></span><span class="kn">import</span> <span class="nn">whisper</span>',
      '<span></span><span class="c1"># model = "tiny"</span>',
      '      <span class="c1"># model = "base"</span>',
      '      <span class="c1"># model = "small"</span>',
      '      <span class="c1"># model = "medium"</span>',
      '      <span class="n">model</span> <span class="o">=</span> <span class="s2">"large"</span>',
      '      <span class="n">model</span> <span class="o">=</span> <span class="n">whisper</span><span class="o">.</span><span class="n">load_model</span><span class="p">(</span><span class="n">model</span><span class="p">)</span>',
      '<span></span><span class="n">audio_path</span> <span class="o">=</span> <span class="s2">"MicroMachines.mp3"</span>',
      '      <span class="n">audio</span> <span class="o">=</span> <span class="n">whisper</span><span class="o">.</span><span class="n">load_audio</span><span class="p">(</span><span class="n">audio_path</span><span class="p">)</span>',
      '      <span class="n">audio</span> <span class="o">=</span> <span class="n">whisper</span><span class="o">.</span><span class="n">pad_or_trim</span><span class="p">(</span><span class="n">audio</span><span class="p">)</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>








      
      <CodeBlockInputCell
        text={[
      '<span></span><span class="o">!</span>conda<span class="w"> </span>create<span class="w"> </span>-n<span class="w"> </span>whisper',
      '<span></span><span class="o">!</span>conda<span class="w"> </span>activate<span class="w"> </span>whisper',
      '<span></span><span class="o">!</span>conda<span class="w"> </span>install<span class="w"> </span>pytorch<span class="w"> </span>torchvision<span class="w"> </span>torchaudio<span class="w"> </span>pytorch-cuda<span class="o">=</span><span class="m">11</span>.6<span class="w"> </span>-c<span class="w"> </span>pytorch<span class="w"> </span>-c<span class="w"> </span>nvidia',
      '<span></span><span class="o">!</span>pip<span class="w"> </span>install<span class="w"> </span>git+https://github.com/openai/whisper.git',
      '<span></span><span class="o">!</span>sudo<span class="w"> </span>apt<span class="w"> </span>update<span class="w"> </span><span class="o">&amp;&amp;</span><span class="w"> </span>sudo<span class="w"> </span>apt<span class="w"> </span>install<span class="w"> </span>ffmpeg',
      '<span></span><span class="kn">import</span> <span class="nn">whisper</span>',
      '<span></span><span class="c1"># model = "tiny"</span>',
      '      <span class="c1"># model = "base"</span>',
      '      <span class="c1"># model = "small"</span>',
      '      <span class="c1"># model = "medium"</span>',
      '      <span class="n">model</span> <span class="o">=</span> <span class="s2">"large"</span>',
      '      <span class="n">model</span> <span class="o">=</span> <span class="n">whisper</span><span class="o">.</span><span class="n">load_model</span><span class="p">(</span><span class="n">model</span><span class="p">)</span>',
      '<span></span><span class="n">audio_path</span> <span class="o">=</span> <span class="s2">"MicroMachines.mp3"</span>',
      '      <span class="n">audio</span> <span class="o">=</span> <span class="n">whisper</span><span class="o">.</span><span class="n">load_audio</span><span class="p">(</span><span class="n">audio_path</span><span class="p">)</span>',
      '      <span class="n">audio</span> <span class="o">=</span> <span class="n">whisper</span><span class="o">.</span><span class="n">pad_or_trim</span><span class="p">(</span><span class="n">audio</span><span class="p">)</span>',
      '<span></span><span class="n">mel</span> <span class="o">=</span> <span class="n">whisper</span><span class="o">.</span><span class="n">log_mel_spectrogram</span><span class="p">(</span><span class="n">audio</span><span class="p">)</span><span class="o">.</span><span class="n">to</span><span class="p">(</span><span class="n">model</span><span class="o">.</span><span class="n">device</span><span class="p">)</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>






      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="o">!</span>conda<span class="w"> </span>create<span class="w"> </span>-n<span class="w"> </span>whisper',
          '</span><span class="o">!</span>conda<span class="w"> </span>activate<span class="w"> </span>whisper',
          '</span><span class="o">!</span>conda<span class="w"> </span>install<span class="w"> </span>pytorch<span class="w"> </span>torchvision<span class="w"> </span>torchaudio<span class="w"> </span>pytorch-cuda<span class="o">=</span><span class="m">11</span>.6<span class="w"> </span>-c<span class="w"> </span>pytorch<span class="w"> </span>-c<span class="w"> </span>nvidia',
          '</span><span class="o">!</span>pip<span class="w"> </span>install<span class="w"> </span>git+https://github.com/openai/whisper.git',
          '</span><span class="o">!</span>sudo<span class="w"> </span>apt<span class="w"> </span>update<span class="w"> </span><span class="o">&amp;&amp;</span><span class="w"> </span>sudo<span class="w"> </span>apt<span class="w"> </span>install<span class="w"> </span>ffmpeg',
          '</span><span class="kn">import</span> <span class="nn">whisper</span>',
          '</span><span class="c1"># model = "tiny"</span>',
          '<span class="c1"># model = "base"</span>',
          '<span class="c1"># model = "small"</span>',
          '<span class="c1"># model = "medium"</span>',
          '<span class="n">model</span> <span class="o">=</span> <span class="s2">"large"</span>',
          '<span class="n">model</span> <span class="o">=</span> <span class="n">whisper</span><span class="o">.</span><span class="n">load_model</span><span class="p">(</span><span class="n">model</span><span class="p">)</span>',
          '</span><span class="n">audio_path</span> <span class="o">=</span> <span class="s2">"MicroMachines.mp3"</span>',
          '<span class="n">audio</span> <span class="o">=</span> <span class="n">whisper</span><span class="o">.</span><span class="n">load_audio</span><span class="p">(</span><span class="n">audio_path</span><span class="p">)</span>',
          '<span class="n">audio</span> <span class="o">=</span> <span class="n">whisper</span><span class="o">.</span><span class="n">pad_or_trim</span><span class="p">(</span><span class="n">audio</span><span class="p">)</span>',
          '</span><span class="n">mel</span> <span class="o">=</span> <span class="n">whisper</span><span class="o">.</span><span class="n">log_mel_spectrogram</span><span class="p">(</span><span class="n">audio</span><span class="p">)</span><span class="o">.</span><span class="n">to</span><span class="p">(</span><span class="n">model</span><span class="o">.</span><span class="n">device</span><span class="p">)</span>',
          '</span><span class="n">_</span><span class="p">,</span> <span class="n">probs</span> <span class="o">=</span> <span class="n">model</span><span class="o">.</span><span class="n">detect_language</span><span class="p">(</span><span class="n">mel</span><span class="p">)</span>',
          '<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">"Detected language: </span><span class="si">{</span><span class="nb">max</span><span class="p">(</span><span class="n">probs</span><span class="p">,</span><span class="w"> </span><span class="n">key</span><span class="o">=</span><span class="n">probs</span><span class="o">.</span><span class="n">get</span><span class="p">)</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'Detected language: en',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <CodeBlockInputCell
        text={[
      '<span></span><span class="n">options</span> <span class="o">=</span> <span class="n">whisper</span><span class="o">.</span><span class="n">DecodingOptions</span><span class="p">()</span>',
      '      <span class="n">result</span> <span class="o">=</span> <span class="n">whisper</span><span class="o">.</span><span class="n">decode</span><span class="p">(</span><span class="n">model</span><span class="p">,</span> <span class="n">mel</span><span class="p">,</span> <span class="n">options</span><span class="p">)</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>







      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="n">options</span> <span class="o">=</span> <span class="n">whisper</span><span class="o">.</span><span class="n">DecodingOptions</span><span class="p">()</span>',
          '<span class="n">result</span> <span class="o">=</span> <span class="n">whisper</span><span class="o">.</span><span class="n">decode</span><span class="p">(</span><span class="n">model</span><span class="p">,</span> <span class="n">mel</span><span class="p">,</span> <span class="n">options</span><span class="p">)</span>',
          '</span><span class="n">result</span><span class="o">.</span><span class="n">text</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          '"This is the Micro Machine Man presenting the most midget miniature motorcade of micro machines. Each one has dramatic details, terrific trim, precision paint jobs, plus incredible micro machine pocket play sets. There\'s a police station, fire station, restaurant, service station, and more. Perfect pocket portables to take any place. And there are many miniature play sets to play with and each one comes with its own special edition micro machine vehicle and fun fantastic features that miraculously move. Raise the boat lift at the airport, marina, man the gun turret at the army base, clean your car at the car wash, raise the toll bridge. And these play sets fit together to form a micro machine world. Micro machine pocket play sets so tremendously tiny, so perfectly precise, so dazzlingly detailed, you\'ll want to pocket them all. Micro machines and micro machine pocket play sets sold separately from Galoob. The smaller they are, the better they are."',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      






    </div>

  </section>

</PostLayout>
