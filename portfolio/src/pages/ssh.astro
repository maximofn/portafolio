---
import PostLayout from '@layouts/PostLayout.astro';
import CodeBlockInputCell from '@components/CodeBlockInputCell.astro';
import CodeBlockOutputCell from '@components/CodeBlockOutputCell.astro';

const { metadata_page } = await import('@portfolio/consts.json');
const { colors } = await import('@portfolio/consts.json');
const { svg_paths } = await import('@portfolio/consts.json');

const page_title = 'SSH';
const end_url = 'ssh';
const description = 'Conectarse de manera segura es esencial en el mundo digital de hoy. Descubre cómo SSH te permite establecer comunicaciones cifradas entre tu máquina y servidores remotos. Desde conceptos básicos hasta consejos avanzados, sumérgete en este completo tutorial y domina la artesanía del SSH. 🔐 💼 #SSHSeguro';
const keywords = 'ssh, seguro, conexión, remoto, servidor, terminal, linux, tutorial, guía';
const languaje = 'ES';
const image_path = 'https://pub-fb664c455eca46a2ba762a065ac900f7.r2.dev/SSH.webp';
const opening_brace = '{';
const closing_brace = '}';
---

<PostLayout 
    title={page_title}
    languaje={languaje}
    description={description}
    keywords={keywords}
    author={metadata_page.author}
    theme_color={colors.background_color}
    end_url={end_url}
    image_path={image_path}
    image_width=1366
    image_height=768
    image_extension=webp
    article_date=2023-03-18+T00:00:00Z
>

  <section class="post-body">


    <aside class="post-index">
      <a class="anchor-link" href="#Introducci%C3%B3n-hist%C3%B3rica"><h2>Introducción histórica</h2></a>
      <a class="anchor-link" href="#Cifrado-de-SSH"><h2>Cifrado de <code>SSH</code></h2></a>
      <a class="anchor-link" href="#Requerimentos-SSH"><h2>Requerimentos <code>SSH</code></h2></a>
      <a class="anchor-link" href="#Servicio-SSH"><h3>Servicio <code>SSH</code></h3></a>
      <a class="anchor-link" href="#Cliente-SSH"><h3>Cliente <code>SSH</code></h3></a>
      <a class="anchor-link" href="#Conexi%C3%B3n-por-SSH"><h2>Conexión por <code>SSH</code></h2></a>
      <a class="anchor-link" href="#Conexi%C3%B3n-sin-necesidad-de-contrase%C3%B1a"><h2>Conexión sin necesidad de contraseña</h2></a>
      <a class="anchor-link" href="#Usar-la-terminal-remota-por-SSH"><h2>Usar la terminal remota por <code>SSH</code></h2></a>
      <a class="anchor-link" href="#Proxy-SSH"><h2>Proxy <code>SSH</code></h2></a>
      <a class="anchor-link" href="#Interfaz-gr%C3%A1fica-remota-por-SSH"><h2>Interfaz gráfica remota por <code>SSH</code></h2></a>
      <a class="anchor-link" href="#Tunel-SSH"><h2>Tunel <code>SSH</code></h2></a>
      <a class="anchor-link" href="#Conexi%C3%B3n-reversa"><h2>Conexión reversa</h2></a>
      <a class="anchor-link" href="#Jump"><h2>Jump</h2></a>
      <a class="anchor-link" href="#Archivo-de-configuraci%C3%B3n-SSH-del-usuario"><h2>Archivo de configuración <code>SSH</code> del usuario</h2></a>
      <a class="anchor-link" href="#Dispositivos-con-Alias"><h3>Dispositivos con Alias</h3></a>
      <a class="anchor-link" href="#Proxy"><h3>Proxy</h3></a>
      <a class="anchor-link" href="#Tunel-SSH"><h3>Tunel SSH</h3></a>
      <a class="anchor-link" href="#Conexi%C3%B3n-reversa"><h3>Conexión reversa</h3></a>
      <a class="anchor-link" href="#Jump"><h3>Jump</h3></a>
      <a class="anchor-link" href="#Archivo-de-configuraci%C3%B3n-SSH-del-sistema"><h2>Archivo de configuración <code>SSH</code> del sistema</h2></a>
      <a class="anchor-link" href="#Copia-de-archivos-por-SSH"><h2>Copia de archivos por <code>SSH</code></h2></a>
      <a class="anchor-link" href="#Sincroniazci%C3%B3n-de-archivos-por-SSH"><h2>Sincroniazción de archivos por <code>SSH</code></h2></a>
      <a class="anchor-link" href="#Montar-carpetas-remotas-en-local"><h2>Montar carpetas remotas en local</h2></a>
      <a class="anchor-link" href="#Depurar-la-conexi%C3%B3n-SSH"><h2>Depurar la conexión <code>SSH</code></h2></a>
    </aside>


    <div class="post-body-content">
      
      <section class="section-block-markdown-cell">
      <h1 id="SSH">SSH<a class="anchor-link" href="#SSH"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 0" src={svg_paths.link_svg_path}/></a></h1>
      </section>
      
      <section class="section-block-markdown-cell">
      <h2 id="Introducci%C3%B3n-hist%C3%B3rica">Introducción histórica<a class="anchor-link" href="#Introducci%C3%B3n-hist%C3%B3rica"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 1" src={svg_paths.link_svg_path}/></a></h2>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>En los primeros días de internet se creo el protocolo <code>telnet</code> para poder comunicar varios ordenadores, pero tenía el problema de que no estaba cifrado, por lo que cualquiera que se metiera en medio podía leer la comunicación sin problema, por eso se creó <code>SSH</code> (Secure Shell)</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h2 id="Cifrado-de-SSH">Cifrado de <code>SSH</code><a class="anchor-link" href="#Cifrado-de-SSH"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 2" src={svg_paths.link_svg_path}/></a></h2>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>El sistema de cifrado de <code>SSH</code> funciona mediante el sistema de clave pública y clave privada, de manera que si se encripta la comunicación con una de las dos claves, solo puede ser descifrada por la otra clave</p>
      <p>¿Y por qué hay una clave pública y una clave privada? La clave pública es la que le das a todo el mundo y la clave privada es la que solo tienes que poseer tú.</p>
      <p>De manera que si te quieres comunicar con otro equipo por <code>SSH</code>, primero le das tu clave pública, a continuación encriptas el mensaje con tu clave privada y solo se puede desencriptar el mensaje con la clave pública que le has dado al otro equipo</p>
      <p>De la misma manera ocurre a la inversa, si el otro equipo te quiere mandar un mensaje, lo encripta con tu clave pública y solo se puede desencriptar con la clave privada que solo tú posees</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h2 id="Requerimentos-SSH">Requerimentos <code>SSH</code><a class="anchor-link" href="#Requerimentos-SSH"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 3" src={svg_paths.link_svg_path}/></a></h2>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="Servicio-SSH">Servicio <code>SSH</code><a class="anchor-link" href="#Servicio-SSH"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 4" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Para poder usar <code>SSH</code> necesitas tener un servicio de <code>SSH</code>. En <code>Linux</code> normalmete ya viene instalado, pero si no es así lo puedes instalar mediante</p>
      </section>
      
      <CodeBlockInputCell
        text={[
      '<span></span><span class="o">!</span>apt<span class="w"> </span>install<span class="w"> </span>openssh-server',
        ]}
        languaje='python'
      ></CodeBlockInputCell>






      
      <section class="section-block-markdown-cell">
      <p>Durante el proceso de instalación te pedirá tu ubicación para ajustar el time zone</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>A continuación levantamos el servicio</p>
      </section>
      
      <CodeBlockInputCell
        text={[
      '<span></span><span class="o">!</span>apt<span class="w"> </span>install<span class="w"> </span>openssh-server',
      '<span></span><span class="o">!</span>systemctl<span class="w"> </span><span class="nb">enable</span><span class="w"> </span>ssh',
        ]}
        languaje='python'
      ></CodeBlockInputCell>






      
      <section class="section-block-markdown-cell">
      <h3 id="Cliente-SSH">Cliente <code>SSH</code><a class="anchor-link" href="#Cliente-SSH"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 5" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Una vez tienes el servicio necesitas un cliente, aunque en <code>Linux</code> suele venir instalado, pero si no es así lo puedes instalar mediante</p>
      </section>
      
      <CodeBlockInputCell
        text={[
      '<span></span><span class="o">!</span>apt<span class="w"> </span>install<span class="w"> </span>openssh-server',
      '<span></span><span class="o">!</span>systemctl<span class="w"> </span><span class="nb">enable</span><span class="w"> </span>ssh',
      '<span></span><span class="o">!</span>apt<span class="w"> </span>install<span class="w"> </span>openssh-client',
        ]}
        languaje='python'
      ></CodeBlockInputCell>






      
      <section class="section-block-markdown-cell">
      <h2 id="Conexi%C3%B3n-por-SSH">Conexión por <code>SSH</code><a class="anchor-link" href="#Conexi%C3%B3n-por-SSH"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 6" src={svg_paths.link_svg_path}/></a></h2>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Para conectarte por <code>SSH</code> necesitas introducir el comando <code>ssh &lt;user&gt;@&lt;ip&gt;</code></p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="o">!</span>apt<span class="w"> </span>install<span class="w"> </span>openssh-server',
          '</span><span class="o">!</span>systemctl<span class="w"> </span><span class="nb">enable</span><span class="w"> </span>ssh',
          '</span><span class="o">!</span>apt<span class="w"> </span>install<span class="w"> </span>openssh-client',
          '</span><span class="o">!</span>ssh<span class="w"> </span>root@172.17.0.1',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'The authenticity of host \'172.17.0.1 (172.17.0.1)\' can\'t be established.',
          'ECDSA key fingerprint is SHA256:M+qsqSC4HiYztm1ij8iDkh9KHJz+pxrTm9GTZIf2N9k.',
          'Are you sure you want to continue connecting (yes/no/[fingerprint])?',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Como puedes ver, la primera vez te pregunta si quieres guardar el <code>fingerprint</code>, esto es para que si la próxima vez que te conectes a la misma máquina (a la misma clave pública) si ha cambiado el <code>fingerprint</code> debes tener cuidado porque puede haber algo peligroso, como que hagan pasarse por esa máquina.</p>
      <p>Si nos fiamos introducimos <code>yes</code></p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="o">!</span>ssh<span class="w"> </span>root@172.17.0.1',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'The authenticity of host \'172.17.0.1 (172.17.0.1)\' can\'t be established.',
          'ECDSA key fingerprint is SHA256:M+qsqSC4HiYztm1ij8iDkh9KHJz+pxrTm9GTZIf2N9k.',
          'Are you sure you want to continue connecting (yes/no/[fingerprint])? yes',
          'Warning: Permanently added \'172.17.0.1\' (ECDSA) to the list of known hosts.',
          'root@172.17.0.1\'s password:',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>A continuación, la máquina a la que nos conectamos nos pide la contraseña, la introducimos y ya estaremos dentro de la máquina</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="o">!</span>ssh<span class="w"> </span>root@172.17.0.1',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'The authenticity of host \'172.17.0.1 (172.17.0.1)\' can\'t be established.',
          'ECDSA key fingerprint is SHA256:M+qsqSC4HiYztm1ij8iDkh9KHJz+pxrTm9GTZIf2N9k.',
          'Are you sure you want to continue connecting (yes/no/[fingerprint])? yes',
          'Warning: Permanently added \'172.17.0.1\' (ECDSA) to the list of known hosts.',
          'root@172.17.0.1\'s password: ',
          'Welcome to Ubuntu 20.04.5 LTS (GNU/Linux 5.15.0-58-generic x86_64)',
          ' * Documentation:  https://help.ubuntu.com',
          ' * Management:     https://landscape.canonical.com',
          ' * Support:        https://ubuntu.com/advantage',
          '1 device has a firmware upgrade available.',
          'Run `fwupdmgr get-upgrades` for more information.',
          ' * Introducing Expanded Security Maintenance for Applications.',
          '   Receive updates to over 25,000 software packages with your',
          '   Ubuntu Pro subscription. Free for personal use.',
          '     https://ubuntu.com/pro',
          'Se pueden aplicar 0 actualizaciones de forma inmediata.',
          'Your Hardware Enablement Stack (HWE) is supported until April 2025.',
          'Last login: Thu Dec  1 16:32:23 2022 from 127.0.0.1',
          'root@172.17.0.1:~$',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <h2 id="Conexi%C3%B3n-sin-necesidad-de-contrase%C3%B1a">Conexión sin necesidad de contraseña<a class="anchor-link" href="#Conexi%C3%B3n-sin-necesidad-de-contrase%C3%B1a"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 7" src={svg_paths.link_svg_path}/></a></h2>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Como hemos visto cuando nos conectamos nos pide la contraseña de la máquina de destino, pero si es una máquina a la que nos vamos a conectar mucho podemos hacer que no nos pida la contraseña cada vez que nos queramos conectar</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Para ellos, en primer lugar generamos una clave <code>ssh</code> mediante <code>ssh-keygen</code></p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="o">!</span>ssh-keygen',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'Generating public/private rsa key pair.',
          'Enter file in which to save the key (/root/.ssh/id_rsa): ',
          'Enter passphrase (empty for no passphrase): ',
          'Enter same passphrase again: ',
          'Your identification has been saved in /root/.ssh/id_rsa',
          'Your public key has been saved in /root/.ssh/id_rsa.pub',
          'The key fingerprint is:',
          'SHA256:4HxRXkVkcK5kNXNyzakfQ6t8a24wRGCUYz4s5KL5ZEc root@e108f6f395b3',
          'The key\'s randomart image is:',
          '+---[RSA 3072]----+',
          '|          o+==@.=|',
          '|         +.= * Oo|',
          '|      . + = = + .|',
          '|     o o E * + + |',
          '|      = S . = o o|',
          '|     o + .   = o |',
          '|      + .     + .|',
          '|       .       + |',
          '|              +. |',
          '+----[SHA256]-----+',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Como vemos, primero nos pregunta dónde queremos guardar la clave, si no introducimos nada nos la guarda en la ruta por defecto. Y a continuación una frase para generar la clave, <strong>si escribes una frase debes recordarla siempre</strong>. Además si escribes una frase, te la pédirá cada vez que intentes acceder a la clave, por lo que cada vez que queramos acceder a la máquina por medio de <code>SSH</code>, no nos pedirá la contraseña de la máquina, pero sí esta frase. Por lo que tu eliges si no introduces una frase para que nunca te la pida, o si sí la introduces y siempre las vas a meter.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>A continuación le pedimos a la máquina remota que se guarde nuestra clave mediante <code>ssh-copy-id &lt;user&gt;@&lt;id&gt;:</code></p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="o">!</span>ssh-copy-id<span class="w"> </span>root@172.17.0.1:',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          '/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/root/.ssh/id_rsa.pub"',
          '/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed',
          '/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys',
          'root@172.17.0.1\'s password: ',
          'Number of key(s) added: 1',
          'Now try logging into the machine, with:   "ssh \'root@172.17.0.1\'"',
          'and check to make sure that only the key(s) you wanted were added.',
          'root@103b6040196a:/# ssh root@172.17.0.1',
          'Welcome to Ubuntu 20.04.5 LTS (GNU/Linux 5.15.0-58-generic x86_64)',
          ' * Documentation:  https://help.ubuntu.com',
          ' * Management:     https://landscape.canonical.com',
          ' * Support:        https://ubuntu.com/advantage',
          '4 devices have a firmware upgrade available.',
          'Run `fwupdmgr get-upgrades` for more information.',
          '58 updates can be applied immediately.',
          '41 of these updates are standard security updates.',
          'To see these additional updates run: apt list --upgradable',
          'New release \'22.04.1 LTS\' available.',
          'Run \'do-release-upgrade\' to upgrade to it.',
          'Your Hardware Enablement Stack (HWE) is supported until April 2025.',
          'Last login: Thu Feb  2 08:05:48 2023 from 172.17.0.2',
          '(base) root@172.17.0.1:~$',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <h2 id="Usar-la-terminal-remota-por-SSH">Usar la terminal remota por <code>SSH</code><a class="anchor-link" href="#Usar-la-terminal-remota-por-SSH"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 8" src={svg_paths.link_svg_path}/></a></h2>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>A lo mejor no nos hace falta tener que meternos a la máquina remota porque solo necesitamos ejecutar un solo comando, por lo que podemos usar remotamente su terminal añadiendo el flag <code>-t</code> al comando <code>SSH</code>, es decir, mediante <code>ssh -t &lt;user&gt;@&lt;id&gt; &lt;command&gt;</code></p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="o">!</span>ssh<span class="w"> </span>-t<span class="w"> </span>root@172.17.0.1<span class="w"> </span>ping<span class="w"> </span>-c<span class="w"> </span><span class="m">4</span><span class="w"> </span>google.com',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'PING google.com (172.217.168.174) 56(84) bytes of data.',
          '64 bytes from mad07s10-in-f14.1e100.net (172.217.168.174): icmp_seq=1 ttl=111 time=2.94 ms',
          '64 bytes from mad07s10-in-f14.1e100.net (172.217.168.174): icmp_seq=2 ttl=111 time=2.55 ms',
          '64 bytes from mad07s10-in-f14.1e100.net (172.217.168.174): icmp_seq=3 ttl=111 time=2.78 ms',
          '64 bytes from mad07s10-in-f14.1e100.net (172.217.168.174): icmp_seq=4 ttl=111 time=2.69 ms',
          '--- google.com ping statistics ---',
          '4 packets transmitted, 4 received, 0% packet loss, time 3005ms',
          'rtt min/avg/max/mdev = 2.550/2.739/2.940/0.142 ms',
          'Connection to 172.17.0.1 closed.',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Como se puede ver se realiza el comando en la máquina remota y cuando termina, en la última línea nos dice que se cierra la conexión</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h2 id="Proxy-SSH">Proxy <code>SSH</code><a class="anchor-link" href="#Proxy-SSH"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 9" src={svg_paths.link_svg_path}/></a></h2>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Si estás navegando en un lugar no muy seguro, o en un lugar que tiene un proxy que no te deja acceder a algunos puertos, puedes navegar a través del proxy de otra máquina meidante <code>SSH</code>, esto se puede hacer añadiendo el flag <code>-D</code> y el puerto por el que quieres realizar la conexión al proxy remoto, como el puerto para el <code>tcp/ip</code> es el <code>9999</code> el comando podría quedar como <code>ssh -D 9999 &lt;user&gt;@&lt;id&gt;</code></p>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Para que esto se vea mejor, antes de ejecutarlo obtengo mi IP píbluca</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="o">!</span>curl<span class="w"> </span>ifconfig.me',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          '188.127.184.59',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Ahora utilizo el proxy de un servidor web que tengo levantado</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="o">!</span>ssh<span class="w"> </span>-D<span class="w"> </span><span class="m">9999</span><span class="w"> </span>root@194.62.99.222',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'Welcome to Ubuntu 22.04.1 LTS (GNU/Linux 5.15.0-53-generic x86_64)',
          ' * Documentation:  https://help.ubuntu.com',
          ' * Management:     https://landscape.canonical.com',
          ' * Support:        https://ubuntu.com/advantage',
          '  System information as of Wed Feb 22 06:08:51 AM UTC 2023',
          '  System load:           0.02978515625',
          '  Usage of /:            11.7% of 24.53GB',
          '  Memory usage:          33%',
          '  Swap usage:            0%',
          '  Processes:             89',
          '  Users logged in:       0',
          '  IPv4 address for eth0: 194.62.99.222',
          '  IPv4 address for eth1: 10.7.0.168',
          '  IPv6 address for eth2: 2a04:3542:8000:1000:d48a:cbff:fefb:5b1',
          '0 updates can be applied immediately.',
          'The list of available updates is more than a week old.',
          'To check for new updates run: sudo apt update',
          'Last login: Wed Feb 22 06:02:35 2023 from 188.127.184.59',
          'root@server1:~#',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Cambio la configuración proxy de mi ordenador</p>
      <p><img decoding="async" onerror="this.parentNode.removeChild(this)" alt="proxy ssh" src="https://pub-fb664c455eca46a2ba762a065ac900f7.r2.dev/proxy_ssh.webp" width="977" height="818"/></p>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Ahora vuelvo a mirar mi IP pública, pero cogiendo el proxy recientemente configurado</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="o">!</span>curl<span class="w"> </span>-x<span class="w"> </span>socks5h://localhost:9999<span class="w"> </span>ifconfig.me',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          '194.62.99.222',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Vemos que obtenemos la IP pública del servidor</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h2 id="Interfaz-gr%C3%A1fica-remota-por-SSH">Interfaz gráfica remota por <code>SSH</code><a class="anchor-link" href="#Interfaz-gr%C3%A1fica-remota-por-SSH"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 10" src={svg_paths.link_svg_path}/></a></h2>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>En linux la interfaz gŕafica es un servidor, por lo que nos podemos beneficiar de ello y podemos ejecutar programas con interfaces gráficas que están en una máquina remota por <code>SSH</code>, para ello hay que usar el flag <code>-X</code>. El comando quedaría <code>ssh -X &lt;user&gt;@&lt;id&gt;</code></p>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Primero entro a mi servidor e instalo <code>xeyes</code> mediante <code>sudo apt install x11-apps</code> y después lo ejecuto remotamente desde mi ordenador</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="o">!</span>ssh<span class="w"> </span>-X<span class="w"> </span>root@194.62.99.222',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'Welcome to Ubuntu 22.04.1 LTS (GNU/Linux 5.15.0-53-generic x86_64)',
          'Last login: Wed Feb 22 06:39:52 2023 from 188.127.184.59',
          '/usr/bin/xauth:  file /root/.Xauthority does not exist',
          'root@server1:~sudo apt install x11-apps',
          'root@server1:~#xeyes',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Ahora en mi ordenador se abre la ventana de <code>xeyes</code> pero no se está ejecutando en mi ordenador</p>
      <p><img decoding="async" onerror="this.parentNode.removeChild(this)" alt="xeyes" src="https://pub-fb664c455eca46a2ba762a065ac900f7.r2.dev/xeyes.webp" width="158" height="151"/></p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h2 id="Tunel-SSH">Tunel <code>SSH</code><a class="anchor-link" href="#Tunel-SSH"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 11" src={svg_paths.link_svg_path}/></a></h2>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Como he comentado, he levantado un servidor al que tengo acceso por ssh</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="o">!</span>ssh<span class="w"> </span>root@194.62.99.222',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'Welcome to Ubuntu 22.04.1 LTS (GNU/Linux 5.15.0-53-generic x86_64)',
          'Last login: Wed Feb 22 06:40:58 2023 from 188.127.184.59',
          'root@server1:~#',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Y levanto también un segundo servidor desde el que tengo acceso desde el <code>server1</code>, pero no tengo acceso desde mi ordenador</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>A continuación intento acceder al <code>server2</code> desde mi ordenador y vemos que no puedo</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="o">!</span>ssh<span class="w"> </span>root@194.62.99.235',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'ssh: connect to host 194.62.99.235 port 22: Connection timed out',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Y a continuación intento acceder al <code>server2</code> desde el <code>server1</code> y vemos que sí puedo</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="o">!</span>root@server1:~#<span class="w"> </span>ssh<span class="w"> </span>root@10.7.2.228',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'Welcome to Ubuntu 22.04.1 LTS (GNU/Linux 5.15.0-53-generic x86_64)',
          'Last login: Wed Feb 22 06:59:01 2023 from 10.7.0.168',
          'root@server2:~#',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Así que lo que creamos es un tunel desde mi ordenador hasta el <code>server2</code> a través del <code>server1</code>, para ello usamos el flag <code>-L</code>. Para crear el tunel hay que indicar el puerto de tu ordenador en el que vas a crear el tunel, a continuación la <code>IP</code> de destino del tunel, el puerto por el que irá el tunel y por último el disposicivo que creará el tunel. Quedaría así</p>
      <div class="highlight"><pre><span></span>ssh<span class="w"> </span>-L<span class="w"> </span><span class="p">&amp;</span>ltHOST<span class="w"> </span>PORT<span class="p">&amp;</span>gt:<span class="p">&amp;</span>ltDEST<span class="w"> </span>IP<span class="p">&amp;</span>gt:<span class="p">&amp;</span>ltTUNNEL<span class="w"> </span>PORT<span class="p">&amp;</span>gt<span class="w"> </span><span class="p">&amp;</span>ltTUNNEL<span class="w"> </span>CREATOR<span class="w"> </span>USER<span class="p">&amp;</span>gt@<span class="p">&amp;</span>ltTUNNEL<span class="w"> </span>CREATOR<span class="w"> </span>IP<span class="p">&amp;</span>gt
      </pre></div>
      <p>Veámoslo con mi ejemplo, tengo el <code>server1</code> con una <code>IP</code> pública que podemos llamar <code>ip_pub1</code> y al que tengo acceso por <code>SSH</code> y una <code>IP</code> privada que podemos llamar <code>ip_priv1</code> que está dentro de la misma red que <code>server2</code>. Y tengo el <code>server2</code> con una <code>IP</code> pública que podemos llamar <code>ip_pub2</code> a la que no tengo acceso por <code>SSH</code> y una <code>IP</code> que podemos llamar <code>ip_priv2</code> dentro de la misma red de <code>server1</code></p>
      <p>Primero creo el tunel</p>
      <div class="highlight"><pre><span></span>ssh<span class="w"> </span>-L<span class="w"> </span>host_port:ip_priv2:22<span class="w"> </span>root@ip_pub1
      </pre></div>
      <p>He creado un tunel hasta la <code>IP</code> privada del <code>server2</code> a través de la <code>IP</code> pública del <code>server1</code></p>
      <p>Por último, para conectarme al <code>server2</code> lo hago a través del <code>localhost</code> y del puerto del host que he declarado en el tunel</p>
      <div class="highlight"><pre><span></span>ssh<span class="w"> </span>-p<span class="w"> </span><span class="m">2020</span><span class="w"> </span>root@localhost
      </pre></div>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Vamos a verlo en la realidad, las <code>IP</code>s de mis servidores son</p>
      <ul>
      <li><code>server1</code>:<ul>
      <li><code>IP</code> pública: <code>194.62.99.222</code></li>
      <li><code>IP</code> privada: <code>10.7.0.168</code></li>
      </ul>
      </li>
      <li><code>server2</code>:<ul>
      <li><code>IP</code> pública: <code>194.62.99.235</code></li>
      <li><code>IP</code> privada: <code>10.7.2.228</code></li>
      </ul>
      </li>
      </ul>
      <p>Primero creo el tunel</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="o">!</span>ssh<span class="w"> </span>-L<span class="w"> </span><span class="m">2020</span>:10.7.2.228:22<span class="w"> </span>root@194.62.99.222',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'Welcome to Ubuntu 22.04.1 LTS (GNU/Linux 5.15.0-53-generic x86_64)',
          ' * Documentation:  https://help.ubuntu.com',
          ' * Management:     https://landscape.canonical.com',
          ' * Support:        https://ubuntu.com/advantage',
          '  System information as of Wed Feb 22 11:13:39 AM UTC 2023',
          '  System load:           0.0',
          '  Usage of /:            13.3% of 24.53GB',
          '  Memory usage:          36%',
          '  Swap usage:            0%',
          '  Processes:             91',
          '  Users logged in:       1',
          '  IPv4 address for eth0: 194.62.99.222',
          '  IPv4 address for eth1: 10.7.0.168',
          '  IPv6 address for eth2: 2a04:3542:8000:1000:d48a:cbff:fefb:5b1',
          '101 updates can be applied immediately.',
          '60 of these updates are standard security updates.',
          'To see these additional updates run: apt list --upgradable',
          'Last login: Wed Feb 22 09:29:52 2023 from 188.127.184.59',
          ']0;root@server1: ~<span class="ansi-green-intense-fg ansi-bold">root@server1</span>:<span class="ansi-blue-intense-fg ansi-bold">~</span># ^C',
          ']0;root@server1: ~<span class="ansi-green-intense-fg ansi-bold">root@server1</span>:<span class="ansi-blue-intense-fg ansi-bold">~</span># ',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Con el tunel creado ya me puedo conectar al <code>server2</code> desde mi ordenador</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="o">!</span>ssh<span class="w"> </span>-p<span class="w"> </span><span class="m">2020</span><span class="w"> </span>root@localhost',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'Welcome to Ubuntu 22.04.1 LTS (GNU/Linux 5.15.0-53-generic x86_64)',
          ' * Documentation:  https://help.ubuntu.com',
          ' * Management:     https://landscape.canonical.com',
          ' * Support:        https://ubuntu.com/advantage',
          '  System information as of Wed Feb 22 11:14:15 AM UTC 2023',
          '  System load:           0.0',
          '  Usage of /:            13.3% of 24.53GB',
          '  Memory usage:          33%',
          '  Swap usage:            0%',
          '  Processes:             90',
          '  Users logged in:       0',
          '  IPv4 address for eth0: 194.62.99.235',
          '  IPv4 address for eth1: 10.7.2.228',
          '  IPv6 address for eth2: 2a04:3542:8000:1000:d48a:cbff:fefb:7f47',
          ' * Strictly confined Kubernetes makes edge and IoT secure. Learn how MicroK8s',
          '   just raised the bar for easy, resilient and secure K8s cluster deployment.',
          '   https://ubuntu.com/engage/secure-kubernetes-at-the-edge',
          '101 updates can be applied immediately.',
          '60 of these updates are standard security updates.',
          'To see these additional updates run: apt list --upgradable',
          'Last login: Wed Feb 22 11:14:16 2023 from 10.7.0.168',
          ']0;root@server2: ~<span class="ansi-green-intense-fg ansi-bold">root@server2</span>:<span class="ansi-blue-intense-fg ansi-bold">~</span># ^C',
          ']0;root@server2: ~<span class="ansi-green-intense-fg ansi-bold">root@server2</span>:<span class="ansi-blue-intense-fg ansi-bold">~</span># ',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <h2 id="Conexi%C3%B3n-reversa">Conexión reversa<a class="anchor-link" href="#Conexi%C3%B3n-reversa"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 12" src={svg_paths.link_svg_path}/></a></h2>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Volvamos a suponer que me quiero conectar al <code>server2</code>, pero ahora no puedo hacer, por la razón que sea, un tunel desde el <code>server1</code>. Lo que podemos hacer es crear una conexión reversa desde otro servidor.</p>
      <p>Supongamos que tengo un tercer servidor, llamado <code>server3</code>, al que se tiene acceso por <code>SSH</code> desde cualquier lado, es decir, tanto yo desde mi ordenador, como el <code>server2</code> tienen acceso. Por lo que si podemos acceder físicamente al <code>server2</code> se puede hacer una conexión reversa desde el <code>server2</code> al <code>server3</code></p>
      <pre><code>ssh -R &amp;ltserver3port&amp;gt:localhost:22 root@&amp;ltIPserver3&amp;gt</code></pre>
      <p>Con esto, lo que he hecho es habilitar una conexión desde el <code>server3</code> al <code>server2</code> (cosa que antes no se podía), a través del <code>localhost</code> y puerto <code>server3port</code> del <code>server3</code></p>
      <p>Ahora desde mi ordenador me puedo conectar al <code>server3</code> y desde el <code>server3</code> nos podemos conectar al <code>server2</code> mediante</p>
      <div class="highlight"><pre><span></span>ssh<span class="w"> </span>-p<span class="w"> </span><span class="p">&amp;</span>ltserver3port<span class="p">&amp;</span>gt<span class="w"> </span>root@localhost
      </pre></div>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Veámoslo con los datos de mis servidores</p>
      <ul>
      <li><code>server2</code>:<ul>
      <li><code>IP</code> pública: <code>194.62.99.235</code></li>
      </ul>
      </li>
      <li><code>server3</code>:<ul>
      <li><code>IP</code> pública: <code>194.62.96.236</code></li>
      </ul>
      </li>
      </ul>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Primero hago la conexión reversa desde el <code>server2</code> al <code>server3</code></p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="o">!</span>root@server2:~#<span class="w"> </span>ssh<span class="w"> </span>-R<span class="w"> </span><span class="m">2020</span>:localhost:22<span class="w"> </span>root@194.62.96.236',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'Welcome to Ubuntu 22.04.1 LTS (GNU/Linux 5.15.0-53-generic x86_64)',
          'Last login: Wed Feb 22 15:25:58 2023 from 188.127.184.59',
          'root@server3:~#',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Ahora me conecto al <code>server3</code></p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="o">!</span>ssh<span class="w"> </span>root@194.62.96.236',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'Welcome to Ubuntu 22.04.1 LTS (GNU/Linux 5.15.0-53-generic x86_64)',
          'Last login: Wed Feb 22 15:12:19 2023 from 188.127.184.59',
          'root@server3:~#',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Y ahora que estoy en el <code>server3</code> me conecto al <code>server2</code></p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="o">!</span>root@server3:~#<span class="w"> </span>ssh<span class="w"> </span>-p<span class="w"> </span><span class="m">2020</span><span class="w"> </span>root@localhost',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'Welcome to Ubuntu 22.04.1 LTS (GNU/Linux 5.15.0-53-generic x86_64)',
          'Last login: Wed Feb 22 15:12:07 2023 from 188.127.184.59',
          'root@server2:~#',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Conseguido! A través de mi ordenador no puedo conectarme directamente al <code>server2</code>, pero al conectarme al <code>server3</code> he podido acceder al <code>server2</code> gracias a la conexión inversa que había hecho del <code>server2</code> al <code>server3</code></p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h2 id="Jump">Jump<a class="anchor-link" href="#Jump"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 13" src={svg_paths.link_svg_path}/></a></h2>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Por último, otra manera de entrar al <code>server2</code> es entrando al <code>server1</code> y a continuación, desde el <code>server1</code> entrar al <code>server2</code>. Pero esto es un poco engorroso, porque primero hay que hacer una conexión <code>SSH</code> al <code>server1</code> y luego otra al <code>server2</code>, así que para hacerlo todo de una podemos usar el flag <code>-J</code> (<code>jump</code>), es decir, quedaría <code>ssh -J server1 server2</code></p>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Resumem, primero haríamos <code>ssh root@194.62.99.222</code> y luego <code>ssh root@10.7.2.228</code> (ya que dentro de <code>server1</code> nos conectamos a <code>server2</code> mediante la <code>IP</code> privada).</p>
      <p>Así que podríamos hacer todo de una haciendo <code>ssh -J root@194.62.99.222 root@10.7.2.228</code></p>
      <p>Vamos a probar</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="o">!</span>ssh<span class="w"> </span>-J<span class="w"> </span>root@194.62.99.222<span class="w"> </span>root@10.7.2.228',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'Welcome to Ubuntu 22.04.1 LTS (GNU/Linux 5.15.0-60-generic x86_64)',
          'Last login: Fri Feb 24 06:46:11 2023 from 10.7.0.168',
          'root@server2:~#',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Hemos podido hacer los saltos!</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h2 id="Archivo-de-configuraci%C3%B3n-SSH-del-usuario">Archivo de configuración <code>SSH</code> del usuario<a class="anchor-link" href="#Archivo-de-configuraci%C3%B3n-SSH-del-usuario"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 14" src={svg_paths.link_svg_path}/></a></h2>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="Dispositivos-con-Alias">Dispositivos con Alias<a class="anchor-link" href="#Dispositivos-con-Alias"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 15" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>En todo ordenador hay un archivo de configuración para el <code>SSH</code> que suele estar en la carpeta del usuario</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="o">!</span>cat<span class="w"> </span>~/.ssh/config',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          '# Read more about SSH config files: https://linux.die.net/man/5/ssh_config',
          'Host 192.168.1.138',
          '    HostName 192.168.1.138',
          '    User maximo.fernandez',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>En este archivo tengo guardados el usuario e ip de algunos dispositivos a los que me suelo conectar y así no tengo que rellenar todo yo. Veamoslo con los servidores que tengo</p>
      <p>Mi servidor <code>server1</code> tiene el usuario <code>root</code> y la IP <code>194.62.99.222</code>, por lo que lo añado a la lista</p>
      </section>
      
      <CodeBlockInputCell
        text={[
      '<span></span><span class="o">!</span><span class="nb">echo</span><span class="w"> </span><span class="s2">"Host server1\n    HostName 194.62.99.222\n    User root"</span><span class="w"> </span>&gt;&gt;<span class="w"> </span>~/.ssh/config',
        ]}
        languaje='python'
      ></CodeBlockInputCell>






      
      <section class="section-block-markdown-cell">
      <p>Volvemos a ver cómo ha quedado el archivo de configuración</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="o">!</span><span class="nb">echo</span><span class="w"> </span><span class="s2">"Host server1\n    HostName 194.62.99.222\n    User root"</span><span class="w"> </span>&gt;&gt;<span class="w"> </span>~/.ssh/config',
          '</span><span class="o">!</span>cat<span class="w"> </span>~/.ssh/config',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          '# Read more about SSH config files: https://linux.die.net/man/5/ssh_config',
          'Host 192.168.1.138',
          '    HostName 192.168.1.138',
          '    User maximo.fernandez',
          'Host server1',
          '    HostName 194.62.99.222',
          '    User root',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Ahora que lo hemos añadido para conectarnos al <code>server1</code> ya solo nos hace falta hacer <code>ssh server1</code></p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="o">!</span>ssh<span class="w"> </span>server1<span class="w"> </span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'Welcome to Ubuntu 22.04.1 LTS (GNU/Linux 5.15.0-60-generic x86_64)',
          'Last login: Fri Feb 24 05:18:59 2023 from 188.127.184.59',
          'root@server1:~# ',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <h3 id="Proxy">Proxy<a class="anchor-link" href="#Proxy"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 16" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Como ya vimos, añadiendo el flag <code>-D &amp;ltport&amp;gt</code> podiamos cambiar la proxy. Para dejar esto guardado en el archivo de configuración solo tenemos que añadir la línea <code>DynamicForward &amp;ltport&amp;gt</code> al host que estamos guardando</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Repitiendo el ejemplo anterior en el que usamos el <code>server1</code> como un proxy del puerto <code>tcp/ip</code> (<code>9999</code>), en el archivo de configuración quedaría así</p>
      <pre><code>Host proxyServer1
          HostName 194.62.99.222
          User root
          DynamicForward 9999</code></pre>
      <p>Lo añadimos</p>
      </section>
      
      <CodeBlockInputCell
        text={[
      '<span></span><span class="o">!</span><span class="nb">echo</span><span class="w"> </span><span class="s2">"Host proxyServer1\n    HostName 194.62.99.222\n    User root\n    DynamicForward 9999"</span><span class="w"> </span>&gt;&gt;<span class="w"> </span>~/.ssh/config',
        ]}
        languaje='python'
      ></CodeBlockInputCell>






      
      <section class="section-block-markdown-cell">
      <p>Veamos cómo queda el archivo de configuración</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="o">!</span><span class="nb">echo</span><span class="w"> </span><span class="s2">"Host proxyServer1\n    HostName 194.62.99.222\n    User root\n    DynamicForward 9999"</span><span class="w"> </span>&gt;&gt;<span class="w"> </span>~/.ssh/config',
          '</span><span class="o">!</span>cat<span class="w"> </span>~/.ssh/config',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          '# Read more about SSH config files: https://linux.die.net/man/5/ssh_config',
          'Host 192.168.1.138',
          '    HostName 192.168.1.138',
          '    User maximo.fernandez',
          'Host server1',
          '    HostName 194.62.99.222',
          '    User root',
          'Host proxyServer1',
          '    HostName 194.62.99.222',
          '    User root',
          '    DynamicForward 9999',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Obtengo mi <code>IP</code> pública</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="o">!</span>curl<span class="w"> </span>ifconfig.me',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          '188.127.184.59',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Me conecto al servidor proxy</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="o">!</span>ssh<span class="w"> </span>proxyServer1<span class="w"> </span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'Welcome to Ubuntu 22.04.1 LTS (GNU/Linux 5.15.0-60-generic x86_64)',
          'Last login: Fri Feb 24 05:42:32 2023 from 188.127.184.59',
          'root@server1:~#',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Cambio la configuración proxy de mi ordenador</p>
      <p><img decoding="async" onerror="this.parentNode.removeChild(this)" alt="proxy ssh" src="https://pub-fb664c455eca46a2ba762a065ac900f7.r2.dev/proxy_ssh.webp" width="977" height="818"/></p>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Vuelvo a ver mi <code>IP</code> pública, pero cogiendo el proxy recientemente configurado</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="o">!</span>curl<span class="w"> </span>-x<span class="w"> </span>socks5h://localhost:9999<span class="w"> </span>ifconfig.me',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          '194.62.99.222',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Vemos que obtenemos la IP pública del servidor</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="Tunel-SSH">Tunel SSH<a class="anchor-link" href="#Tunel-SSH"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 17" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Si como antes quiero crear un tunel hasta el <code>server2</code> a través del <code>server1</code>, antes teníamos que hacer <code>ssh &amp;ltHOST PORT&amp;gt:&amp;ltDEST IP&amp;gt:&amp;ltTUNNEL PORT&amp;gt &amp;ltTUNNEL CREATOR USER&amp;gt@&amp;ltTUNNEL CREATOR IP&amp;gt</code>, ahora tenemos que añadir la línea</p>
      <div class="highlight"><pre><span></span>LocalForward<span class="w"> </span><span class="p">&amp;</span>ltlocalhost<span class="p">&amp;</span>gt:<span class="p">&amp;</span>ltHOST<span class="w"> </span>PORT<span class="p">&amp;</span>gt<span class="w"> </span><span class="p">&amp;</span>ltDEST<span class="w"> </span>IP<span class="p">&amp;</span>gt:<span class="p">&amp;</span>ltTUNNEL<span class="w"> </span>PORT<span class="p">&amp;</span>gt
      </pre></div>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Es decir, el archivo de configuarción quedaría</p>
      <pre><code>Host tunelToServer2
          HostName 194.62.99.222
          User root
          LocalForward 127.0.0.1:2020 10.7.2.228:22</code></pre>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Pero como así no se entiende muy bien veamoslo con algo concreto</p>
      <ul>
      <li><code>server1</code>:<ul>
      <li><code>IP</code> pública: <code>194.62.99.222</code></li>
      <li><code>IP</code> privada: <code>10.7.0.168</code></li>
      </ul>
      </li>
      <li><code>server2</code>:<ul>
      <li><code>IP</code> pública: <code>194.62.99.235</code></li>
      <li><code>IP</code> privada: <code>10.7.2.228</code></li>
      </ul>
      </li>
      </ul>
      <p>Antes el comando era</p>
      <div class="highlight"><pre><span></span>ssh<span class="w"> </span>-L<span class="w"> </span><span class="m">2020</span>:10.7.2.228:22<span class="w"> </span>root@194.62.99.222
      </pre></div>
      <p>De modo que el archivo de configuración tiene que quedar</p>
      <pre><code>Host tunelToServer2
          HostName 194.62.99.222
          User root
          LocalForward 127.0.0.1:2020 10.7.2.228:22</code></pre>
      <p>Veamos si funciona</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Añadimos la nueva configuración</p>
      </section>
      
      <CodeBlockInputCell
        text={[
      '<span></span><span class="o">!</span><span class="nb">echo</span><span class="w"> </span><span class="s2">"Host tunelToServer2\n    HostName 194.62.99.222\n    User root\n    LocalForward 127.0.0.1:2020 10.7.2.228:22"</span><span class="w"> </span>&gt;&gt;<span class="w"> </span>~/.ssh/config',
        ]}
        languaje='python'
      ></CodeBlockInputCell>






      
      <section class="section-block-markdown-cell">
      <p>Veamos cómo ha quedado el archivo de configuración</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="o">!</span><span class="nb">echo</span><span class="w"> </span><span class="s2">"Host tunelToServer2\n    HostName 194.62.99.222\n    User root\n    LocalForward 127.0.0.1:2020 10.7.2.228:22"</span><span class="w"> </span>&gt;&gt;<span class="w"> </span>~/.ssh/config',
          '</span><span class="o">!</span>cat<span class="w"> </span>~/.ssh/config',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          '# Read more about SSH config files: https://linux.die.net/man/5/ssh_config',
          'Host 192.168.1.138',
          '    HostName 192.168.1.138',
          '    User maximo.fernandez',
          'Host server1',
          '    HostName 194.62.99.222',
          '    User root',
          'Host proxyServer1',
          '    HostName 194.62.99.222',
          '    User root',
          '    DynamicForward 9999',
          'Host tunelToServer2',
          '    HostName 194.62.99.222',
          '    User root',
          '    LocalForward 127.0.0.1:2020 10.7.2.228:22',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Creamos el tunel</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="o">!</span>ssh<span class="w"> </span>tunelToServer2<span class="w"> </span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'Welcome to Ubuntu 22.04.1 LTS (GNU/Linux 5.15.0-60-generic x86_64)',
          'Last login: Fri Feb 24 06:02:20 2023 from 188.127.184.59',
          'root@server1:~#',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Ahora intentamos conectarnos al <code>server2</code> desde mi ordenador</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="o">!</span>ssh<span class="w"> </span>-p<span class="w"> </span><span class="m">2020</span><span class="w"> </span>root@localhost',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'Welcome to Ubuntu 22.04.1 LTS (GNU/Linux 5.15.0-60-generic x86_64)',
          'Last login: Fri Feb 24 06:02:36 2023 from 10.7.0.168',
          'root@server2:~# ',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Conseguido! Pero podemos dejarlo un poco más limpio todo, podemos añadir esta última conexión al archivo de configuración</p>
      </section>
      
      <CodeBlockInputCell
        text={[
      '<span></span><span class="o">!</span><span class="nb">echo</span><span class="w"> </span><span class="s2">"Host server2ByTunel\n    HostName localhost\n    User root\n    Port 2020"</span><span class="w"> </span>&gt;&gt;<span class="w"> </span>~/.ssh/config',
        ]}
        languaje='python'
      ></CodeBlockInputCell>






      
      <section class="section-block-markdown-cell">
      <p>Veamos cómo queda el archivo de configuración</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="o">!</span><span class="nb">echo</span><span class="w"> </span><span class="s2">"Host server2ByTunel\n    HostName localhost\n    User root\n    Port 2020"</span><span class="w"> </span>&gt;&gt;<span class="w"> </span>~/.ssh/config',
          '</span><span class="o">!</span>cat<span class="w"> </span>~/.ssh/config',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          '# Read more about SSH config files: https://linux.die.net/man/5/ssh_config',
          'Host 192.168.1.138',
          '    HostName 192.168.1.138',
          '    User maximo.fernandez',
          'Host server1',
          '    HostName 194.62.99.222',
          '    User root',
          'Host proxyServer1',
          '    HostName 194.62.99.222',
          '    User root',
          '    DynamicForward 9999',
          'Host tunelToServer2',
          '    HostName 194.62.99.222',
          '    User root',
          '    LocalForward 127.0.0.1:2020 10.7.2.228:22',
          'Host server2ByTunel',
          '    HostName localhost',
          '    User root',
          '    Port 2020',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Ahora nos volvemos a conectar al <code>server2</code> desde mi ordenador, a través del tunel, pero con la última configuración que acabamos de guardar</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="o">!</span>ssh<span class="w"> </span>server2ByTunel<span class="w"> </span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'Welcome to Ubuntu 22.04.1 LTS (GNU/Linux 5.15.0-60-generic x86_64)',
          'Last login: Fri Feb 24 06:13:33 2023 from 10.7.0.168',
          'root@server2:~# ',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>En resumen, con todo lo que hemos hecho, podemos crear el tunel hasta el <code>server2</code> con el comando <code>ssh tunelToServer2</code> y a continuación conectarnos al <code>server2</code> con el comando <code>ssh server2ByTunel</code></p>
      <p>Impresionante!</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h3 id="Conexi%C3%B3n-reversa">Conexión reversa<a class="anchor-link" href="#Conexi%C3%B3n-reversa"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 18" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Recordamos que ahora nuestro problema era que no nos podíamos conectar al <code>server2</code> a través del tunel del <code>server1</code>. De modo que creando una conexión reversa desde el <code>server2</code> (tenemos alguien en el <code>server2</code> que puede hacer esa conexión reversa, o lo dejamos hecho nosotros antes de irnos) hasta un <code>server3</code>, desde mi ordenador me puedo conectar al <code>server3</code> y a continuación conectarme al <code>server2</code></p>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Primero tenemos que hacer la conexión reversa desde el <code>server2</code> al <code>server3</code>. Esto lo podíamos hacer mediante un comando</p>
      <div class="highlight"><pre><span></span>ssh<span class="w"> </span>-R<span class="w"> </span><span class="p">&amp;</span>ltserver3port<span class="p">&amp;</span>gt:localhost:22<span class="w"> </span>root@<span class="p">&amp;</span>ltIPserver3<span class="p">&amp;</span>gt
      </pre></div>
      <p>O guardar la conexión en el archivo de configuración añadiendo</p>
      <pre><code>Host reverseToServer3
          HostName &amp;ltIPserver3&amp;gt
          User root
          RemoteForward &amp;ltserver3port&amp;gt localhost:22</code></pre>
      <p>Y hacer la conexión reversa mediante</p>
      <div class="highlight"><pre><span></span>ssh<span class="w"> </span>reverseToServer3
      </pre></div>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Como así no se entiende bien, veámoslo con datos concretos</p>
      <ul>
      <li><code>server2</code>:<ul>
      <li><code>IP</code> pública: <code>194.62.99.235</code></li>
      </ul>
      </li>
      <li><code>server3</code>:<ul>
      <li><code>IP</code> pública: <code>194.62.96.236</code></li>
      </ul>
      </li>
      </ul>
      <p>Para hacer la conexión reversa habría que usar el comando</p>
      <div class="highlight"><pre><span></span>ssh<span class="w"> </span>-R<span class="w"> </span><span class="m">2020</span>:localhost:22<span class="w"> </span>root@194.62.96.236
      </pre></div>
      <p>O guardar la siguiente configuración</p>
      <div class="highlight"><pre><span></span>Host<span class="w"> </span>reverseToServer3
      <span class="w">    </span>HostName<span class="w"> </span><span class="m">194</span>.62.96.236
      <span class="w">    </span>User<span class="w"> </span>root
      <span class="w">    </span>RemoteForward<span class="w"> </span><span class="m">2020</span><span class="w"> </span>localhost:22
      </pre></div>
      <p>Y conectarse mediante</p>
      <div class="highlight"><pre><span></span>ssh<span class="w"> </span>reverseToServer3
      </pre></div>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>De modo que guardo la configuración en el server 2 y hago la conexión</p>
      </section>
      
      <CodeBlockInputCell
        text={[
      '<span></span><span class="o">!</span>root@server2:~#<span class="w"> </span><span class="nb">echo</span><span class="w"> </span><span class="s2">"Host reverseToServer3\n    HostName 194.62.96.236\n    User root\n    RemoteForward 2020 localhost:22"</span><span class="w"> </span>&gt;&gt;<span class="w"> </span>~/.ssh/config',
        ]}
        languaje='python'
      ></CodeBlockInputCell>






      
      <section class="section-block-markdown-cell">
      <p>Veamos que se ha guardado bien</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="o">!</span>root@server2:~#<span class="w"> </span><span class="nb">echo</span><span class="w"> </span><span class="s2">"Host reverseToServer3\n    HostName 194.62.96.236\n    User root\n    RemoteForward 2020 localhost:22"</span><span class="w"> </span>&gt;&gt;<span class="w"> </span>~/.ssh/config',
          '</span><span class="o">!</span>root@server2:~#<span class="w"> </span>cat<span class="w"> </span>.ssh/config',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'Host reverseToServer3',
          '    HostName 194.62.96.236',
          '    User root',
          '    RemoteForward 2020 localhost:22',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Hago la conexión reversa</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="o">!</span>root@server2:~#<span class="w"> </span>ssh<span class="w"> </span>reverseToServer3<span class="w"> </span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'Welcome to Ubuntu 22.04.1 LTS (GNU/Linux 5.15.0-53-generic x86_64)',
          'Last login: Wed Feb 22 15:26:18 2023 from 194.62.99.235',
          'root@server3:~# ',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <h3 id="Jump">Jump<a class="anchor-link" href="#Jump"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 19" src={svg_paths.link_svg_path}/></a></h3>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Como hemos dicho hacíamos saltos mediante el flag <code>-J</code>, de manera que con el comando <code>ssh -J root@194.62.99.222 root@10.7.2.228</code> podíamos llegar a conectarnos al <code>server2</code></p>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Para configurar el archivo de configuración hay dos opciones</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>La primera es que como ya tenemos el <code>server1</code> guardada en el archivo de configuración, solamente añadimos <code>server2</code></p>
      <div class="highlight"><pre><span></span>Host<span class="w"> </span>server2
      <span class="w">    </span>HostName<span class="w"> </span><span class="m">10</span>.7.2.228
      <span class="w">    </span>User<span class="w"> </span>root
      </pre></div>
      <p>Y a continuación nos podríamos conectar mediante</p>
      <div class="highlight"><pre><span></span>ssh<span class="w"> </span>-J<span class="w"> </span>server1<span class="w"> </span>server2
      </pre></div>
      <p>Vamos a probarlo</p>
      </section>
      
      <CodeBlockInputCell
        text={[
      '<span></span><span class="o">!</span><span class="nb">echo</span><span class="w"> </span><span class="s2">"Host server2\n    HostName 10.7.2.228\n    User root\n"</span><span class="w"> </span>&gt;&gt;<span class="w"> </span>~/.ssh/config',
        ]}
        languaje='python'
      ></CodeBlockInputCell>






      
      <section class="section-block-markdown-cell">
      <p>Vemos el archivo de configuración</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="o">!</span><span class="nb">echo</span><span class="w"> </span><span class="s2">"Host server2\n    HostName 10.7.2.228\n    User root\n"</span><span class="w"> </span>&gt;&gt;<span class="w"> </span>~/.ssh/config',
          '</span><span class="o">!</span>cat<span class="w"> </span>~/.ssh/config',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          '# Read more about SSH config files: https://linux.die.net/man/5/ssh_config',
          'Host 192.168.1.138',
          '    HostName 192.168.1.138',
          '    User maximo.fernandez',
          'Host server1',
          '    HostName 194.62.99.222',
          '    User root',
          'Host proxyServer1',
          '    HostName 194.62.99.222',
          '    User root',
          '    DynamicForward 9999',
          'Host tunelToServer2',
          '    HostName 194.62.99.222',
          '    User root',
          '    LocalForward 127.0.0.1:2020 10.7.2.228:22',
          'Host server2ByTunel',
          '    HostName localhost',
          '    User root',
          '    Port 2020',
          'Host server2',
          '    HostName 10.7.2.228',
          '    User root',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Ahora nos conectamos mediante los saltos</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="o">!</span>ssh<span class="w"> </span>-J<span class="w"> </span>server1<span class="w"> </span>server2',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'Welcome to Ubuntu 22.04.1 LTS (GNU/Linux 5.15.0-60-generic x86_64)',
          'Last login: Fri Feb 24 12:05:16 2023 from 10.7.0.168',
          'root@server2:~#',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Esta ha sido la primera opción, guardar cada servidor y establecer los saltos, pero una segunda opción es guardar todos los saltos en una sola configuración, que quedaría así</p>
      <div class="highlight"><pre><span></span>Host<span class="w"> </span>server2jumping
      <span class="w">    </span>HostName<span class="w"> </span><span class="m">10</span>.7.2.228
      <span class="w">    </span>User<span class="w"> </span>root
      <span class="w">    </span>ProxyJump<span class="w"> </span>root@194.62.99.222
      </pre></div>
      <p>Y ya solo haría falta conectarse mediante</p>
      <pre><code>ssh server2jumping</code></pre>
      <p>Vamos a probar</p>
      </section>
      
      <CodeBlockInputCell
        text={[
      '<span></span><span class="o">!</span><span class="nb">echo</span><span class="w"> </span><span class="s2">"Host server2jumping\n    HostName 10.7.2.228\n    User root\n    ProxyJump root@194.62.99.222"</span><span class="w"> </span>&gt;&gt;<span class="w"> </span>~/.ssh/config',
        ]}
        languaje='python'
      ></CodeBlockInputCell>






      
      <section class="section-block-markdown-cell">
      <p>Vamos a ver el archivo de configuración</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="o">!</span><span class="nb">echo</span><span class="w"> </span><span class="s2">"Host server2jumping\n    HostName 10.7.2.228\n    User root\n    ProxyJump root@194.62.99.222"</span><span class="w"> </span>&gt;&gt;<span class="w"> </span>~/.ssh/config',
          '</span><span class="o">!</span>cat<span class="w"> </span>~/.ssh/config',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          '# Read more about SSH config files: https://linux.die.net/man/5/ssh_config',
          'Host 192.168.1.138',
          '    HostName 192.168.1.138',
          '    User maximo.fernandez',
          'Host server1',
          '    HostName 194.62.99.222',
          '    User root',
          'Host proxyServer1',
          '    HostName 194.62.99.222',
          '    User root',
          '    DynamicForward 9999',
          'Host tunelToServer2',
          '    HostName 194.62.99.222',
          '    User root',
          '    LocalForward 127.0.0.1:2020 10.7.2.228:22',
          'Host server2ByTunel',
          '    HostName localhost',
          '    User root',
          '    Port 2020',
          'Host server2',
          '    HostName 10.7.2.228',
          '    User root',
          'Host server2jumping',
          '    HostName 10.7.2.228',
          '    User root',
          '    ProxyJump root@194.62.99.222',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Ahora intentamos conectarnos</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="o">!</span>ssh<span class="w"> </span>server2jumping',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'Welcome to Ubuntu 22.04.1 LTS (GNU/Linux 5.15.0-60-generic x86_64)',
          'Last login: Fri Feb 24 12:06:22 2023 from 10.7.0.168',
          'root@server2:~# ',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <h2 id="Archivo-de-configuraci%C3%B3n-SSH-del-sistema">Archivo de configuración <code>SSH</code> del sistema<a class="anchor-link" href="#Archivo-de-configuraci%C3%B3n-SSH-del-sistema"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 20" src={svg_paths.link_svg_path}/></a></h2>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Antes vimos el archivo de configuración de <code>SSH</code> del usuario, donde guardamos configuraciones de maquinas donde nos queríamos conectar por <code>SSH</code>, pero hay otro archivo de configuración de <code>SSH</code> pero en este caso del sistema, que se encuentra en <code>/etc/ssh/ssh_config</code>, vamos a verlo</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="o">!</span>cat<span class="w"> </span>/etc/ssh/sshd_config',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          '#	$OpenBSD: sshd_config,v 1.103 2018/04/09 20:41:22 tj Exp $',
          '# This is the sshd server system-wide configuration file.  See',
          '# sshd_config(5) for more information.',
          '# This sshd was compiled with PATH=/usr/bin:/bin:/usr/sbin:/sbin',
          '# The strategy used for options in the default sshd_config shipped with',
          '# OpenSSH is to specify options with their default value where',
          '# possible, but leave them commented.  Uncommented options override the',
          '# default value.',
          'Include /etc/ssh/sshd_config.d/*.conf',
          '#Port 22',
          '#AddressFamily any',
          '#ListenAddress 0.0.0.0',
          '#ListenAddress ::',
          '#HostKey /etc/ssh/ssh_host_rsa_key',
          '#HostKey /etc/ssh/ssh_host_ecdsa_key',
          '#HostKey /etc/ssh/ssh_host_ed25519_key',
          '# Ciphers and keying',
          '#RekeyLimit default none',
          '# Logging',
          '#SyslogFacility AUTH',
          '#LogLevel INFO',
          '# Authentication:',
          '#LoginGraceTime 2m',
          '#PermitRootLogin prohibit-password',
          '#StrictModes yes',
          '#MaxAuthTries 6',
          '#MaxSessions 10',
          '#PubkeyAuthentication yes',
          '# Expect .ssh/authorized_keys2 to be disregarded by default in future.',
          '#AuthorizedKeysFile	.ssh/authorized_keys .ssh/authorized_keys2',
          '#AuthorizedPrincipalsFile none',
          '#AuthorizedKeysCommand none',
          '#AuthorizedKeysCommandUser nobody',
          '# For this to work you will also need host keys in /etc/ssh/ssh_known_hosts',
          '#HostbasedAuthentication no',
          '# Change to yes if you don\'t trust ~/.ssh/known_hosts for',
          '# HostbasedAuthentication',
          '#IgnoreUserKnownHosts no',
          '# Don\'t read the user\'s ~/.rhosts and ~/.shosts files',
          '#IgnoreRhosts yes',
          '# To disable tunneled clear text passwords, change to no here!',
          '#PasswordAuthentication yes',
          '#PermitEmptyPasswords no',
          '# Change to yes to enable challenge-response passwords (beware issues with',
          '# some PAM modules and threads)',
          'ChallengeResponseAuthentication no',
          '# Kerberos options',
          '#KerberosAuthentication no',
          '#KerberosOrLocalPasswd yes',
          '#KerberosTicketCleanup yes',
          '#KerberosGetAFSToken no',
          '# GSSAPI options',
          '#GSSAPIAuthentication no',
          '#GSSAPICleanupCredentials yes',
          '#GSSAPIStrictAcceptorCheck yes',
          '#GSSAPIKeyExchange no',
          '# Set this to \'yes\' to enable PAM authentication, account processing,',
          '# and session processing. If this is enabled, PAM authentication will',
          '# be allowed through the ChallengeResponseAuthentication and',
          '# PasswordAuthentication.  Depending on your PAM configuration,',
          '# PAM authentication via ChallengeResponseAuthentication may bypass',
          '# the setting of "PermitRootLogin without-password".',
          '# If you just want the PAM account and session checks to run without',
          '# PAM authentication, then enable this but set PasswordAuthentication',
          '# and ChallengeResponseAuthentication to \'no\'.',
          'UsePAM yes',
          '#AllowAgentForwarding yes',
          '#AllowTcpForwarding yes',
          '#GatewayPorts no',
          'X11Forwarding yes',
          '#X11DisplayOffset 10',
          '#X11UseLocalhost yes',
          '#PermitTTY yes',
          'PrintMotd no',
          '#PrintLastLog yes',
          '#TCPKeepAlive yes',
          '#PermitUserEnvironment no',
          '#Compression delayed',
          '#ClientAliveInterval 0',
          '#ClientAliveCountMax 3',
          '#UseDNS no',
          '#PidFile /var/run/sshd.pid',
          '#MaxStartups 10:30:100',
          '#PermitTunnel no',
          '#ChrootDirectory none',
          '#VersionAddendum none',
          '# no default banner path',
          '#Banner none',
          '# Allow client to pass locale environment variables',
          'AcceptEnv LANG LC_*',
          '# override default of no subsystems',
          'Subsystem	sftp	/usr/lib/openssh/sftp-server',
          '# Example of overriding settings on a per-user basis',
          '#Match User anoncvs',
          '#	X11Forwarding no',
          '#	AllowTcpForwarding no',
          '#	PermitTTY no',
          '#	ForceCommand cvs server',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Con este archivo podemos cambiar la configuración de cómo funciona <code>SSH</code> en nuestro ordenador. Por ejemplo podemos ver una linea comentada que pone</p>
      <div class="highlight"><pre><span></span><span class="c1">#Port 22</span>
      </pre></div>
      <p>Si la descomentamos y cambiamos el número <code>SSH</code> dejará de ir por el puerto 22, que es su puerto por defecto, e ira por el número de puerto que ahí se especifique.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h2 id="Copia-de-archivos-por-SSH">Copia de archivos por <code>SSH</code><a class="anchor-link" href="#Copia-de-archivos-por-SSH"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 21" src={svg_paths.link_svg_path}/></a></h2>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Podemos copiar archivos por <code>SSH</code> mediante el comando <code>scp</code> (secure copy), para ello la sintaxis es</p>
      <div class="highlight"><pre><span></span>scp<span class="w"> </span><span class="p">&amp;</span>ltpath<span class="w"> </span><span class="nb">local</span><span class="w"> </span>file<span class="p">&amp;</span>gt<span class="w"> </span><span class="p">&amp;</span>ltuser<span class="p">&amp;</span>gt@<span class="p">&amp;</span>ltIP<span class="p">&amp;</span>gt:<span class="p">&amp;</span>ltpath<span class="w"> </span>to<span class="w"> </span>save<span class="p">&amp;</span>gt
      </pre></div>
      <p>o</p>
      <div class="highlight"><pre><span></span>scp<span class="w"> </span><span class="p">&amp;</span>ltuser<span class="p">&amp;</span>gt@<span class="p">&amp;</span>ltip<span class="p">&amp;</span>gt:<span class="p">&amp;</span>ltpath<span class="w"> </span>to<span class="w"> </span>remote<span class="w"> </span>file<span class="p">&amp;</span>gt<span class="w"> </span><span class="p">&amp;</span>ltpath<span class="w"> </span>to<span class="w"> </span>save<span class="p">&amp;</span>gt
      </pre></div>
      <p>De la primera forma se copia un archivo de nuestro ordenador a otro y de la segunda de otro al nuestro</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Por ejemplo hagamos un <code>ls</code> del <code>server1</code></p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="o">!</span>ssh<span class="w"> </span>-t<span class="w"> </span>server1<span class="w"> </span><span class="s2">"ls"</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'snap',
          'Connection to 194.62.99.222 closed.',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Veamos ahora qué tenemos en local que le podamos pasar</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="o">!</span>ls',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          ' 2021-02-11-Introduccion-a-Python.ipynb         html_files',
          ' 2021-04-23-Calculo-matricial-con-Numpy.ipynb   html.ipynb',
          ' 2021-06-15-Manejo-de-datos-con-Pandas.ipynb    introduccion_python',
          ' 2022-09-12-Introduccion-a-la-terminal.ipynb    mi_paquete_de_python',
          ' 2023-01-22-Docker.ipynb		        movies.csv',
          ' 2023-02-01-Bash-scripting.ipynb	        movies.dat',
          ' 2023-02-04-Blip-2.ipynb		        notebooks_translated',
          ' 2023-XX-XX-SSH.ipynb			        __pycache__',
          ' california_housing_train.csv		        scripts_bash',
          ' command-line-cheat-sheet.pdf		        ssh.ipynb',
          ' CSS.ipynb				        test.ipynb',
          '\'Expresiones regulares.ipynb\'',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Vamos a mandarle al servidor el archivo <code>html.ipynb</code> ya que ocupa poco</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="o">!</span>scp<span class="w"> </span>html.ipynb<span class="w"> </span>server1:/root/',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'html.ipynb                                    100%   14KB 229.0KB/s   00:00    ',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Volvemos a ver qué hay dentro de <code>server1</code></p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="o">!</span>ssh<span class="w"> </span>-t<span class="w"> </span>server1<span class="w"> </span><span class="s2">"ls"</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'html.ipynb  snap',
          'Connection to 194.62.99.222 closed.',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Se ha copiado</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h2 id="Sincroniazci%C3%B3n-de-archivos-por-SSH">Sincroniazción de archivos por <code>SSH</code><a class="anchor-link" href="#Sincroniazci%C3%B3n-de-archivos-por-SSH"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 22" src={svg_paths.link_svg_path}/></a></h2>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Lo malo del comando <code>scp</code> es que si en medio de la copia pasa algo y no se termina de copiar el archivo, cuando se vuelva a intentar hay que empezar desde cero, esto sobre todo es un problema con archivos muy pesados</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Para solucionar esto se puede usar <code>rsync</code>, la sintaxis es</p>
      <div class="highlight"><pre><span></span>rsync<span class="w"> </span>--partial<span class="w"> </span>--progress<span class="w"> </span>--rsh<span class="o">=</span>ssh<span class="w"> </span>&lt;path<span class="w"> </span><span class="nb">local</span><span class="w"> </span>file&gt;<span class="w"> </span>&lt;user&gt;@&lt;IP&gt;:&lt;path<span class="w"> </span>to<span class="w"> </span>save&gt;
      </pre></div>
      <p>o</p>
      <div class="highlight"><pre><span></span>rsync<span class="w"> </span>--partial<span class="w"> </span>--progress<span class="w"> </span>--rsh<span class="o">=</span>ssh<span class="w"> </span>&lt;user&gt;@&lt;ip&gt;:&lt;path<span class="w"> </span>to<span class="w"> </span>remote<span class="w"> </span>file&gt;<span class="w"> </span>&lt;path<span class="w"> </span>to<span class="w"> </span>save&gt;
      </pre></div>
      <p>Al igual que antes, de la primera forma se copia un archivo de nuestro ordenador a otro y de la segunda de otro al nuestro. El flag <code>--partial</code> es para indicar que se guarden archivos parcialmente copiados, es decir, que si se para la copia antes de que termine, que lo que se haya copiado se mantenga. El flag <code>--progress</code> es para indicar que muestre el progreso de la copia. El flag <code>--rsh=ssh</code> es para indicar que la transferencia de archivos se haga por <code>SSH</code></p>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Pasamos un archivo</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="o">!</span>rsync<span class="w"> </span>--partial<span class="w"> </span>--progress<span class="w"> </span>-rsh<span class="o">=</span>ssh<span class="w"> </span><span class="m">2021</span>-06-15-Manejo-de-datos-con-Pandas.ipynb<span class="w">  </span>server1:/root/',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'sending incremental file list',
          '2021-06-15-Manejo-de-datos-con-Pandas.ipynb',
          '        608.34K 100%  197.78MB/s    0:00:00 (xfr#1, to-chk=0/1)',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Y vemos si se ha copiado</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="o">!</span>ssh<span class="w"> </span>-t<span class="w"> </span>server1<span class="w"> </span><span class="s2">"ls"</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          '2021-06-15-Manejo-de-datos-con-Pandas.ipynb  html.ipynb  snap',
          'Connection to 194.62.99.222 closed.',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <h2 id="Montar-carpetas-remotas-en-local">Montar carpetas remotas en local<a class="anchor-link" href="#Montar-carpetas-remotas-en-local"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 23" src={svg_paths.link_svg_path}/></a></h2>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>En el caso que queramos tener una carpeta de otra máquina como si estuviese en nuestro ordenador tenemos que uasr <code>sshfs</code></p>
      <p>Primero es necesario instalarlo mediante</p>
      <div class="highlight"><pre><span></span>sudo<span class="w"> </span>apt<span class="w"> </span>install<span class="w"> </span>sshfs
      </pre></div>
      <p>Y una vez esté instalado se usa con la sintaxis</p>
      <div class="highlight"><pre><span></span>sshfs<span class="w"> </span><span class="p">&amp;</span>ltuser<span class="p">&amp;</span>gt@<span class="p">&amp;</span>ltip<span class="p">&amp;</span>gt:<span class="p">&amp;</span>ltremote<span class="w"> </span>path<span class="p">&amp;</span>gt<span class="w"> </span><span class="p">&amp;</span>ltlocal<span class="w"> </span>path<span class="w"> </span>to<span class="w"> </span>mount<span class="p">&amp;</span>gt
      </pre></div>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Vamos a montar la carpeta <code>/root</code> del <code>server1</code>, pero para ello primero vamos a crear una carpeta en la que lo vamos a montar</p>
      </section>
      
      <CodeBlockInputCell
        text={[
      '<span></span><span class="o">!</span>mkdir<span class="w"> </span>server1folder',
        ]}
        languaje='python'
      ></CodeBlockInputCell>






      
      <section class="section-block-markdown-cell">
      <p>Vemos que dentro de la carpeta que hemos montado no hay nada</p>
      </section>
      
      <CodeBlockInputCell
        text={[
      '<span></span><span class="o">!</span>mkdir<span class="w"> </span>server1folder',
      '<span></span><span class="o">!</span>ls<span class="w"> </span>server1folder',
        ]}
        languaje='python'
      ></CodeBlockInputCell>






      
      <section class="section-block-markdown-cell">
      <p>Ahora montamos la carpeta del servidor</p>
      </section>
      
      <CodeBlockInputCell
        text={[
      '<span></span><span class="o">!</span>mkdir<span class="w"> </span>server1folder',
      '<span></span><span class="o">!</span>ls<span class="w"> </span>server1folder',
      '<span></span><span class="o">!!</span>sshfs<span class="w"> </span>server1:/root/<span class="w"> </span>server1folder',
        ]}
        languaje='python'
      ></CodeBlockInputCell>






      
      <section class="section-block-markdown-cell">
      <p>Volvemos a ver qué hay dentro</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="o">!</span>mkdir<span class="w"> </span>server1folder',
          '</span><span class="o">!</span>ls<span class="w"> </span>server1folder',
          '</span><span class="o">!!</span>sshfs<span class="w"> </span>server1:/root/<span class="w"> </span>server1folder',
          '</span><span class="o">!</span>ls<span class="w"> </span>server1folder',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          '2021-06-15-Manejo-de-datos-con-Pandas.ipynb  html.ipynb  snap',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Cuando ya no queramos tener más la carpeta montada la podemos desmontar mediante <code>fusermount -u server1folder</code></p>
      </section>
      
      <CodeBlockInputCell
        text={[
      '<span></span><span class="o">!!</span>fusermount<span class="w"> </span>-u<span class="w"> </span>server1folder',
        ]}
        languaje='python'
      ></CodeBlockInputCell>






      
      <section class="section-block-markdown-cell">
      <p>Volvemos a mirar qué hay dentro para ver que no hay nada</p>
      </section>
      
      <CodeBlockInputCell
        text={[
      '<span></span><span class="o">!!</span>fusermount<span class="w"> </span>-u<span class="w"> </span>server1folder',
      '<span></span><span class="o">!</span>ls<span class="w"> </span>server1folder',
        ]}
        languaje='python'
      ></CodeBlockInputCell>






      
      <section class="section-block-markdown-cell">
      <h2 id="Depurar-la-conexi%C3%B3n-SSH">Depurar la conexión <code>SSH</code><a class="anchor-link" href="#Depurar-la-conexi%C3%B3n-SSH"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 24" src={svg_paths.link_svg_path}/></a></h2>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Podemos depurar la conexión <code>SSH</code> añadiendo desde <code>-v</code>, hasta <code>-vvvv</code> a la conexión, cuantas más <code>v</code>s pongamos mayor nivel de información</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="o">!!</span>fusermount<span class="w"> </span>-u<span class="w"> </span>server1folder',
          '</span><span class="o">!</span>ls<span class="w"> </span>server1folder',
          '</span><span class="o">!</span>ssh<span class="w"> </span>-v<span class="w"> </span>server1',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          'OpenSSH_8.2p1 Ubuntu-4ubuntu0.5, OpenSSL 1.1.1f  31 Mar 2020',
          'debug1: Reading configuration data /home/wallabot/.ssh/config',
          'debug1: /home/wallabot/.ssh/config line 6: Applying options for server1',
          'debug1: Reading configuration data /etc/ssh/ssh_config',
          'debug1: /etc/ssh/ssh_config line 19: include /etc/ssh/ssh_config.d/*.conf matched no files',
          'debug1: /etc/ssh/ssh_config line 21: Applying options for *',
          'debug1: Connecting to 194.62.99.222 [194.62.99.222] port 22.',
          'debug1: Connection established.',
          'debug1: identity file /home/wallabot/.ssh/id_rsa type 0',
          'debug1: identity file /home/wallabot/.ssh/id_rsa-cert type -1',
          'debug1: identity file /home/wallabot/.ssh/id_dsa type -1',
          'debug1: identity file /home/wallabot/.ssh/id_dsa-cert type -1',
          'debug1: identity file /home/wallabot/.ssh/id_ecdsa type -1',
          'debug1: identity file /home/wallabot/.ssh/id_ecdsa-cert type -1',
          'debug1: identity file /home/wallabot/.ssh/id_ecdsa_sk type -1',
          'debug1: identity file /home/wallabot/.ssh/id_ecdsa_sk-cert type -1',
          'debug1: identity file /home/wallabot/.ssh/id_ed25519 type -1',
          'debug1: identity file /home/wallabot/.ssh/id_ed25519-cert type -1',
          'debug1: identity file /home/wallabot/.ssh/id_ed25519_sk type -1',
          'debug1: identity file /home/wallabot/.ssh/id_ed25519_sk-cert type -1',
          'debug1: identity file /home/wallabot/.ssh/id_xmss type -1',
          'debug1: identity file /home/wallabot/.ssh/id_xmss-cert type -1',
          'debug1: Local version string SSH-2.0-OpenSSH_8.2p1 Ubuntu-4ubuntu0.5',
          'debug1: Remote protocol version 2.0, remote software version OpenSSH_8.9p1 Ubuntu-3',
          'debug1: match: OpenSSH_8.9p1 Ubuntu-3 pat OpenSSH* compat 0x04000000',
          'debug1: Authenticating to 194.62.99.222:22 as \'root\'',
          'debug1: SSH2_MSG_KEXINIT sent',
          'debug1: SSH2_MSG_KEXINIT received',
          'debug1: kex: algorithm: curve25519-sha256',
          'debug1: kex: host key algorithm: ecdsa-sha2-nistp256',
          'debug1: kex: server-&gt;client cipher: chacha20-poly1305@openssh.com MAC: &lt;implicit&gt; compression: none',
          'debug1: kex: client-&gt;server cipher: chacha20-poly1305@openssh.com MAC: &lt;implicit&gt; compression: none',
          'debug1: expecting SSH2_MSG_KEX_ECDH_REPLY',
          'debug1: Server host key: ecdsa-sha2-nistp256 SHA256:jwpQt2a69LQcuvvYPPKL32bBwTi1Je/ZmUdr4zEiD1Y',
          'debug1: Host \'194.62.99.222\' is known and matches the ECDSA host key.',
          'debug1: Found key in /home/wallabot/.ssh/known_hosts:14',
          'debug1: rekey out after 134217728 blocks',
          'debug1: SSH2_MSG_NEWKEYS sent',
          'debug1: expecting SSH2_MSG_NEWKEYS',
          'debug1: SSH2_MSG_NEWKEYS received',
          'debug1: rekey in after 134217728 blocks',
          'debug1: Will attempt key: /home/wallabot/.ssh/id_rsa RSA SHA256:ID3HcrbyPBGjFx/qeiJK50eqihLGrpDVu02oRSyKGh4 agent',
          'debug1: Will attempt key: wallabot@wallabot RSA SHA256:Qlq6hXbToInW+efEK666BFT26EeUSpBhzcqxTLrDBpQ agent',
          'debug1: Will attempt key: /home/wallabot/.ssh/id_dsa ',
          'debug1: Will attempt key: /home/wallabot/.ssh/id_ecdsa ',
          'debug1: Will attempt key: /home/wallabot/.ssh/id_ecdsa_sk ',
          'debug1: Will attempt key: /home/wallabot/.ssh/id_ed25519 ',
          'debug1: Will attempt key: /home/wallabot/.ssh/id_ed25519_sk ',
          'debug1: Will attempt key: /home/wallabot/.ssh/id_xmss ',
          'debug1: SSH2_MSG_EXT_INFO received',
          'debug1: kex_input_ext_info: server-sig-algs=&lt;ssh-ed25519,sk-ssh-ed25519@openssh.com,ssh-rsa,rsa-sha2-256,rsa-sha2-512,ssh-dss,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,sk-ecdsa-sha2-nistp256@openssh.com,webauthn-sk-ecdsa-sha2-nistp256@openssh.com&gt;',
          'debug1: kex_input_ext_info: publickey-hostbound@openssh.com (unrecognised)',
          'debug1: SSH2_MSG_SERVICE_ACCEPT received',
          'debug1: Authentications that can continue: publickey',
          'debug1: Next authentication method: publickey',
          'debug1: Offering public key: /home/wallabot/.ssh/id_rsa RSA SHA256:ID3HcrbyPBGjFx/qeiJK50eqihLGrpDVu02oRSyKGh4 agent',
          'debug1: Authentications that can continue: publickey',
          'debug1: Offering public key: wallabot@wallabot RSA SHA256:Qlq6hXbToInW+efEK666BFT26EeUSpBhzcqxTLrDBpQ agent',
          'debug1: Server accepts key: wallabot@wallabot RSA SHA256:Qlq6hXbToInW+efEK666BFT26EeUSpBhzcqxTLrDBpQ agent',
          'debug1: Authentication succeeded (publickey).',
          'Authenticated to 194.62.99.222 ([194.62.99.222]:22).',
          'debug1: channel 0: new [client-session]',
          'debug1: Requesting no-more-sessions@openssh.com',
          'debug1: Entering interactive session.',
          'debug1: pledge: network',
          'debug1: client_input_global_request: rtype hostkeys-00@openssh.com want_reply 0',
          'debug1: Remote: /root/.ssh/authorized_keys:1: key options: agent-forwarding port-forwarding pty user-rc x11-forwarding',
          'debug1: Remote: /root/.ssh/authorized_keys:1: key options: agent-forwarding port-forwarding pty user-rc x11-forwarding',
          'debug1: Sending environment.',
          'debug1: Sending env LANG = es_ES.UTF-8',
          'Welcome to Ubuntu 22.04.1 LTS (GNU/Linux 5.15.0-60-generic x86_64)',
          ' * Documentation:  https://help.ubuntu.com',
          ' * Management:     https://landscape.canonical.com',
          ' * Support:        https://ubuntu.com/advantage',
          '  System information as of Fri Feb 24 01:25:10 PM UTC 2023',
          '  System load:           0.0',
          '  Usage of /:            15.2% of 24.53GB',
          '  Memory usage:          34%',
          '  Swap usage:            0%',
          '  Processes:             89',
          '  Users logged in:       0',
          '  IPv4 address for eth0: 194.62.99.222',
          '  IPv4 address for eth1: 10.7.0.168',
          '  IPv6 address for eth2: 2a04:3542:8000:1000:d48a:cbff:fefb:5b1',
          ' * Strictly confined Kubernetes makes edge and IoT secure. Learn how MicroK8s',
          '   just raised the bar for easy, resilient and secure K8s cluster deployment.',
          '   https://ubuntu.com/engage/secure-kubernetes-at-the-edge',
          '43 updates can be applied immediately.',
          'To see these additional updates run: apt list --upgradable',
          'Last login: Fri Feb 24 13:10:05 2023 from 188.127.184.59',
          ']0;root@server1: ~<span class="ansi-green-intense-fg ansi-bold">root@server1</span>:<span class="ansi-blue-intense-fg ansi-bold">~</span># ^C',
          ']0;root@server1: ~<span class="ansi-green-intense-fg ansi-bold">root@server1</span>:<span class="ansi-blue-intense-fg ansi-bold">~</span># ',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      






    </div>

  </section>

</PostLayout>
