---
import PostLayout from '@layouts/PostLayout.astro';
import CodeBlockInputCell from '@components/CodeBlockInputCell.astro';
import CodeBlockOutputCell from '@components/CodeBlockOutputCell.astro';

const { metadata_page } = await import('@portfolio/consts.json');
const { colors } = await import('@portfolio/consts.json');
const { svg_paths } = await import('@portfolio/consts.json');

const page_title = 'py-smi';
const end_url = 'tips/py-smi';
const description = 'Librería de Python para obtener datos de la GPU igual que `nvidia-smi`';
const keywords = 'python, smi, nvidia, gpu';
const languaje = 'ES';
const image_path = 'https://pub-fb664c455eca46a2ba762a065ac900f7.r2.dev/nvidia-smi-mockup.webp';
const opening_brace = '{';
const closing_brace = '}';
---

<PostLayout 
    title={page_title}
    languaje={languaje}
    description={description}
    keywords={keywords}
    author={metadata_page.author}
    theme_color={colors.background_color}
    end_url={end_url}
    image_path={image_path}
    image_width=960
    image_height=720
    image_extension=webp
    article_date=2024-12-14+T00:00:00Z
>

  <section class="post-body">


    <aside class="post-index">
      <a class="anchor-link" href="#Instalaci%C3%B3n"><h2>Instalación</h2></a>
      <a class="anchor-link" href="#Uso"><h2>Uso</h2></a>
    </aside>


    <div class="post-body-content">
      
      <section class="section-block-markdown-cell">
      <h1 id="py-smi">py-smi<a class="anchor-link" href="#py-smi"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 0" src={svg_paths.link_svg_path}/></a></h1>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>¿Quieres poder usar <code>nvidia-smi</code> desde Python? Aquí tienes una librería para hacerlo.</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h2 id="Instalaci%C3%B3n">Instalación<a class="anchor-link" href="#Instalaci%C3%B3n"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 1" src={svg_paths.link_svg_path}/></a></h2>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Para poder instalarla ejecuta:</p>
      <div class="highlight"><pre><span></span>pip<span class="w"> </span>install<span class="w"> </span>python-smi
      </pre></div>
      </section>
      
      <section class="section-block-markdown-cell">
      <h2 id="Uso">Uso<a class="anchor-link" href="#Uso"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 2" src={svg_paths.link_svg_path}/></a></h2>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Importamos la librería</p>
      </section>
      
      <CodeBlockInputCell
        text={[
      '<span></span><span class="kn">from</span> <span class="nn">py_smi</span> <span class="kn">import</span> <span class="n">NVML</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>






      
      <section class="section-block-markdown-cell">
      <p>Creamos un objeto de <code>pynvml</code> (la librería detrás de <code>nvidia-smi</code>)</p>
      </section>
      
      <CodeBlockInputCell
        text={[
      '<span></span><span class="n">nv</span> <span class="o">=</span> <span class="n">NVML</span><span class="p">()</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>






      
      <section class="section-block-markdown-cell">
      <p>Obtenemos la versión del driver y de CUDA</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="n">nv</span><span class="o">.</span><span class="n">driver_version</span><span class="p">,</span> <span class="n">nv</span><span class="o">.</span><span class="n">cuda_version</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          '(\'560.35.03\', \'12.6\')',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Como en mi caso tengo dos GPUs creo una variable con el número de GPUs</p>
      </section>
      
      <CodeBlockInputCell
        text={[
      '<span></span><span class="n">num_gpus</span> <span class="o">=</span> <span class="mi">2</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>






      
      <section class="section-block-markdown-cell">
      <p>Obtengo la memoria de cada GPU</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="p">[</span><span class="n">nv</span><span class="o">.</span><span class="n">mem</span><span class="p">(</span><span class="n">i</span><span class="p">)</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">num_gpus</span><span class="p">)]</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          '[_Memory(free=24136.6875, total=24576.0, used=439.3125),',
          ' _Memory(free=23509.0, total=24576.0, used=1067.0)]',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>La utilización</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="p">[</span><span class="n">nv</span><span class="o">.</span><span class="n">utilization</span><span class="p">()</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">num_gpus</span><span class="p">)]</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          '[_Utilization(gpu=0, memory=0, enc=0, dec=0),',
          ' _Utilization(gpu=0, memory=0, enc=0, dec=0)]',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>La potencia usada</p>
      </section>
      
      <section class="section-block-markdown-cell">
      <blockquote>
      <p>Esto me viene muy bien, porque cuando entrenaba un modelo y tenía las dos GPUs llenas a veces se me apagaba el ordenador, y viendo la potencia, veo que la segunda consume mucho, por lo que puede que sea lo que yo ya sospechaba, que era por alimentación.</p>
      </blockquote>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="p">[</span><span class="n">nv</span><span class="o">.</span><span class="n">power</span><span class="p">(</span><span class="n">i</span><span class="p">)</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">num_gpus</span><span class="p">)]</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          '[_Power(usage=15.382, limit=350.0), _Power(usage=40.573, limit=350.0)]',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Los relojes de cada GPU</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="p">[</span><span class="n">nv</span><span class="o">.</span><span class="n">clocks</span><span class="p">(</span><span class="n">i</span><span class="p">)</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">num_gpus</span><span class="p">)]</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          '[_Clocks(graphics=0, sm=0, mem=405), _Clocks(graphics=540, sm=540, mem=810)]',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Datos del PCI</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="p">[</span><span class="n">nv</span><span class="o">.</span><span class="n">pcie_throughput</span><span class="p">(</span><span class="n">i</span><span class="p">)</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">num_gpus</span><span class="p">)]</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          '[_PCIeThroughput(rx=0.0, tx=0.0),',
          ' _PCIeThroughput(rx=0.1630859375, tx=0.0234375)]',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <section class="section-block-markdown-cell">
      <p>Y los procesos (ahora no estoy corriendo nada)</p>
      </section>
      
      <CodeBlockInputCell
        text={[
          '<span></span><span class="p">[</span><span class="n">nv</span><span class="o">.</span><span class="n">processes</span><span class="p">(</span><span class="n">i</span><span class="p">)</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">num_gpus</span><span class="p">)]</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      <CodeBlockOutputCell
        text={[
          '[[], []]',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      






    </div>

  </section>

</PostLayout>
