---
import PostLayout from '@layouts/PostLayout.astro';
import CodeBlockInputCell from '@components/CodeBlockInputCell.astro';
import CodeBlockOutputCell from '@components/CodeBlockOutputCell.astro';

const { metadata_page } = await import('@portfolio/consts.json');
const { colors } = await import('@portfolio/consts.json');
const { svg_paths } = await import('@portfolio/consts.json');

const page_title = 'Whisper';
const end_url = 'whisper';
const description = 'üëÇ No llegas a cotillear qu√© dicen los del primero? Con whisper no solo podr√°s, sino que adem√°s si quieres te lo traduce. Entra y aprende c√≥mo';
const keywords = 'whisper, STT, speech to text, ASR, reconocimiento autom√°tico de voz, openai, python';
const languaje = 'ES';
const image_path = 'https://pub-fb664c455eca46a2ba762a065ac900f7.r2.dev/whisper.webp';
const opening_brace = '{';
const closing_brace = '}';
---

<PostLayout 
    title={page_title}
    languaje={languaje}
    description={description}
    keywords={keywords}
    author={metadata_page.author}
    theme_color={colors.background_color}
    end_url={end_url}
    image_path={image_path}
    image_width=1800
    image_height=1010
    image_extension=webp
    article_date=2023-03-19+T00:00:00Z
>

  <section class="post-body">


    <aside class="post-index">
      <a class="anchor-link" href="#Introduccion"><h2>Introducci√≥n</h2></a>
      <a class="anchor-link" href="#Instalacion"><h2>Instalaci√≥n</h2></a>
      <a class="anchor-link" href="#Uso"><h2>Uso</h2></a>
    </aside>


    <div class="post-body-content">
      
      <section class="section-block-markdown-cell">
      <h1 id="Whisper">Whisper<a class="anchor-link" href="#Whisper"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 0" src={svg_paths.link_svg_path}/></a></h1>
      </section>
      
      <section class="section-block-markdown-cell">
      <h2 id="Introduccion">Introducci√≥n<a class="anchor-link" href="#Introduccion"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 1" src={svg_paths.link_svg_path}/></a></h2>
      </section>
      
      <section class="section-block-markdown-cell">
      <p><code>Whisper</code> es un sistema de reconocimiento autom√°tico de voz (automatic speech recognition (ASR)) entrenado en 680.000 horas de datos supervisados ‚Äã‚Äãmultiling√ºes y multitarea recopilados de la web. El uso de un conjunto de datos tan grande y diverso conduce a una mayor solidez ante los acentos, el ruido de fondo y el lenguaje t√©cnico. Adem√°s, permite la transcripci√≥n en varios idiomas, as√≠ como la traducci√≥n de esos idiomas al ingl√©s</p>
      <p><a href="https://openai.com/research/whisper" target="_blank" rel="nofollow noreferrer">Website</a></p>
      <p><a href="https://cdn.openai.com/papers/whisper.pdf" target="_blank" rel="nofollow noreferrer">Paper</a></p>
      <p><a href="https://github.com/openai/whisper" target="_blank" rel="nofollow noreferrer">GitHub</a></p>
      <p><a href="https://github.com/openai/whisper/blob/main/model-card.md" target="_blank" rel="nofollow noreferrer">Model card</a></p>
      </section>
      
      <section class="section-block-markdown-cell">
      <h2 id="Instalacion">Instalaci√≥n<a class="anchor-link" href="#Instalacion"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 2" src={svg_paths.link_svg_path}/></a></h2>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Para poder instalar esta herramienta lo mejor es crearse un nuevo entorno de Anaconda</p>
      </section>
      
      <CodeBlockInputCell
        text={[
      '<span></span><span class="err">!</span><span class="n">conda</span> <span class="n">create</span> <span class="o">-</span><span class="n">n</span> <span class="n">whisper</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      
      <section class="section-block-markdown-cell">
      <p>Entramos al entorno</p>
      </section>
      
      <CodeBlockInputCell
        text={[
      '<span></span><span class="err">!</span><span class="n">conda</span> <span class="n">activate</span> <span class="n">whisper</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      
      <section class="section-block-markdown-cell">
      <p>Instalamos todos los paquetes necesarios</p>
      </section>
      
      <CodeBlockInputCell
        text={[
      '<span></span><span class="err">!</span><span class="n">conda</span> <span class="n">install</span> <span class="n">pytorch</span> <span class="n">torchvision</span> <span class="n">torchaudio</span> <span class="n">pytorch</span><span class="o">-</span><span class="n">cuda</span><span class="o">=</span><span class="mf">11.6</span> <span class="o">-</span><span class="n">c</span> <span class="n">pytorch</span> <span class="o">-</span><span class="n">c</span> <span class="n">nvidia</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      
      <section class="section-block-markdown-cell">
      <p>Por √∫ltimo instalamos <code>whisper</code></p>
      </section>
      
      <CodeBlockInputCell
        text={[
      '<span></span><span class="err">!</span><span class="n">pip</span> <span class="n">install</span> <span class="n">git</span><span class="o">+</span><span class="n">https</span><span class="p">:</span><span class="o">//</span><span class="n">github</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">openai</span><span class="o">/</span><span class="n">whisper</span><span class="o">.</span><span class="n">git</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      
      <section class="section-block-markdown-cell">
      <p>Y actualizamos <code>ffmpeg</code></p>
      </section>
      
      <CodeBlockInputCell
        text={[
      '<span></span><span class="err">!</span><span class="n">sudo</span> <span class="n">apt</span> <span class="n">update</span> <span class="o">&amp;</span></span><span class="o">&amp;</span> <span class="n">sudo</span> <span class="n">apt</span> <span class="n">install</span> <span class="n">ffmpeg</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      
      <section class="section-block-markdown-cell">
      <h2 id="Uso">Uso<a class="anchor-link" href="#Uso"><img decoding="async" class="link-img" width="24px" height="24px" alt="link image 3" src={svg_paths.link_svg_path}/></a></h2>
      </section>
      
      <section class="section-block-markdown-cell">
      <p>Importamos <code>whisper</code></p>
      </section>
      
      <CodeBlockInputCell
        text={[
      '<span></span><span class="kn">import</span><span class="w"> </span><span class="nn">whisper</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      
      <section class="section-block-markdown-cell">
      <p>Seleccionamos el modelo, cuanto m√°s grande mejor lo har√°</p>
      </section>
      
      <CodeBlockInputCell
        text={[
      '<span></span><span class="c1"># model = &quot;tiny&quot;</span>',
      '<span class="c1"># model = &quot;base&quot;</span>',
      '<span class="c1"># model = &quot;small&quot;</span>',
      '<span class="c1"># model = &quot;medium&quot;</span>',
      '<span class="n">model</span> <span class="o">=</span> <span class="s2">&quot;large&quot;</span>',
      '<span class="n">model</span> <span class="o">=</span> <span class="n">whisper</span><span class="o">.</span><span class="n">load_model</span><span class="p">(</span><span class="n">model</span><span class="p">)</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      
      <section class="section-block-markdown-cell">
      <p>Cargamos el audio de este anuncio antiguo (de 1987) de Micro Machines</p>
      <iframe width="560" height="315" src="https://www.youtube.com/embed/zLP6oT3uqV8" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
      </section>
      
      <CodeBlockInputCell
        text={[
      '<span></span><span class="n">audio_path</span> <span class="o">=</span> <span class="s2">&quot;MicroMachines.mp3&quot;</span>',
      '<span class="n">audio</span> <span class="o">=</span> <span class="n">whisper</span><span class="o">.</span><span class="n">load_audio</span><span class="p">(</span><span class="n">audio_path</span><span class="p">)</span>',
      '<span class="n">audio</span> <span class="o">=</span> <span class="n">whisper</span><span class="o">.</span><span class="n">pad_or_trim</span><span class="p">(</span><span class="n">audio</span><span class="p">)</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      
      <CodeBlockInputCell
        text={[
      '<span></span><span class="n">mel</span> <span class="o">=</span> <span class="n">whisper</span><span class="o">.</span><span class="n">log_mel_spectrogram</span><span class="p">(</span><span class="n">audio</span><span class="p">)</span><span class="o">.</span><span class="n">to</span><span class="p">(</span><span class="n">model</span><span class="o">.</span><span class="n">device</span><span class="p">)</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      
      <CodeBlockInputCell
        text={[
      '<span></span><span class="n">_</span><span class="p">,</span> <span class="n">probs</span> <span class="o">=</span> <span class="n">model</span><span class="o">.</span><span class="n">detect_language</span><span class="p">(</span><span class="n">mel</span><span class="p">)</span>',
      '<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&quot;Detected language: </span><span class="si">{</span><span class="nb">max</span><span class="p">(</span><span class="n">probs</span><span class="p">,</span><span class="w"> </span><span class="n">key</span><span class="o">=</span><span class="n">probs</span><span class="o">.</span><span class="n">get</span><span class="p">)</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      
      <CodeBlockOutputCell
        text={[
          'Detected language: en',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
      
      <CodeBlockInputCell
        text={[
      '<span></span><span class="n">options</span> <span class="o">=</span> <span class="n">whisper</span><span class="o">.</span><span class="n">DecodingOptions</span><span class="p">()</span>',
      '<span class="n">result</span> <span class="o">=</span> <span class="n">whisper</span><span class="o">.</span><span class="n">decode</span><span class="p">(</span><span class="n">model</span><span class="p">,</span> <span class="n">mel</span><span class="p">,</span> <span class="n">options</span><span class="p">)</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      
      <CodeBlockInputCell
        text={[
      '<span></span><span class="n">result</span><span class="o">.</span><span class="n">text</span>',
        ]}
        languaje='python'
      ></CodeBlockInputCell>
      
      <CodeBlockOutputCell
        text={[
          '&quot;This is the Micro Machine Man presenting the most midget miniature motorcade of micro machines. Each one has dramatic details, terrific trim, precision paint jobs, plus incredible micro machine pocket play sets. There&#x27;s a police station, fire station, restaurant, service station, and more. Perfect pocket portables to take any place. And there are many miniature play sets to play with and each one comes with its own special edition micro machine vehicle and fun fantastic features that miraculously move. Raise the boat lift at the airport, marina, man the gun turret at the army base, clean your car at the car wash, raise the toll bridge. And these play sets fit together to form a micro machine world. Micro machine pocket play sets so tremendously tiny, so perfectly precise, so dazzlingly detailed, you&#x27;ll want to pocket them all. Micro machines and micro machine pocket play sets sold separately from Galoob. The smaller they are, the better they are.&quot;',
        ]}
        languaje='python'
      ></CodeBlockOutputCell>
















    </div>

  </section>

</PostLayout>
