<?xml version='1.0' encoding='utf-8'?>
<notebook>
  <markdown># Sussurro</markdown>
  <markdown> &gt; Aviso: Este post foi traduzido para o português usando um modelo de tradução automática. Por favor, me avise se encontrar algum erro.</markdown>
  <markdown>## Introdução</markdown>
  <markdown>`Whisper` é um sistema de reconhecimento automático de voz (automatic speech recognition (ASR)) treinado em 680.000 horas de dados multilíngues e multitarefa supervisionados coletados da web. O uso de um conjunto de dados tão grande e diversificado leva a uma maior robustez em relação aos sotaques, ao ruído de fundo e à linguagem técnica. Além disso, permite a transcrição em vários idiomas, bem como a tradução desses idiomas para o inglês.

[Website](https://openai.com/research/whisper)

[Paper](https://cdn.openai.com/papers/whisper.pdf)

[GitHub](https://github.com/openai/whisper)

[Modelo de cartão](https://github.com/openai/whisper/blob/main/model-card.md)
</markdown>
  <markdown>## Instalação</markdown>
  <markdown>Para poder instalar esta ferramenta o melhor é criar um novo ambiente do Anaconda</markdown>
  <input_code>!conda create -n whisper</input_code>
  <markdown>Entramos no ambiente</markdown>
  <input_code>!conda activate whisper</input_code>
  <markdown>Instalamos todos os pacotes necessários</markdown>
  <input_code>!conda install pytorch torchvision torchaudio pytorch-cuda=11.6 -c pytorch -c nvidia</input_code>
  <markdown>Por último instalamos `whisper`</markdown>
  <input_code>!pip install git+https://github.com/openai/whisper.git</input_code>
  <markdown>E atualizamos o `ffmpeg`</markdown>
  <input_code>!sudo apt update &amp;&amp; sudo apt install ffmpeg</input_code>
  <markdown>## Uso</markdown>
  <markdown>Importamos `whisper`</markdown>
  <input_code>import whisper</input_code>
  <markdown>Selecionamos o modelo, quanto maior melhor ele performará</markdown>
  <input_code># model = "tiny"
# model = "base"
# model = "small"
# model = "medium"
model = "large"
model = whisper.load_model(model)</input_code>
  <markdown>Carregamos o áudio deste anúncio antigo (de 1987) das Micro Machines

&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/zLP6oT3uqV8" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen&gt;&lt;/iframe&gt;
</markdown>
  <input_code>audio_path = "MicroMachines.mp3"
audio = whisper.load_audio(audio_path)
audio = whisper.pad_or_trim(audio)</input_code>
  <input_code>mel = whisper.log_mel_spectrogram(audio).to(model.device)</input_code>
  <input_code>_, probs = model.detect_language(mel)
print(f"Detected language: {max(probs, key=probs.get)}")</input_code>
  <output_code>Detected language: en
</output_code>
  <input_code>options = whisper.DecodingOptions()
result = whisper.decode(model, mel, options)</input_code>
  <input_code>result.text</input_code>
  <output_code>"This is the Micro Machine Man presenting the most midget miniature motorcade of micro machines. Each one has dramatic details, terrific trim, precision paint jobs, plus incredible micro machine pocket play sets. There's a police station, fire station, restaurant, service station, and more. Perfect pocket portables to take any place. And there are many miniature play sets to play with and each one comes with its own special edition micro machine vehicle and fun fantastic features that miraculously move. Raise the boat lift at the airport, marina, man the gun turret at the army base, clean your car at the car wash, raise the toll bridge. And these play sets fit together to form a micro machine world. Micro machine pocket play sets so tremendously tiny, so perfectly precise, so dazzlingly detailed, you'll want to pocket them all. Micro machines and micro machine pocket play sets sold separately from Galoob. The smaller they are, the better they are."</output_code>
</notebook>